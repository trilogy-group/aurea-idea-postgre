package com.big;

/*
 * Copyright (c) 2004-2014 by Aurea, Inc. All Rights Reserved.
 * All use, reproduction, transfer, publication or disclosure is prohibited
 * except as may be expressly permitted in the applicable license agreement.
 *
 *  THIS FILE IS GENERATED.  DO NOT EDIT THIS FILE DIRECTLY.
 */



import com.pantero.runtime.lock.LockSupervisor;
import com.pantero.runtime.dataservice.DataServiceEntityDelegate;
import com.bigschema.BIGAcknowledgement;
import com.bigschema.BIGRequest;
import com.bigschema.BIGResponse;

public class BIGDataService extends DataServiceEntityDelegate {

	public BIGDataService() {
		super("BIGDataService");
	}
	

	/*
	 * Delegating method to PostServiceRequest on BIGDataService
	 */
	public BIGAcknowledgement PostServiceRequest(
 			final BIGRequest Parameter1) {
		final BIGDataServiceImpl _dataservice = new BIGDataServiceImpl(getConfigurationName("PostServiceRequest"));
		initialize(_dataservice);
		BIGAcknowledgement _result = null;
		try {
			_result = (BIGAcknowledgement)new LockSupervisor() {
				public Object execute() {
					return _dataservice.PostServiceRequest(
 							Parameter1);
				}
			}.executeWithReadLock();
		} catch (Throwable e) {
			_dataservice.rollback();
			if (e instanceof RuntimeException)
				throw (RuntimeException)e;
			throw new RuntimeException(e);
		} finally {
		  shutdown(_dataservice, "PostServiceRequest", _result, true);
		}
		return _result;
	}

	/*
	 * Delegating method to Convert on BIGDataService
	 */
	public BIGResponse Convert(
 			final BIG Parameter1) {
		final BIGDataServiceImpl _dataservice = new BIGDataServiceImpl(getConfigurationName("Convert"));
		initialize(_dataservice);
		BIGResponse _result = null;
		try {
			_result = (BIGResponse)new LockSupervisor() {
				public Object execute() {
					return _dataservice.Convert(
 							Parameter1);
				}
			}.executeWithReadLock();
		} catch (Throwable e) {
			_dataservice.rollback();
			if (e instanceof RuntimeException)
				throw (RuntimeException)e;
			throw new RuntimeException(e);
		} finally {
		  shutdown(_dataservice, "Convert", _result, true);
		}
		return _result;
	}
}
