<?xml version='1.0' encoding='UTF-8'?>
<DomainSchema xmlns='http://www.pantero.com/metamodel2' isSynthetic='false' name='org.acord.ACORDInformationModel' preserveWhitespaces='false'>
  <Package isSynthetic='true' name='org.acord' javaPackage='org.acord'>
  </Package>
  <Package isSynthetic='false' name='AF_IM 2.3' originalName='AF_IM 2.x' javaPackage='org.acord.aim' owningPackage='org.acord'>
    <Description>The ACORD Framework Information Model v2.x is an extensive insurance object model covering most of the insurance domain areas. It contains a large number of documented classes spanning:
* Life (group and individual)
* Health
* Annuities
* Reinsurance
* Property (structures, vehicles, objects, etc.)
* Casualty (liability, workers compensation, etc.)
* Surety
* Large Commercial
</Description>
  </Package>
  <Package isSynthetic='true' name='Activity' originalName='Activity' javaPackage='org.acord.aim.Activity' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>ff8040</Value>
    </UserAnnotation>
    <Description>The Activity package defines the various activities that are associated with the insurance business, especially those in the underwriting and claims management areas.

During the underwriting process, insurance company needs to understand its exposed risk, based on the activities performed by the insured, either professionally or privately. For example, an insurance company may decide not to cover certain occupations or hobbies or may request an additional premium for the added risk.

During the claims management process, the insurance company needs to understand the circumstances that surround the loss event resulting in a claim. Activities describe what the different parties were doing at the time of the loss event.</Description>
  </Package>
  <Package isSynthetic='true' name='Activity Code Lists' originalName='Activity Code Lists' javaPackage='org.acord.aim.Activity.ActivityCodeLists' owningPackage='Activity'>
    <Description>This sub-package contains all references needed by the Activity package.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement' originalName='Agreement' javaPackage='org.acord.aim.Agreement' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>ffff00</Value>
    </UserAnnotation>
    <Description>The agreement package defines the various agreements, including related components, that are associated with the insurance business. The term "agreement" is inclusive of the terms "contract" and/or "policy".

While most of the content in this package is specific to core insurance agreements, the scope of this package includes related agreements, such as employment agreements and producer agreements, which serve to support core insurance operations.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Clause' originalName='Agreement Clause' javaPackage='org.acord.aim.Agreement.AgreementClause' owningPackage='Agreement'>
    <Description>This sub-package includes details related to clauses around financial service agreements.

A clause can be associated at different levels in the contract. For example, a clause may be defined for the entire contract or for a given coverage. Some common examples include an exclusion clause or circumstance clause.

The clause is defined at the product level and referenced by a given agreement component  (for example, a specific coverage).</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Code Lists' originalName='Agreement Code Lists' javaPackage='org.acord.aim.Agreement.AgreementCodeLists' owningPackage='Agreement'>
    <Description>This sub-package contains all references needed by Agreement package.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Component Subtypes' originalName='Agreement Component Subtypes' javaPackage='org.acord.aim.Agreement.AgreementComponentSubtypes' owningPackage='Agreement'>
    <Description>This sub-package defines the various components utilized to construct an agreement.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Element Subtypes' originalName='Agreement Element Subtypes' javaPackage='org.acord.aim.Agreement.AgreementElementSubtypes' owningPackage='Agreement'>
    <Description>This sub-package defines concepts attached to agreement components, such as: limits, deductibles, etc.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Feature Component Subtypes' originalName='Agreement Feature Component Subtypes' javaPackage='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes' owningPackage='Agreement'>
    <Description>This sub-package defines  agreement feature components and their relationships to their corresponding product feature specifications  available on the product from which the agreement is based.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Premium' originalName='Agreement Premium' javaPackage='org.acord.aim.Agreement.AgreementPremium' owningPackage='Agreement'>
    <Description>This sub-package details information related to premium and premium management. 

The core concept is the represented by the ContractPremium class, which is the class that will be billed by the company.

That being said, the pattern of this sub-package makes it possible to ventilate the premium details according to the context you're interested in (per coverage / per insured object).</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Request' originalName='Agreement Request' javaPackage='org.acord.aim.Agreement.AgreementRequest' owningPackage='Agreement'>
    <Description>This sub-package defines requests associated with an agreement. The requests may involve an existing agreement or a request for issuing a new one, or a request for executing a transaction or service according to the terms and conditions of an agreement. Requests may be initiated by the modeled organization or any other third party.</Description>
  </Package>
  <Package isSynthetic='true' name='Driver Party Role' originalName='Driver Party Role' javaPackage='org.acord.aim.Agreement.DriverPartyRole' owningPackage='Agreement'>
    <Description>This sub-package defines concepts relevant to drivers of vehicles designed for use on land (e.g. automobile, truck, etc.). Here, the drivers are associated with an agreement.</Description>
  </Package>
  <Package isSynthetic='true' name='Financial Services Agreement Subtypes' originalName='Financial Services Agreement Subtypes' javaPackage='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes' owningPackage='Agreement'>
    <Description>Groups subtypes of agreement.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role In Agreement' originalName='Party Role In Agreement' javaPackage='org.acord.aim.Agreement.PartyRoleInAgreement' owningPackage='Agreement'>
    <Description>This sub-package defines roles for parties associated with an agreement, regardless of whether or not the roles are covered by the agreement or one of its components.</Description>
  </Package>
  <Package isSynthetic='true' name='Reinsurance Agreement Subtypes' originalName='Reinsurance Agreement Subtypes' javaPackage='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes' owningPackage='Agreement'>
    <Description>This sub-package defines concepts involving Reinsurance Agreements. It enables to model all the information needed to qualify a reinsurance agreement, which is the basis for reinsurance management.</Description>
  </Package>
  <Package isSynthetic='true' name='Reinsurance Facultative Agreement Subtypes' originalName='Reinsurance Facultative Agreement Subtypes' javaPackage='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes' owningPackage='Agreement'>
    <Description>This sub-package covers the definition of facultatives, facultatives being sub-types of agreements between a cedent and a reinsurer.

A Facultative reinsurance is set up to re-insure a specific contract; it means the risk is taken in charge by this reinsurance contract that cannot be re-insured under a mandatory treaty.

Facultative reinsurance is issued on an individual analysis of the situation and facts of the underlying policy.

It may cover all or part of the underlying policy. By deciding coverage case by case, the reinsurer can determine if it wants the risk associated with that particular policy.

Facultative reinsurance is used by the reinsured to reduce the chance of loss or risk associated with a certain policy.</Description>
  </Package>
  <Package isSynthetic='true' name='Reinsurance Treaty Agreement Subtypes' originalName='Reinsurance Treaty Agreement Subtypes' javaPackage='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes' owningPackage='Agreement'>
    <Description>This sub-package covers the definition of treaties, treaties being sub-types of agreements between a cedent and a reinsurer.
Treaties correspond to mandatory re-insurance. Mandatory reinsurance is the re-insurance of any contract that falls within the limit of the treaty. It is the most common.

Treaty reinsurance is written to cover a particular class of policies issued by the reinsured.

Treaty reinsurance automatically passes the risk to the reinsurer for all policies that are covered by the treaty, not just one particular policy.
Treaty policies are more general than facultative policies because the reinsurance decision is based on general potential liability rather than on a specific enumerated risk.

There are two types of reinsurance treaty:  Proportional Treaty and Non-Proportional treaty. 

The first one is used to split the premium and the insured capital equally between the insurer and the re-insurer as well as the claim amount: this is the share. The second one is non-proportional treaty; the re-insurer covers until a certain amount (capacity) the excess of claim fixed amount (priority). In this category is also excess treaty and stop loss treaty.

The re-insurer can specify the type of risk that will be covered by the treaty.</Description>
  </Package>
  <Package isSynthetic='true' name='Risk Agreement Subtypes' originalName='Risk Agreement Subtypes' javaPackage='org.acord.aim.Agreement.RiskAgreementSubtypes' owningPackage='Agreement'>
    <Description>Groups subtypes of risk agreement.</Description>
  </Package>
  <Package isSynthetic='true' name='Assessment and Condition' originalName='Assessment and Condition' javaPackage='org.acord.aim.AssessmentandCondition' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>00ff40</Value>
    </UserAnnotation>
    <Description>The Assessment type is used to represent the results of an evaluation based on a subjective opinion or a scientific approach. Condition is the state of a place, a physical object, or an activity existing at a given point in time. 

The ASSESSMENT and CONDITION package makes it possible to model conditions that are of interest to any party. This modeling describes both the information that is required about these conditions and their relevance to financial services operations; for example, underwriting and claims management. 
A condition can apply to places (for example, the pollution of a beach), human beings (for example, a person having a broken leg), physical objects (for example, a dented car) and social activities (for example, a canceled sports event).

An assessment result represents the outcome of an evaluation based on a subjective opinion or a scientific approach.</Description>
  </Package>
  <Package isSynthetic='true' name='Assessment and Condition Code Lists' originalName='Assessment and Condition Code Lists' javaPackage='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists' owningPackage='Assessment and Condition'>
    <Description>This sub-package contains all references needed by the Assessment and Condition package.</Description>
  </Package>
  <Package isSynthetic='true' name='Assessment Result Subtypes' originalName='Assessment Result Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package holds classes that are the result of an assessment, based on either an expert opinion or a subjective opinion. This includes scores (of parties, market segments, policies, and places) calculated for risk assessment, marketing or other purposes, financial valuations (of parties, market segments, agreements and physical objects) and conditions (of places, physical objects and activity occurrences).</Description>
  </Package>
  <Package isSynthetic='true' name='Damage Condition Subtypes' originalName='Damage Condition Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package provides details around the condition of damage usually in the context of a physical object.</Description>
  </Package>
  <Package isSynthetic='true' name='Financial Valuation Subtypes' originalName='Financial Valuation Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes' owningPackage='Assessment and Condition'>
    <Description>A sub-package groups all the subtypes of a financial valuation.</Description>
  </Package>
  <Package isSynthetic='true' name='Immaterial Damage Subtypes' originalName='Immaterial Damage Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.ImmaterialDamageSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package contains details around immaterial damage.</Description>
  </Package>
  <Package isSynthetic='true' name='Material Damage Subtypes' originalName='Material Damage Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.MaterialDamageSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package contains details around material damage.</Description>
  </Package>
  <Package isSynthetic='true' name='Medical Assessment Subtypes' originalName='Medical Assessment Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.MedicalAssessmentSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package captures details around the medical assessments (examinations and tests) and how they relate to parties involved.</Description>
  </Package>
  <Package isSynthetic='true' name='Person Damage Subtypes' originalName='Person Damage Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.PersonDamageSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package contains details specifically designed around damage caused to persons.</Description>
  </Package>
  <Package isSynthetic='true' name='Risk Exposure' originalName='Risk Exposure' javaPackage='org.acord.aim.AssessmentandCondition.RiskExposure' owningPackage='Assessment and Condition'>
    <Description>This sub-package defines various exposures to a risk and/or the possibility, or likelihood, of a damage or a loss to occur including exposure to a peril category.</Description>
  </Package>
  <Package isSynthetic='true' name='Score Subtypes' originalName='Score Subtypes' javaPackage='org.acord.aim.AssessmentandCondition.ScoreSubtypes' owningPackage='Assessment and Condition'>
    <Description>This sub-package groups all the subtypes of score.

The Score class is designed to capture details related to a valued score placed on a person, activity, agreement or other subject area in the model. This score is used during the risk assessment process as well as the underwriting process.</Description>
  </Package>
  <Package isSynthetic='true' name='Category' originalName='Category' javaPackage='org.acord.aim.Category' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>0080ff</Value>
    </UserAnnotation>
    <Description>The Category package makes it possible to model a dynamic categorization of the objects in the business model (InformationModelObjects) by defining sets of objects and by allowing an object to belong to multiple sets at a time.

The membership of an InformationModelObject in a category does not affect the definition of the object or its inheritance structure. Additionally, the set of categories an InformationModelObject belongs to can change during its lifetime.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim' originalName='Claim' javaPackage='org.acord.aim.Claim' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>8b17ff</Value>
    </UserAnnotation>
    <Description>This package defines all concepts associated with claims, including relationships to loss event(s) and agreement(s). 

A claim is created when a loss event occurs. One event may generate multiple claims if multiple agreements are impacted.

Claims can be associated with other claims, each of them being related to an agreement and possibly many claim coverages.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Code Lists' originalName='Claim Code Lists' javaPackage='org.acord.aim.Claim.ClaimCodeLists' owningPackage='Claim'>
    <Description>This sub-package contains all references of Claim domain.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Element Subtypes' originalName='Claim Element Subtypes' javaPackage='org.acord.aim.Claim.ClaimElementSubtypes' owningPackage='Claim'>
    <Description>This sub-package allows to manage claim coverage concept.
A claim coverage correspond to a coverage involved in a claim (which cover the loss).
It will be the following point for all claim cost (thanks to ClaimFinancialBreakdown).</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Financial Benefit' originalName='Claim Financial Benefit' javaPackage='org.acord.aim.Claim.ClaimFinancialBenefit' owningPackage='Claim'>
    <Description>This sub-package manages claim financial benefits. 
A claim financial benefit correspond to the financial compensation for the related prejudice. This compensation may be a service, financial compensation or both.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Offer' originalName='Claim Offer' javaPackage='org.acord.aim.Claim.ClaimOffer' owningPackage='Claim'>
    <Description>This sub-package defines a claim offer and its relationship with other claim concepts, such as the claim, damage, and coverage.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Recovery' originalName='Claim Recovery' javaPackage='org.acord.aim.Claim.ClaimRecovery' owningPackage='Claim'>
    <Description>This sub-package allows the definition of all business elements related to recovery management (received and submitted recovery, contested recovery ...).

- ReceivedRecovery : an adversary insurance company sends a recovery. If no contest is performed, this will start a payment process (money out).
- SubmittedRecovery : a recovery is sent to the adversary insurance company, this will start a collection process (money in)
- ContestedReceivedRecovery : the insurance company contests the received recovery and if it wins, it will then be reimbursed.
- ContestedSubmittedRecovery : the adversary insurance company contests a recovery and then the insurance company will need to reimburse the recovery amount.


Recoveries are defined as specific subtypes of BusinessFinancialBase, which allows to manage the link with financial elements (related collections or disbursements)</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Reserve Entry Detail' originalName='Claim Reserve Entry Detail' javaPackage='org.acord.aim.Claim.ClaimReserveEntryDetail' owningPackage='Claim'>
    <Description>This sub-package defines the reserves related to a Claim management.
A reserve may be define for different level (Claim, Damage or coverage). 

Reserve types usually are :
- reserve for benefit
- reserve for recovery</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Subtypes' originalName='Claim Subtypes' javaPackage='org.acord.aim.Claim.ClaimSubtypes' owningPackage='Claim'>
    <Description>This sub-package holds all subtypes of the base class Claim. This includes incoming and outgoing claims as well as reinsurance and subrogation claims.</Description>
  </Package>
  <Package isSynthetic='true' name='Loss Occurrence' originalName='Loss Occurrence' javaPackage='org.acord.aim.Claim.LossOccurrence' owningPackage='Claim'>
    <Description>This sub-package deals with the notice of loss, which is the first step of a claim opening procedure.

A loss notification will allow the creation of a loss event, which will define the event cause, event location, event circumstances, event date.

The Event package is used to identify events and then several loss events can be related to a same master event. Natural Events are known out of the insurance company ( for example, a natural disaster).

The claim is not yet present at this stage and will be defined from the loss event. A loss Event may lead to several claims (at least one claim for each contract)</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role In Claim Subtypes' originalName='Party Role In Claim Subtypes' javaPackage='org.acord.aim.Claim.PartyRoleInClaimSubtypes' owningPackage='Claim'>
    <Description>This sub-package includes all party roles related to the Claims subject area.

e.g Claimant, Insurance Provider, Witness, Claim Representative</Description>
  </Package>
  <Package isSynthetic='true' name='Common Elements' originalName='Common Elements' javaPackage='org.acord.aim.CommonElements' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>ff80ff</Value>
    </UserAnnotation>
    <Description>Common Elements contains classes and enumerations that are used throughout the model. That is, elements that are orthogonal to the model.

Primitive Data Types sub-package contains all base data types.  These classes are defined within the Information Model to ease import/export capabilities. All attributes in the model use the data types defined in this sub-package.

A key class found within the base package is the InformationModelObject, which is the parent of every top-level class in the model.</Description>
  </Package>
  <Package isSynthetic='true' name='Common Classes' originalName='Common Classes' javaPackage='org.acord.aim.CommonElements.CommonClasses' owningPackage='Common Elements'>
    <Description>This sub-package contains classes reused throughout the model and thus have no logical home within any other package or sub-package. It contains reference classes that provide generic information that is available to all packages.</Description>
  </Package>
  <Package isSynthetic='true' name='Common Code Lists' originalName='Common Code Lists' javaPackage='org.acord.aim.CommonElements.CommonCodeLists' owningPackage='Common Elements'>
    <Description>This sub-package contains all references used throughout the ACORD Information Model. 

By definition, references that are only used by one class should be placed within the same package as the class.</Description>
  </Package>
  <Package isSynthetic='true' name='Complex Data Types' originalName='Complex Data Types' javaPackage='org.acord.aim.CommonElements.ComplexDataTypes' owningPackage='Common Elements'>
    <Description>These complex data types are used throughout the model.

While some of these types exist within either the meta-model for the UML, or within specific tools' UML profiles, the inconsistency between the source for these data types has led ACORD to embed them right within the model. This makes the model more portable between UML tools.

In addition, since this is a conceptual model, only the data type concepts need to be represented. Technical representations - or representations for the benefit of tooling (e.g., code generators) is the responsibility of users of the model as they move to analysis or design level versions of the model.</Description>
  </Package>
  <Package isSynthetic='true' name='Primitive Data Types' originalName='Primitive Data Types' javaPackage='org.acord.aim.CommonElements.PrimitiveDataTypes' owningPackage='Common Elements'>
    <Description>These data types are used throughout the model. 

While some of these types exist within either the meta-model for the UML, or within specific tools' UML profiles, the inconsistency between the source for these data types has led ACORD to embed them right within the model. This makes the model more portable between UML tools.

In addition, since this is a conceptual model, only the data type concepts need to be represented. Technical representations - or representations for the benefit of tooling (e.g., code generators) is the responsibility of users of the model as they move to analysis or design level versions of the model.</Description>
  </Package>
  <Package isSynthetic='true' name='Contact and Place' originalName='Contact and Place' javaPackage='org.acord.aim.ContactandPlace' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>bd9e33</Value>
    </UserAnnotation>
    <Description>This package defines all concepts associated with contact and place. Contact includes the party acting as the "contact point" as well as the related contact options (e.g. telephone, email, etc.) and preferences. Place includes the physical location at which the contact can be found.

e.g. Jane Doe is the contact person involving a claim. She prefers to be contacted by telephone during day time hours at her work telephone, and secondarily be contacted evenings via her home telephone. If unable to reach her by telephone, she can be contacted via email. All postal mail directed to Jane Doe should be mailed to her preferred mailing address.</Description>
  </Package>
  <Package isSynthetic='true' name='Address Subtypes' originalName='Address Subtypes' javaPackage='org.acord.aim.ContactandPlace.AddressSubtypes' owningPackage='Contact and Place'>
    <Description>This sub-package provides a mechanism for capturing data about identifying and locating a resource, such as a physical/geographic place or virtual place (e.g. web page, email box).</Description>
  </Package>
  <Package isSynthetic='true' name='Communication Profile Subtypes' originalName='Communication Profile Subtypes' javaPackage='org.acord.aim.ContactandPlace.CommunicationProfileSubtypes' owningPackage='Contact and Place'>
    <Description>Profiles for communication indicate the preferences and needs of individuals, including any special needs and language preferences. This concept is closely related, and associated to, ContactPreference.</Description>
  </Package>
  <Package isSynthetic='true' name='Contact Code Lists' originalName='Contact Code Lists' javaPackage='org.acord.aim.ContactandPlace.ContactCodeLists' owningPackage='Contact and Place'>
    <Description>This sub-package contains all references used by the Contact and Place package.</Description>
  </Package>
  <Package isSynthetic='true' name='Contact Point Subtypes' originalName='Contact Point Subtypes' javaPackage='org.acord.aim.ContactandPlace.ContactPointSubtypes' owningPackage='Contact and Place'>
    <Description>This sub-package provides a mechanism for capturing data about contacting a role or party.  

By definition a contact point is an identification, or partial identification, defining the method and destination of a communication contact with a role or party. Specific contact points are broken down to relate to specific communication media: postal address, telephone number, and electronic address.</Description>
  </Package>
  <Package isSynthetic='true' name='Contact Preference Details' originalName='Contact Preference Details' javaPackage='org.acord.aim.ContactandPlace.ContactPreferenceDetails' owningPackage='Contact and Place'>
    <Description>This package provides a mechanism for putting rules and restrictions around how a contact point or contact portfolio prefers to be contacted.</Description>
  </Package>
  <Package isSynthetic='true' name='Country Element Subtypes' originalName='Country Element Subtypes' javaPackage='org.acord.aim.ContactandPlace.CountryElementSubtypes' owningPackage='Contact and Place'>
    <Description>Country Element contain the interchangeable (between different countries, for example) parts of Addresses. These same elements can be used outside of Address if necessary.

In short, an Address is made up of whatever country elements are applicable for a given country. In Canada, Province, Territory, and Cities are used. In the United States, State and City are used. 

There are clearly more combinations that apply for specific countries and the associations are meant to be changed as needed. The default associations are meant to illustrate sample ways the CountryElements can be arranged.</Description>
  </Package>
  <Package isSynthetic='true' name='Place Subtypes' originalName='Place Subtypes' javaPackage='org.acord.aim.ContactandPlace.PlaceSubtypes' owningPackage='Contact and Place'>
    <Description>This sub-package represents details around a logical area bounded by nature, by one or a series of country elements, by an external authority (such as a government) or for an internal business purpose.

This generalization makes it easier to identify locations as they relate to risk management.</Description>
  </Package>
  <Package isSynthetic='true' name='Document and Communication' originalName='Document and Communication' javaPackage='org.acord.aim.DocumentandCommunication' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>0000ff</Value>
    </UserAnnotation>
    <Description>This package defines concepts associated with documents and communication. The document concept applies to all types of documents (e.g. an expert report, a letter with free text, passport, etc.). The communication concept applies to the receiving or sending (or the intention to send) of a communication between two parties and includes the communication content (e.g. text, sound, image, etc.). A communication may be in any medium such as a telephone call, a letter, a fax, an email, a meeting, and so on.  From a timing perspective, the scope of communication includes past, present, or planned/future.</Description>
  </Package>
  <Package isSynthetic='true' name='Accounting Document Subtypes' originalName='Accounting Document Subtypes' javaPackage='org.acord.aim.DocumentandCommunication.AccountingDocumentSubtypes' owningPackage='Document and Communication'>
    <Description>This sub-package contains all documents related to accounting   management  (premium call, receipt ...)</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Document Subtypes' originalName='Agreement Document Subtypes' javaPackage='org.acord.aim.DocumentandCommunication.AgreementDocumentSubtypes' owningPackage='Document and Communication'>
    <Description>This sub-package defines concepts involving any document related to an agreement. This could be in the form of a printed policy form, declarations page, coverage letter or other types of agreement documents.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Document Subtypes' originalName='Claim Document Subtypes' javaPackage='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes' owningPackage='Document and Communication'>
    <Description>This sub-package defines concepts associated with Claim Documents.
It allows the creation of representations of documents related to claim management issues and their possible use.</Description>
  </Package>
  <Package isSynthetic='true' name='Communication Content Specification Subtypes' originalName='Communication Content Specification Subtypes' javaPackage='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes' owningPackage='Document and Communication'>
    <Description>This sub-package defines concepts involving any textual element that can be used to form a document template. The elementary components of a template are either static or dynamic pieces of text. In addition, the elementary building blocks can be combined in any combination to form a document section.</Description>
  </Package>
  <Package isSynthetic='true' name='Document and Communication Code Lists' originalName='Document and Communication Code Lists' javaPackage='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists' owningPackage='Document and Communication'>
    <Description>This sub-package contains all references used  by Document and Communication package</Description>
  </Package>
  <Package isSynthetic='true' name='Document Subtypes' originalName='Document Subtypes' javaPackage='org.acord.aim.DocumentandCommunication.DocumentSubtypes' owningPackage='Document and Communication'>
    <Description>This sub-package allows the creation of representations of documents and their possible use.

A document as described in this sub-package is a system representation of any document. 

The model shows generic documents such as letters, reports such as expert reports, invoices, medical forms, etc., Id documents and business requests. Document management  covers the follow up on the document status and its use in business processes. This is in addition to composing documents by attaching other documents to them, and to replacing them by other ones.</Description>
  </Package>
  <Package isSynthetic='true' name='Event' originalName='Event' javaPackage='org.acord.aim.Event' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>bb005e</Value>
    </UserAnnotation>
    <Description>The Event package contains information about events that is of interest to the insurance organization.

There are three main ideas that form the base of this package:

1. Life Event - e.g. birth date

2. Natural Event - e.g. Hurricane, Tornado, Earthquake

3. Loss Event - Events that result in a loss to an party or object that may or may not be covered by an insurance agreement.</Description>
  </Package>
  <Package isSynthetic='true' name='Event Code Lists' originalName='Event Code Lists' javaPackage='org.acord.aim.Event.EventCodeLists' owningPackage='Event'>
    <Description>This sub-package contains all references used  by the Event package.</Description>
  </Package>
  <Package isSynthetic='true' name='Natural Event Subtypes' originalName='Natural Event Subtypes' javaPackage='org.acord.aim.Event.NaturalEventSubtypes' owningPackage='Event'>
    <Description>This sub-package defines concepts involving events that occur naturally (hurricane, tornado, etc).  Such events are depicted because of their ability to cause damages that trigger loss and claims activities.</Description>
  </Package>
  <Package isSynthetic='true' name='Finance' originalName='Finance' javaPackage='org.acord.aim.Finance' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>408080</Value>
    </UserAnnotation>
    <Description>The Finance package orients primarily around the finances of an insurance company as seen from an accountant's perspective. There are two main ideas that form the base of the package:

1. Accounts - including physical accounts such as a bank account and logical accounts such accounting accounts that involve entries in a journal or logical accounts for budget allocation.

2. Financial Activities - information about the kinds of financial "things" (e.g., processes, transactions) that involve finances (e.g., money, stock, accounting adjustments). The most basic types of activities that involve money coming into or out of the insurance company. 

Underlying the Finance package is the notion of a financial provision. Provision is used to explain how funds are allocated. For example, the way money is allocated (or provisioned) to pay commissions. Again, the Information Model contains information about these provisions.</Description>
  </Package>
  <Package isSynthetic='true' name='Account Subtypes' originalName='Account Subtypes' javaPackage='org.acord.aim.Finance.AccountSubtypes' owningPackage='Finance'>
    <Description>Account in this context involves two types:

1. Physical accounts - such as a bank account or investment account. These types of accounts are all third party accounts. An exception to this is an AssetHolding, which is likely the holding of an insured.

2. Logical accounts - these are the accountant's view of an account, which orients around logical groupings for things like budget allocation and tracking. These types of accounts all fall under the concept of GeneralAccount.

AccountEntry is main idea for general accounts. The entries are conceptually similar to an accounting journal (in fact, the AccountEntry is a the granular idea for a Journal in the model).</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Financial Activity' originalName='Agreement Financial Activity' javaPackage='org.acord.aim.Finance.AgreementFinancialActivity' owningPackage='Finance'>
    <Description>Perhaps the most important (an common) financial activities involve agreements; both policies and non-policy agreements (e.g., vendor agreements). Included in these concepts is the idea of fund allocations, for saving contracts or policies. 

Outgoing funds (i.e., MoneyOutActivity) including ideas such as contract loan payments and surrenders. Incoming funds (i.e., MoneyInActivity) include ideas such as premium collection (which are broken down into the specific premium parts the money is applied to) and policy loan repayments.

Throughout the sub-package, relevant parts of the model are related - for example, the agreement component(s) that a premium payment is being applied to.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Investment Activity' originalName='Agreement Investment Activity' javaPackage='org.acord.aim.Finance.AgreementInvestmentActivity' owningPackage='Finance'>
    <Description>This sub-package, while rather under-developed provides the placeholder for financial activities involving policies that have investment elements (i.e., life policies). Since implementations of the nature of investment operations can vary significantly, the model only captures basic information including trade orders and how funds are allocated.

Implementors of the model are expected to add their own financial operations and details.</Description>
  </Package>
  <Package isSynthetic='true' name='Agreement Loan' originalName='Agreement Loan' javaPackage='org.acord.aim.Finance.AgreementLoan' owningPackage='Finance'>
    <Description>This sub-package details the problematics related to contract loan management.

A contract loan (or policy loan) is a loan made by a life insurance company from its general funds to a policy owner on the security of the cash value of a policy. Generally, loans may reduce the policy's death benefit and cash value.

Loans are usually performed on life savings contracts.</Description>
  </Package>
  <Package isSynthetic='true' name='Bank Account' originalName='Bank Account' javaPackage='org.acord.aim.Finance.BankAccount' owningPackage='Finance'>
    <Description>A bank account is the traditional idea of a place to hold and exchange money through a bank. 
The only concept - BankAccount has important associations that outline the meaning of the concept, including using the account for financial operations.</Description>
  </Package>
  <Package isSynthetic='true' name='Claim Financial Activity' originalName='Claim Financial Activity' javaPackage='org.acord.aim.Finance.ClaimFinancialActivity' owningPackage='Finance'>
    <Description>This sub-package shows the concepts related to paying claims (out) and receiving claims funds (for example, through subrogation). 

Like most financial operations, MoneyOutActivity and MoneyInActivity are the main concepts. The claim funds are broken down into atomic parts (where necessary) with the ClaimFinancialBeakdown concept. The actual claim (ClaimCoverage and Damage) are related to the payments/receipts using ClaimFinancialBreakdown.

Otherwise, sub-types of ClaimMoneyOut and ClaimMoneyIn show the different types of claim payments that can be made or received.</Description>
  </Package>
  <Package isSynthetic='true' name='Commission Fee Tax Financial Activity' originalName='Commission Fee Tax Financial Activity' javaPackage='org.acord.aim.Finance.CommissionFeeTaxFinancialActivity' owningPackage='Finance'>
    <Description>Commissions are an important element of an insurance company's financial operations. Whether commissions are paid or refunded, it's important for commissions to be explicitly identified, which is the nature of this simple sub-package. 

MoneyInActivity and MoneyOutActivity serve as the basis for the commission-specific concepts, such as refunds or settlements.</Description>
  </Package>
  <Package isSynthetic='true' name='Finance Code Lists' originalName='Finance Code Lists' javaPackage='org.acord.aim.Finance.FinanceCodeLists' owningPackage='Finance'>
    <Description>This sub-package contains all references used by the Finance package.</Description>
  </Package>
  <Package isSynthetic='true' name='Financial Activity Subtypes' originalName='Financial Activity Subtypes' javaPackage='org.acord.aim.Finance.FinancialActivitySubtypes' owningPackage='Finance'>
    <Description>The base building blocks of financial activities are contained in the Financial Activity sub-package. The most commonly used concepts are MoneyInActivity and MoneyOutActivity.

However, there are other kinds of financial operations contained within the model, including TradeOrder, AccountToAccountAllocationActivity, and AdjustmentActivity. Collectively, they represent information about all the "things" you can do with finances in insurance.

At this level (i.e., within this package), you will find not only the core concepts, but also the core relationship with other concepts in the model. For example, the fundamental relationship between FinancialActivity and Currency.</Description>
  </Package>
  <Package isSynthetic='true' name='Financial Provision Subtypes' originalName='Financial Provision Subtypes' javaPackage='org.acord.aim.Finance.FinancialProvisionSubtypes' owningPackage='Finance'>
    <Description>A financial provision is an allocation of some kind of fund or investment for a specific purpose. FinancialProvision is the core concept of this sub-package, which extends to provides details about the kinds of provisions that exist in the model.

Fundamentally, the Information Model breaks down provisions into a "main" part (i.e., FinancialProvision) and atomic parts (i.e., FinancialProvisionElement). You use the main part as the whole and the atomic parts to add details.

For example, you can create a Premium FinancialProvision and add the parts for Commission, Charge, and PurePremium.</Description>
  </Package>
  <Package isSynthetic='true' name='Financial Scheduler Subtypes' originalName='Financial Scheduler Subtypes' javaPackage='org.acord.aim.Finance.FinancialSchedulerSubtypes' owningPackage='Finance'>
    <Description>A financial scheduler is used to describe information about payments (made or received) that happen on some regular interval. It also describes on a more general level, the idea of installments, which usually happen on some interval.

In the model, all payments (in and out) are "scheduled," even if they are just one-time payments. 

The main concept within this sub-package is FinancialScheduler, which is extended for outbound (FinancialOutScheduler) and inbound (FinancialInScheduler) payments. In addition, the notion of Installment (which is not a subtype of FinancialScheduler). 

At this level, you will find the core relationships with things like FinancialActivity (and the relevant sub-types of FinancialActivity) and AccountEntry (et al.).</Description>
  </Package>
  <Package isSynthetic='true' name='Installment Subtypes' originalName='Installment Subtypes' javaPackage='org.acord.aim.Finance.InstallmentSubtypes' owningPackage='Finance'>
    <Description>The Installment Subtypes Sub-Package accounts for the concept of financial installments, whether they qualify as money-in (e.g. receivable) or money-out (e.g. payable) within the scope of finance, schedules, payment methods and the like, including associations to agreements and/or claims.</Description>
  </Package>
  <Package isSynthetic='true' name='Payment Method Subtypes' originalName='Payment Method Subtypes' javaPackage='org.acord.aim.Finance.PaymentMethodSubtypes' owningPackage='Finance'>
    <Description>Ultimately, many finance-related concepts result in payments and those payments are handled through some physical means. This sub-package captures basic information about those means (or methods) including cash, check, and electronic funds transfers.

ACORD did not attempt to model the entire set of information about payment methods since other models in the banking industry are probably better suited for such information (and insurance companies don't always keep such fine-grained information). However, the core concepts are represented and connected to both MoneyInOperation and MoneyOutOperation, the two most often used financial operations.</Description>
  </Package>
  <Package isSynthetic='true' name='Investment' originalName='Investment' javaPackage='org.acord.aim.Investment' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>59d068</Value>
    </UserAnnotation>
    <Description>The Investment Package is specific to Savings Products. It covers all the investment related processes and information related to fund handling, and is used to manage savings products. If a client subscribes a Savings product, their incentives, regular premiums paid, or unsolicited payments will be invested on funds subscribed at the contract level. 
If a client requests a total or partial surrender of his contract, money will be disinvested from the funds. 
The features of funds (traded on the stock market) and of the insurer (who provides the savings product) have to be set up in this domain. 

The fund definition is handled in PDT domain. Two types of funds can be managed: interest based fund and unit-linked fund. On a regular basis unit funds quotations are updated with values provided by the stock market. 
The insurer records all investment and disinvestment flows during contract’s life (see CTR and FIN). Those currency flows are convertible into unit amounts at that time. 
The investment date of the flow can be parameterized. It is normally specified at the product level, in relation with the investment vehicle (fund). It is possible to specify that the investment can only be a working day (If not, the date should be switched programmatically).  
When money is invested in funds, it is then converted in units. The first run will sell or buy estimated units based on estimated share prices; the second run will adjust the previous orders with the right price. It means the contract holds units of funds.
And on a regular basis, those units are sent to the stockbrokers (funds managers) to be really invested or disinvested on the stock market. 

The back-office administration feature  is used to record management of these units sent to the stockbroker, whether buy orders or sell orders. 
The insurer has the option to set up a buffer stock that allows him to have orders sent, if the limit of the buffer stock is exceeded, or purchase shares, if it falls below the limit. Orders can be cumulated to avoid paying too many fees. Indeed, units and order design are decoupled and managed differently. 

If needed, the insurer is able to get details of its fund portfolio in a fund account. The account deals with accounting information regarding funds the insurer provides to clients. For example, how many shares does it own? What is the current balance regarding a specific fund?</Description>
  </Package>
  <Package isSynthetic='true' name='Financial Asset' originalName='Financial Asset' javaPackage='org.acord.aim.Investment.FinancialAsset' owningPackage='Investment'>
    <Description>The Account And Fund package makes it possible to model various types of accounts that are of interest to the modeled organization from an operational point of view. The different types of accounts that need to be considered include customer accounts, reserve accounts, and funds. &#x0d;
Accounting is a very complex, often highly regulated discipline. Although accounting principles in general, and the way an organization handles its accounting processes, are outside the scope of this document, accounts identified in the Account And Fund package are used in the accounting process. This means the Account And Fund package should be extended for handling the full scope of the accounting process</Description>
  </Package>
  <Package isSynthetic='true' name='Fund' originalName='Fund' javaPackage='org.acord.aim.Investment.Fund' owningPackage='Investment'>
    <Description>This sub-Package describes the set up and handling of fund administration and is used to define two types of fund: unit linked funds and interest based funds. Unit linked funds are funds which are updated regularly, with regular values. This process can be manual or automatic; it can be daily, weekly, monthly, yearly, etc.

Interest based funds are funds which are based on an interest rate. The interest guaranteed rate can be specified and then the real interest rate can be entered when it is known.  
The ISIN code, the description area, the financial risk (High, medium, low), the stock-market it belongs to, the fund currency, the manager of the fund, the country of residence of the fund, the rules for prices update, describes the funds.
Values like bid, offer, face value, and the dividend can be defined for unit-linked funds.</Description>
  </Package>
  <Package isSynthetic='true' name='Investment Code Lists' originalName='Investment Code Lists' javaPackage='org.acord.aim.Investment.InvestmentCodeLists' owningPackage='Investment'>
    <Description>This sub-package contains all references used by the Investment Package

This sub-Package specifies two types of calendar values that can be used in the investment domain.
When money is invested on a saving contact or dis-invested from, the investment date can be shifted according to a rule that applies to the calendar values of the stock exchange place or of the fund selected at contract level. 
The sub-package specifies two types of calendar values that can be used in the investment domain. 
Values stands for the date and its status (working day or non-working day) of the stock exchange place or of the fund.</Description>
  </Package>
  <Package isSynthetic='true' name='Investment Portfolio' originalName='Investment Portfolio' javaPackage='org.acord.aim.Investment.InvestmentPortfolio' owningPackage='Investment'>
    <Description>The InsurerInvestment Sub-Package describes the state of an insurer's investments.
An insurer investment portfolio is seen as an account (see FIN/Account).
The insurer has the possibility to know the number of shares he owns, whether by fund(s) or in total that are traded on the stock market.

Two kinds of account can be set up: the first one is a detailed account, which will detail the state of shares concerning one fund, and the second is a summary account. 
For one account, the insurer can know:
- The fund cash value
- The estimated cash value at a certain date
- The status of the account
- The creation date (start date)
- The end date (if it is not anymore valid)
- The quantity of share invested on the fund.
- The description
- The balance of the account.</Description>
  </Package>
  <Package isSynthetic='true' name='Investment Vehicle' originalName='Investment Vehicle' javaPackage='org.acord.aim.Investment.InvestmentVehicle' owningPackage='Investment'>
    <Description>This sub-package allows to define product content related to Life savings contracts.
It defines the characteristics of InvestmentVehicle, in which money is invested within a life savings contract.</Description>
  </Package>
  <Package isSynthetic='true' name='Marketing' originalName='Marketing' javaPackage='org.acord.aim.Marketing' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>800080</Value>
    </UserAnnotation>
    <Description>This package defines concepts associated with marketing, including associations with related concepts such as product and agreement. Marketing includes objectives, campaigns, relevant party roles, and target markets/audiences.</Description>
  </Package>
  <Package isSynthetic='true' name='Market Target' originalName='Market Target' javaPackage='org.acord.aim.Marketing.MarketTarget' owningPackage='Marketing'>
    <Description>This Sub-Package defines all of the information to define a market target for a marketable product.</Description>
  </Package>
  <Package isSynthetic='true' name='Marketing Code Lists' originalName='Marketing Code Lists' javaPackage='org.acord.aim.Marketing.MarketingCodeLists' owningPackage='Marketing'>
    <Description>This sub-package contains all references used by the Marketing management.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role In Marketing Subtypes' originalName='Party Role In Marketing Subtypes' javaPackage='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes' owningPackage='Marketing'>
    <Description>This sub-package defines concepts involving party roles applicable to marketing. Collectively, these roles may comprise a marketing team with each role having a distinct responsibility. It is not uncommon for one person to have responsibilities associated with multiple roles.

e.g. Jane Doe has responsibilities as graphic designer and copy editor.</Description>
  </Package>
  <Package isSynthetic='true' name='Party' originalName='Party' javaPackage='org.acord.aim.Party' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>ffff66</Value>
    </UserAnnotation>
    <Description>Package containing all information regarding Parties.

There are two main ideas that form the base for this package:

1. Person - Information about a person including names (PersonName) and details (PersonDetails).

2. Organization - Information about an organization including names (OrganizationName) and details (OrganizationDetails). Organizations can also be broken up into parts (OrganizationUnits).

Note: This package does not include the roles and relationships that parties play in the context of other areas of the model. (See Role and Relationship package)</Description>
  </Package>
  <Package isSynthetic='true' name='Organization Detail Subtypes' originalName='Organization Detail Subtypes' javaPackage='org.acord.aim.Party.OrganizationDetailSubtypes' owningPackage='Party'>
    <Description>This sub-package defines concepts providing details about an organization. This includes details involving operations, employees (at a summary level), finances, and legal status.</Description>
  </Package>
  <Package isSynthetic='true' name='Organization Subtypes' originalName='Organization Subtypes' javaPackage='org.acord.aim.Party.OrganizationSubtypes' owningPackage='Party'>
    <Description>This sub-package defines types of organizations, including companies, health institutions and governmental bodies, and related units within.</Description>
  </Package>
  <Package isSynthetic='true' name='Organization Unit Subtypes' originalName='Organization Unit Subtypes' javaPackage='org.acord.aim.Party.OrganizationUnitSubtypes' owningPackage='Party'>
    <Description>This sub-package defines concepts involving units or subdivisions within an organization, established for the purpose of performing discrete functional responsibilities. This typically represents the organizational structure of the modeled organization including sections, departments, district offices, projects, and employment positions.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Code Lists' originalName='Party Code Lists' javaPackage='org.acord.aim.Party.PartyCodeLists' owningPackage='Party'>
    <Description>This sub-package contains all references used by the Party package.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Detail Subtypes' originalName='Party Detail Subtypes' javaPackage='org.acord.aim.Party.PartyDetailSubtypes' owningPackage='Party'>
    <Description>This sub-package defines concepts providing further details about a party as a person or as an organization. Some details regarding a party are not likely to be necessary to perform basic processes about parties. As such, they have been separated from basic party information and identified as details. Details specific to persons as contrasted with organizations have been separated accordingly.

e.g. Person specific details: birth date, citizenship, marriage details, etc.
e.g. Organization specific details: employee summary, financial results, etc.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Name' originalName='Party Name' javaPackage='org.acord.aim.Party.PartyName' owningPackage='Party'>
    <Description>This sub-package defines concepts involving party names (e.g. person names and organization names).</Description>
  </Package>
  <Package isSynthetic='true' name='Person Detail Subtypes' originalName='Person Detail Subtypes' javaPackage='org.acord.aim.Party.PersonDetailSubtypes' owningPackage='Party'>
    <Description>This sub-package defines concepts involving details about persons (e.g. education, occupation, income, etc.).</Description>
  </Package>
  <Package isSynthetic='true' name='Physical Object' originalName='Physical Object' javaPackage='org.acord.aim.PhysicalObject' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>ff2d2d</Value>
    </UserAnnotation>
    <Description>The objective of the Physical Object package is to define physical objects such as vehicles, houses, animals, or any grouping of these from a policy risk and claims management perspective.
 
All physical objects can be covered by an insurance policy, excluded from insurance, or involved in a claim, are modeled in the Physical Object package. Physical objects can also be used as collateral in financial services agreement (like a house in a mortgage for example). 

In addition to specific physical objects, the Physical Object package also makes it possible to specify model specifications of physical objects, such as vehicle models. Information about different models and makes of car can be maintained independently of the information about the actual cars insured.</Description>
  </Package>
  <Package isSynthetic='true' name='Life Form Subtypes' originalName='Life Form Subtypes' javaPackage='org.acord.aim.PhysicalObject.LifeFormSubtypes' owningPackage='Physical Object'>
    <Description>This sub-package identifies entities that are living yet considered physical property in the context of insurance. For example, animals are listed as Life Form's for the purposes of classification.</Description>
  </Package>
  <Package isSynthetic='true' name='Manufactured Item Specification Subtypes' originalName='Manufactured Item Specification Subtypes' javaPackage='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes' owningPackage='Physical Object'>
    <Description>Related to the Manufactured Item sub-package, the Model Specification sub-package holds details around the specification used to create Manufactured Items. This is where vehicle models including details around make and model are included.</Description>
  </Package>
  <Package isSynthetic='true' name='Manufactured Item Subtypes' originalName='Manufactured Item Subtypes' javaPackage='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes' owningPackage='Physical Object'>
    <Description>This sub-package holds all the details and subtypes of a manufactured item. A manufactured item is defined as something created with a related specification. What is not included in this sub-package would be items crafted such as fine art, jewelery or antique furniture.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role On Physical Object Subtypes' originalName='Party Role On Physical Object Subtypes' javaPackage='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes' owningPackage='Physical Object'>
    <Description>This sub-package defines roles for parties associated with physical objects.</Description>
  </Package>
  <Package isSynthetic='true' name='Physical Object Code Lists' originalName='Physical Object Code Lists' javaPackage='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists' owningPackage='Physical Object'>
    <Description>This sub-package contains all references used by the Physical Object package.</Description>
  </Package>
  <Package isSynthetic='true' name='Structure Detail Subtypes' originalName='Structure Detail Subtypes' javaPackage='org.acord.aim.PhysicalObject.StructureDetailSubtypes' owningPackage='Physical Object'>
    <Description>Related to the Structure sub-package, the Structure Detail sub-package includes information related to a structure that are often changed over time. The classes within this sub-package account for this level of detail.</Description>
  </Package>
  <Package isSynthetic='true' name='Structure Subtypes' originalName='Structure Subtypes' javaPackage='org.acord.aim.PhysicalObject.StructureSubtypes' owningPackage='Physical Object'>
    <Description>This sub-package holds details around a physical structure. This is expanded beyond just buildings. Also included in this sub-package are the breakdowns of a given structure such as an apartment building and the related apartment units.</Description>
  </Package>
  <Package isSynthetic='true' name='Vehicle Subtypes' originalName='Vehicle Subtypes' javaPackage='org.acord.aim.PhysicalObject.VehicleSubtypes' owningPackage='Physical Object'>
    <Description>This sub-package includes all information related to vehicles. Vehicles are sub-typed by LandVehicle, Watercraft, Airplane and similar other modes of transportation.</Description>
  </Package>
  <Package isSynthetic='true' name='Product Specification' originalName='Product Specification' javaPackage='org.acord.aim.ProductSpecification' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>00ffff</Value>
    </UserAnnotation>
    <Description>The Product Specification package makes it possible to model insurance products in a generic fashion. This package includes all the building blocks necessary for defining products for all lines of business including P&amp;C, Life and Reinsurance.

This package has direct links to the Agreement package. All subtypes defined within the Product Specification have related elements in the Agreement package to provide traceability within the two subject areas.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role In Product' originalName='Party Role In Product' javaPackage='org.acord.aim.ProductSpecification.PartyRoleInProduct' owningPackage='Product Specification'>
    <Description>This sub-package includes all party roles related to the Claims subject area.

e.g Claimant, Insurance Provider, Witness, Claim Representative</Description>
  </Package>
  <Package isSynthetic='true' name='Product Clause Specification Subtypes' originalName='Product Clause Specification Subtypes' javaPackage='org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes' owningPackage='Product Specification'>
    <Description>This sub package provides a place for definition for all clauses used in product definition.
These clauses will be associated to a Product or a ProductComponent (coverage, service, etc.) to specify all applicable clauses for these elements.</Description>
  </Package>
  <Package isSynthetic='true' name='Product Component Specification Subtypes' originalName='Product Component Specification Subtypes' javaPackage='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes' owningPackage='Product Specification'>
    <Description>This sub-package is used to group previously defined technical elements into reusable product components.

The product design is based on elements defined in this sub-package associated to ProductSpecifications items (to define applicable specifications for a ProductComponent).</Description>
  </Package>
  <Package isSynthetic='true' name='Product Feature Specification Subtypes' originalName='Product Feature Specification Subtypes' javaPackage='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes' owningPackage='Product Specification'>
    <Description>This sub-package defines concepts involving features of a product and their relationship to their corresponding agreement components. The product might offer a variety of different features that are not directly related to coverages.</Description>
  </Package>
  <Package isSynthetic='true' name='Product Specification Code Lists' originalName='Product Specification Code Lists' javaPackage='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists' owningPackage='Product Specification'>
    <Description>This sub-package contains all references used by the Product Specification package.</Description>
  </Package>
  <Package isSynthetic='true' name='Product Specification Element Subtypes' originalName='Product Specification Element Subtypes' javaPackage='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes' owningPackage='Product Specification'>
    <Description>This sub package contains the data elements apart from the coverages. They are used in the design of the product. They can be part of a coverage, part of a technical element, or independent.  

The ProductSpecifications data structure permits to support all types of technical elements. Product specifications are part of products. Product composition allows sharing these specifications among products.</Description>
  </Package>
  <Package isSynthetic='true' name='Registration' originalName='Registration' javaPackage='org.acord.aim.Registration' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>8080ff</Value>
    </UserAnnotation>
    <Description>This package defines concepts associated with various types of registration. A registration is considered a formal recording, by an authorized body, of the granting of rights, privileges, favors, statuses, or qualifications. Registrations are important from the perspective of being a qualified source of information. They are similar to assessments in the respect that the associated information can be considered more reliable than the same information not associated with a registration.

The scope of registration includes and is not limited to: parties (e.g. driver's license, passport), animals, events (e.g. catastrophe), products and objects (vehicle registration, drug registration).

NOTE: One detail typical of a registration involves the utility of an identifier, assigned by the registering authority. The determining factor on when such an identifier is a "registration" involves the role of the concept associated with the registration. For example, insurers often assign an identifier to a producer on an insurance policy to distinguish that producer from all others with whom it does business. In this scenario, the identifier is associated with the role of the party acting as the producer. This scenario is not a registration and the identifier would be managed outside the "registration" concept in the model.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Registration Subtypes' originalName='Party Registration Subtypes' javaPackage='org.acord.aim.Registration.PartyRegistrationSubtypes' owningPackage='Registration'>
    <Description>This sub-class defines concepts involving registration of a party. Registration information can serve as a method of locating a party. Some party registrations are specific to persons (e.g. driver's license, passport), some are specific to organizations (e.g. financial services company registration), and some are common to all parties (e.g. tax registration, producer registration).</Description>
  </Package>
  <Package isSynthetic='true' name='Registration Code Lists' originalName='Registration Code Lists' javaPackage='org.acord.aim.Registration.RegistrationCodeLists' owningPackage='Registration'>
    <Description>This sub-package contains all references used by the Registration package.</Description>
  </Package>
  <Package isSynthetic='true' name='Role and Relationship' originalName='Role and Relationship' javaPackage='org.acord.aim.RoleandRelationship' owningPackage='AF_IM 2.3'>
    <UserAnnotation isSynthetic='false' name='Color'>
      <Value>55a8a8</Value>
    </UserAnnotation>
    <Description>This package defines concepts involving roles and relationships.

Roles can be played by parties (e.g. persons and organizations) and objects (e.g. insured vehicle).

Relationships represent intersections connecting parties with one another.

e.g. An employer and an employee have a relationship via employment.

Party A = employer role
Party B = employee role
Relationship between these roles = employment</Description>
  </Package>
  <Package isSynthetic='true' name='Family Member Subtypes' originalName='Family Member Subtypes' javaPackage='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package provides details about family members.</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role In Relationship Subtypes' originalName='Party Role In Relationship Subtypes' javaPackage='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package defines concepts involving party roles in a the context of a relationship (e.g. employee, head of household) and the relationship of those concepts to the related relationship.

e.g. Jane Doe is an employee of Acme Insurance.

Jane Doe = party role "Employee"
Acme Insurance = party role "Employer"
The relationship between these two party roles = "Employment"</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role Relationship Subtypes' originalName='Party Role Relationship Subtypes' javaPackage='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package defines concepts involving party relationships, classified as either business or non-business.

- Business relationships include employment, customer relationship, etc.
- Non-business relationships include personal legal representation, household</Description>
  </Package>
  <Package isSynthetic='true' name='Party Role Subtypes' originalName='Party Role Subtypes' javaPackage='org.acord.aim.RoleandRelationship.PartyRoleSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package defines concepts involving the classification of party roles in context (e.g. context as: party role in agreement, party role in claim, etc.).</Description>
  </Package>
  <Package isSynthetic='true' name='Physical Object Role Subtypes' originalName='Physical Object Role Subtypes' javaPackage='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package defines concepts involving all types of physical object roles (e.g. owned objects, leased property, etc.).</Description>
  </Package>
  <Package isSynthetic='true' name='Professional Service Relationship Subtypes' originalName='Professional Service Relationship Subtypes' javaPackage='org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package focus is on the specific detail/information about a Service relationship.</Description>
  </Package>
  <Package isSynthetic='true' name='Role and Relationship Code Lists' originalName='Role and Relationship Code Lists' javaPackage='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists' owningPackage='Role and Relationship'>
    <Description>This sub-package contains all references used  by the Role and Relationship package.</Description>
  </Package>
  <Package isSynthetic='true' name='Service Provider Subtypes' originalName='Service Provider Subtypes' javaPackage='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes' owningPackage='Role and Relationship'>
    <Description>This sub-package includes parties playing the role of service providers without specific context.

For example, in the Automobile Claims management process, it is necessary to relate the repair work with a garage. The garage is playing a service provider role.</Description>
  </Package>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.Activity' originalName='Activity' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>An activity represents part of the business processes. The representation of an activity, as an instance of an activity, is necessary as soon as the activity is to be managed (assignment, logging, as a task, etc.)

Activities are provided by external professional service providers or internal staff. They are executed either by parties or by software applications.
 
An activity may include either single activities, complex activities, or a series of activities.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>Description of the activity.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='forcedStatusIndicator' originalName='forcedStatusIndicator' assignable='true' index='6'>
      <Description>States whether the change of status was forced</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='frequencyCode' originalName='frequencyCode' assignable='true' index='8'>
      <Description>The frequency by which the activity occurs.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='9'>
      <Description>The unique identifier assigned to the activity being referenced.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='issueMode' originalName='issueMode' assignable='true' index='5'>
      <Description>Specifies the way the activity was issued. Example of use: automatic or manual</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>Official name of the activity</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='objective' originalName='objective' assignable='true' index='7'>
      <Description>This is the objective of a given activity (e.g. the desired activity outcome).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='priority' originalName='priority' assignable='true' index='3'>
      <Description>Gives a priority level to the activity</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reasonForEndingCode' originalName='reasonForEndingCode' assignable='true' index='2'>
      <Description>The reason the activity ended.</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.ReasonForEndingCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='4'>
      <Description>Status within the time period</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.BusinessActivityStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='activityevent' originalName='activity event' assignable='true' index='23' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Event.Event</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForactivityevent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ActivityIdentifiedAssigneePartyRole' originalName='Activity Identified Assignee PartyRole' assignable='true' index='20' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForActivityIdentifiedAssigneePartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ActivityIdentifiesAssignorPartyRole' originalName='Activity Identifies Assignor PartyRole' assignable='true' index='21' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForActivityIdentifiesAssignorPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='activityPeriod' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='actualCostAmount' assignable='true' index='17' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='compositeactivity' originalName='composite activity' assignable='true' index='25' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.Activity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForcompositeactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='documentactivity' originalName='document activity' assignable='true' index='22' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Document</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityFordocumentactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectiveDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='estimationAmount' assignable='true' index='19' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='followUpDate' assignable='true' index='18' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='issueDate' assignable='true' index='16' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='physicalactivityobjectusage' originalName='physical activity object usage' assignable='true' index='27' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForphysicalactivityobjectusage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='physicalobjectactivityperformance' originalName='physical object activity performance' assignable='true' index='26' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForphysicalobjectactivityperformance' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='plannedPeriod' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='replace' originalName='replace' assignable='true' index='24' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Activity.Activity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityForreplace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='requestDate' assignable='true' index='14' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='requestTime' assignable='true' index='15' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Time</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusChangeDate' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.AssessmentActivity' originalName='AssessmentActivity' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>Any assessment or evaluation activity occurring at a given place or time. This often involves any one or more of the following: (1) an expert opinion (2) use of specialized instrumentation (3) use of analytical systems.

e.g: The inspection of a structure to determine insurability.</Description>
    <AttributeProperty isSynthetic='true' name='methodCode' originalName='methodCode' assignable='true' index='0'>
      <Description>The method used for the assessment.</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.AssessmentMethodCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.BuildingRepair' originalName='BuildingRepair' superclassName='org.acord.aim.Activity.Repair' isAbstract='false'>
    <Description>This concept represents a building repair mission performed by a repairman within a claim.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.CargoTransportation' originalName='CargoTransportation' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>The activity of conveying cargo.

e.g: The transportation of perishable foodstuffs from Spain to Belgium by road, such as avocado's.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.ConstructionActivity' originalName='ConstructionActivity' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>Any construction activity that can occur at a given place.  e.g: The construction of the house of John Doe.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.Dispute' originalName='Dispute' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>This concept is a way to represent a dispute.</Description>
    <AttributeProperty isSynthetic='true' name='motive' originalName='motive' assignable='true' index='1'>
      <Description>The motive/reason for the dispute.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>The status of the dispute.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementdispute' originalName='agreement dispute' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Agreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='DisputeForagreementdispute' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimdispute' originalName='claim dispute' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='DisputeForclaimdispute' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='disputePeriod' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='dunningactivitydispute' originalName='dunning activity dispute' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.DunningActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='DisputeFordunningactivitydispute' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.EngineRepair' originalName='EngineRepair' superclassName='org.acord.aim.Activity.Repair' isAbstract='false'>
    <Description>This concept represents an engine repair mission performed by a repairman  within a claim.</Description>
    <RelationshipProperty isSynthetic='true' name='EngineRepairProvidedByRepairServiceProvider' originalName='EngineRepair Provided By RepairServiceProvider' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.RepairServiceProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='EngineRepairForEngineRepairProvidedByRepairServiceProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.HazardousMaterialHandling' originalName='HazardousMaterialHandling' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>The particular activity of performing a specified operation on an object that is of a particular type. e.g: Asbestos removal from European Commission Offices in Brussels e.g: Subterranean storage of nuclear waste at the Dessel Nuclear Laboratory site</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.Investigation' originalName='Investigation' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>This concept represents an investigation of some type.

e.g. During the placement process, the insurer may perform a claim investigation to validate claim history as reported by the applicant.

e.g. As part of the claim process, an insurer may choose to investigate a claim to verify the existence or not of fraud.</Description>
    <AttributeProperty isSynthetic='true' name='investigationResult' originalName='investigationResult' assignable='true' index='0'>
      <Description>This is the description and the result of the investigation.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='investigationCostAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='investigationPeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.LanguageTranslation' originalName='LanguageTranslation' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>Communication service that provides language conversion to facilitate the communication between parties. A RelayService activity that translates messages from one language into another, or converts messages from one medium to another.  e.g: Provide speech to text conversion to facilitate the communication with a deaf person. e.g: Provide translation service from Chinese into English for a Chinese speaking customer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.LegalActivity' originalName='LegalActivity' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>An activity involving all aspects of legal actions. The legal action may be caused by non-fulfillment of a delivery of financial liability, service, or goods or by the breaking of an agreement between two or more parties.

e.g. An arbitration procedure in which an external expert decides on a settlement of a claim in case of a disagreement between the claimants' and the claimees' experts.

e.g. A litigation activity involving a court of law (or any recognized arbitration body) rendering judgment on a dispute between two parties or groups of parties. This includes criminal and civil cases. It also includes judgments of legal bodies concerning a violation of some law. 

e.g: Lawyer files a complaint at court.

e.g. countersignatures, notorization</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.MedicalTransportation' originalName='MedicalTransportation' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>Transportation to or from a health care facility where medical treatment is received. e.g: The transportation of Mary Doe by ambulance from the crossing where she had her car accident to the nearest hospital.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.MedicalTreatment' originalName='MedicalTreatment' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>This concept represents a medical treatment for a person.</Description>
    <AttributeProperty isSynthetic='true' name='initialTreatmentCode' originalName='initialTreatmentCode' assignable='true' index='1'>
      <Description>The type of treatment occurring initially.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.InitialTreatmentCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='intensityCode' originalName='intensityCode' assignable='true' index='3'>
      <Description>The intensity of the applied medical treatment.</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.MedicalTreatmentIntensityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatmentDurationTypeCode' originalName='treatmentDurationTypeCode' assignable='true' index='2'>
      <Description>States whether the treatment is for life or limited in time</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.MedicalTreatmentDurationTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatmentTypeCode' originalName='treatmentTypeCode' assignable='true' index='0'>
      <Description>The type of applicable medical treatment.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.TreatmentTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='MedicalTreatmentOnMedicalUnit' originalName='MedicalTreatment On MedicalUnit' assignable='true' index='5' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.OrganizationUnitSubtypes.MedicalUnit</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicalTreatmentForMedicalTreatmentOnMedicalUnit' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatmentPeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.MedicalUnitBooking' originalName='MedicalUnitBooking' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>A concept containing data with respect to booking places for customers on medical units.</Description>
    <AttributeProperty isSynthetic='true' name='bookingComment' originalName='bookingComment' assignable='true' index='0'>
      <Description>General text comments involving the medical unit booking activity.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='modificationDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='notificationBookingDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='proposedAdmittanceDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.PhysicalObjectStorage' originalName='PhysicalObjectStorage' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>The activity of storing an object or objects for a period of time.

e.g. A boat may be stored for the winter season while not in use.

e.g. Joe's household content is stored in a warehouse due to the fire damage that makes his house temporarily inhabitable.

e.g. Storage in a garage of a damaged car after accident, while waiting for further investigation on the damage.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.ReferralPhysicianConsultation' originalName='ReferralPhysicianConsultation' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>This concept represents the consultation performed by the referral physician.</Description>
    <RelationshipProperty isSynthetic='true' name='consultationDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='firstConsultationDate' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.Repair' originalName='Repair' superclassName='org.acord.aim.Activity.Activity' isAbstract='true'>
    <Description>The activity of repairing damage.</Description>
    <RelationshipProperty isSynthetic='true' name='damagerepair' originalName='damage repair' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition</TypeName>
      <RelationshipProperty isSynthetic='true' name='RepairFordamagerepair' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.StatusActivity' originalName='StatusActivity' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.Training' originalName='Training' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>An activity comprising specialized instruction and practice, to make a party become proficient in a specific subject area. At the end of the training, the trainee is expected to achieve full competence in the subject area being taught. The teacher is the trainer. A training activity may be organized internally by the insurer or offered by third parties. It may lead to a status recognized internally by the insurer, or to externally-recognized industry qualifications.</Description>
    <AttributeProperty isSynthetic='true' name='formatOfTrainingCode' originalName='formatOfTrainingCode' assignable='true' index='0'>
      <Description>The format in which the training is conducted.</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.FormatOfTrainingCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='courseLanguageCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.VehicleRepair' originalName='VehicleRepair' superclassName='org.acord.aim.Activity.Repair' isAbstract='false'>
    <Description>This concept represents a vehicle repair mission performed by a repairman within a claim.</Description>
    <RelationshipProperty isSynthetic='true' name='VehicleRepairProvidedByRepairServiceProvider' originalName='VehicleRepair Provided By RepairServiceProvider' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.RepairServiceProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='VehicleRepairForVehicleRepairProvidedByRepairServiceProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Activity.VehicleTowing' originalName='VehicleTowing' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>The activity of towing a vehicle . e.g: Towing of a car off the highway to a parking lot after breakdown. e.g: Towing of a car to nearest repair shop after accident.</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.AssessmentMethodCodeList' originalName='AssessmentMethodCodeList' restricts='java.lang.String'>
    <Description>This enumeration defines assessment methods available for AssessmentActivity</Description>
    <Enumerand isSynthetic='true' name='CertifiedGemmologistAppraisal' generator='Certified Gemmologist Appraisal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DataMiningAlgorithm' generator='Data Mining Algorithm'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PurchasedDemographicData' generator='Purchased Demographic Data'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RealEstateAppraisal' generator='Real Estate Appraisal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolvencyBalanceSheetItemValuationMarkToMarket' generator='Solvency Balance Sheet Item Valuation - Mark To Market'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolvencyBalanceSheetItemValuationMarkToModel' generator='Solvency Balance Sheet Item Valuation - Mark To Model'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolvencyBalanceSheetItemValuationOtherMethod' generator='Solvency Balance Sheet Item Valuation - Other Method'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Survey' generator='Survey'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.BusinessActivityStatusCodeList' originalName='BusinessActivityStatusCodeList' restricts='java.lang.String'>
    <Description>Activity status.</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pending' generator='Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Complete' generator='Complete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancelled' generator='Cancelled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Void' generator='Void'>
      <Description>The activity is no longer valid.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='History' generator='History'>
      <Description>The activity has been historicized.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.FormatOfTrainingCodeList' originalName='FormatOfTrainingCodeList' restricts='java.lang.String'>
    <Description>Defines types of training approaches.</Description>
    <Enumerand isSynthetic='true' name='Conference' generator='Conference'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ELearning' generator='E Learning'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OnTheJob' generator='On The Job'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Seminar' generator='Seminar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Workshop' generator='Workshop'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.InspectionStatusCodeList' originalName='InspectionStatusCodeList' restricts='java.lang.String'>
    <Description>It identifies the inspection status of the item.</Description>
    <Enumerand isSynthetic='true' name='Completed' generator='Completed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Estimatenoinspectioncompletedbasedonsubmittedestimate' generator='Estimate (no inspection completed, based on submitted estimate)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotCompletedNotVerified' generator='Not Completed/Not Verified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotOrdered' generator='Not Ordered'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotRequired' generator='Not Required'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pending' generator='Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Required' generator='Required'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.InspectionTypeCodeList' originalName='InspectionTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of inspection.</Description>
    <Enumerand isSynthetic='true' name='Appraisal' generator='Appraisal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chimney' generator='Chimney'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Emissions' generator='Emissions'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExteriorPaint' generator='Exterior Paint'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HeatingUnit' generator='Heating Unit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Home' generator='Home'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plumbing' generator='Plumbing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreInsurance' generator='Pre-Insurance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReplacementCostCalculatororanEquivalentWorksheet' generator='Replacement Cost Calculator or an Equivalent Worksheet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Roofing' generator='Roofing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Safety' generator='Safety'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Watercraft' generator='Watercraft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WETTInspectionWoodEnergyTechnologyTransfer' generator='WETT Inspection (Wood Energy Technology Transfer)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wiring' generator='Wiring'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.MedicalTreatmentIntensityCodeList' originalName='MedicalTreatmentIntensityCodeList' restricts='java.lang.String'>
    <Description>This list defines different types of medical treatment intensity.</Description>
    <Enumerand isSynthetic='true' name='High' generator='High'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Low' generator='Low'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Medium' generator='Medium'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Activity.ActivityCodeLists.ReasonForEndingCodeList' originalName='ReasonForEndingCodeList' restricts='java.lang.String'>
    <Description>Identifies the reasons for ending a particular activity</Description>
    <Enumerand isSynthetic='true' name='ChangeOfEmployment' generator='Change Of Employment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Injury' generator='Injury'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LossOfInterest' generator='Loss Of Interest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Retired' generator='Retired'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.Agreement' originalName='Agreement ' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>A mutual understanding between two or more parties, each committing themselves to fulfill one or more obligations.</Description>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='0'>
      <Description>The unique identifier assigned to the agreement, policy, or submission, being referenced. If required for a self-insurance agreement, the self-insured license or contract number. This is commonly referred to as the "policy number" for insurance agreements.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='1'>
      <Description>Name of the agreement</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='3'>
      <Description>The current status of the agreement within the life-cycle model.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusReasonCode' originalName='statusReasonCode' assignable='true' index='4'>
      <Description>The additional information to explain the latest status of the agreement. 
 
e.g: Not eligible (if agreement rejected) 
 
e.g: Not taken up (if agreement rejected)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='taxQualificationCode' originalName='taxQualificationCode' assignable='true' index='5'>
      <Description>Identifies the tax regime that applies to this agreement.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.TaxQualificationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='version' originalName='version' assignable='true' index='2'>
      <Description>Represents the versioning information for this instance of an agreement.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementcomponentcomposition' originalName='agreement component composition' assignable='true' index='12' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementComponent</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForagreementcomponentcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementdocumentassociaiton' originalName='agreement document associaiton' assignable='true' index='17' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentSubtypes.AgreementDocument</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForagreementdocumentassociaiton' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AgreementGovernsPartyRoleRelationship' originalName='Agreement Governs PartyRoleRelationship' assignable='true' index='19' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForAgreementGovernsPartyRoleRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AgreementIncludesPhysicalObjectRoleInAgreement' originalName='Agreement Includes PhysicalObjectRoleInAgreement' assignable='true' index='11' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleInAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForAgreementIncludesPhysicalObjectRoleInAgreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementreference' originalName='agreement reference' assignable='true' index='15' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Agreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForagreementreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AgreementRegistrationRegistersAgreement' originalName='AgreementRegistration Registers Agreement' assignable='true' index='20' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.AgreementRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForAgreementRegistrationRegistersAgreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementsupervisionrequirement' originalName='agreement supervision requirement' assignable='true' index='13' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.ScoreSubtypes.Supervision</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForagreementsupervisionrequirement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='currencyCode' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='issueDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='replacementagreement' originalName='replacement agreement' assignable='true' index='14' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Agreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForreplacementagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reserveaccountagreement' originalName='reserve account agreement' assignable='true' index='16' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.AccountSubtypes.ReserveAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForreserveaccountagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reviewDate' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='specificationofagreement' originalName='specification of agreement' assignable='true' index='18' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementForspecificationofagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementComponent' originalName='AgreementComponent' superclassName='org.acord.aim.Agreement.Agreement' isAbstract='false'>
    <Description>A part of a financial services agreement composition structure.</Description>
    <AttributeProperty isSynthetic='true' name='agreementComponentStatusCode' originalName='agreementComponentStatusCode' assignable='true' index='0'>
      <Description>The status of the agreement component.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AgreementComponentStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementcomponentelementcomposition' originalName='agreement component element composition' assignable='true' index='1' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementElement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementComponentForagreementcomponentelementcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='premiumagreementcomponentassociation' originalName='premium agreement component association' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementPremium.Premium</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementComponentForpremiumagreementcomponentassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.EmploymentAgreement' originalName='EmploymentAgreement' superclassName='org.acord.aim.Agreement.Agreement' isAbstract='false'>
    <Description>A mutual understanding between an employer and an employee, each committing themselves to fulfill one or more obligations. This includes the work performed by the employee in exchange for the salary received from the employer. 
 
e.g: Employment agreement between Acme Insurance company and John Smith.</Description>
    <RelationshipProperty isSynthetic='true' name='employmentagreementcomposition' originalName='employment agreement composition' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.EmploymentAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='EmploymentAgreementForemploymentagreementcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreement' originalName='FinancialServicesAgreement' superclassName='org.acord.aim.Agreement.Agreement' isAbstract='false'>
    <Description>An agreement between a financial services provider and a financial services role based on a  product specification. A financial services agreement is structured as marketable agreement, services agreement component, or agreement group.

e.g. An insurance policy is a financial services agreement where the owner of the agreement is the policyholder and the agreement specifies the obligation of the insurer to pay benefits and of the premium payer to pay premiums.</Description>
    <AttributeProperty isSynthetic='true' name='coSubscriptionIndicator' originalName='coSubscriptionIndicator' assignable='true' index='1'>
      <Description>Indicates whether the contract is opened for a single subscription or whether a co-subscription is allowed.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='taxStatusCode' originalName='taxStatusCode' assignable='true' index='0'>
      <Description>Defines whether the taxing is required. 
 
e.g: Compulsory 
 
e.g: Voluntary</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.TaxCalculationCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementintegration' originalName='agreement integration' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesAgreementForagreementintegration' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementmarketvalue' originalName='agreement market value' assignable='true' index='7' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesAgreementForagreementmarketvalue' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementpayment' originalName='agreement payment' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesAgreementForagreementpayment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementpremium' originalName='agreement premium' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementPremium.Premium</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesAgreementForagreementpremium' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialservicesagreementactivity' originalName='financial services agreement activity' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.Activity</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesAgreementForfinancialservicesagreementactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='preexistingcondition' originalName='pre-existing condition' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Condition</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesAgreementForpreexistingcondition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ProducerAgreement' originalName='ProducerAgreement' superclassName='org.acord.aim.Agreement.Agreement' isAbstract='false'>
    <Description>An agreement defining the way in which a producer role can act on behalf of a financial services provider. 
 
e.g: Broker agreement between Broker ABC and Acme Insurance Company.</Description>
    <RelationshipProperty isSynthetic='true' name='agreementadministration' originalName='agreement administration' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProducerAgreementForagreementadministration' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='authorizationofproductsales' originalName='authorization of product sales' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProducerAgreementForauthorizationofproductsales' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='produceragreementcomposition' originalName='producer agreement composition' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.ProducerAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProducerAgreementForproduceragreementcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Enddate' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='GenerateNewAPID' assignable='true' index='7'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ClaimLimit' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusType' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Status' assignable='true' index='10' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Status</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerAgreementForStatus' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='CaseID' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ProviderAgreement' originalName='ProviderAgreement' superclassName='org.acord.aim.Agreement.Agreement' isAbstract='false'>
    <Description>An agreement between party's concerning the provisioning of goods or services. 

The provider agreement will typically describe the type of goods, physical objects, and services, activity occurrences, to be delivered, the cost, money provision, and terms and conditions that apply. 

Supplier and buyer can be the modeled organization, its customers or any other third party. 
 
e.g: An agreement between Acme and Garage du Coin to repair the damage done to covered cars in certain conditions.</Description>
    <RelationshipProperty isSynthetic='true' name='provideragreement' originalName='provider agreement ' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProviderAgreementForprovideragreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='provideragreementcomposition' originalName='provider agreement composition' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.ProviderAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProviderAgreementForprovideragreementcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RelatedAgreement' originalName='RelatedAgreement' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This associative class accounts for a relationship between any two financial services agreements, including details about the relationship.

For example, Agreement123  may have been transferred to another company resulting in the issuance of Agreement456. In this example, Agreement123 is the "from" or "originating" agreement and Agreement456 is the related or referenced agreement.</Description>
    <AttributeProperty isSynthetic='true' name='internalIndicator' originalName='internalIndicator' assignable='true' index='0'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='relatedAgreementNatureCode' originalName='relatedAgreementNatureCode' assignable='true' index='2'>
      <Description>A code indicating the nature of the related agreement.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.RelatedAgreementNatureCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='transferredIndicator' originalName='transferredIndicator' assignable='true' index='1'>
      <Description>An indicator the related agreement was reassigned within the producer's operations from one insurer to another (e.g. the business/agreement is not new to the producer).</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='RelatedAgreementDescribesRelationFromAgreement' originalName='RelatedAgreement Describes Relation From Agreement' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='RelatedAgreementForRelatedAgreementDescribesRelationFromAgreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='RelatedAgreementRelatingToAgreement' originalName='RelatedAgreement Relating To Agreement' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='RelatedAgreementForRelatedAgreementRelatingToAgreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreement' originalName='RiskAgreement' superclassName='org.acord.aim.Agreement.Agreement' isAbstract='false'>
    <Description>A mutual understanding between insurer and other involved parties, both internal and external, each committing themselves to fulfill one or more risk obligations.

This agreement is done in a free form fashion without the use of a Product Specification.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>A free-text description of this risk agreement purpose and principles.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='approvalDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='riskagreementcomposition' originalName='risk agreement composition' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.RiskAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='RiskAgreementForriskagreementcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.BeneficiaryClause' originalName='BeneficiaryClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This concept describes the conditions related to the beneficiaries defined on a financial services agreement. 

Some examples of a Beneficiary Clause include Predefined, Free Nomination or At Notary.</Description>
    <RelationshipProperty isSynthetic='true' name='beneficiaryclausespecification' originalName='beneficiary clause specification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.BeneficiaryClauseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='BeneficiaryClauseForbeneficiaryclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='beneficiarydesignation' originalName='beneficiary designation' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Beneficiary</TypeName>
      <RelationshipProperty isSynthetic='true' name='BeneficiaryClauseForbeneficiarydesignation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.BenefitClause' originalName='BenefitClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This concept defines the conditions related to the benefit (for a coverage by example). This clause can be used to define how benefits will be paid and what other services are to be provided.</Description>
    <RelationshipProperty isSynthetic='true' name='benefitclausespecification' originalName='benefit clause specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementClause.BenefitClauseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='BenefitClauseForbenefitclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.BenefitClauseSpecification' originalName='BenefitClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This concept defines the specifications around a benefit clause. The Product will define what and how benefits are paid for the specified financial services agreement or coverage.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.EffectiveDateClause' originalName='EffectiveDateClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This concept defines the conditions related to the effective date.</Description>
    <RelationshipProperty isSynthetic='true' name='effectivedateclausespecification' originalName='effective date clause specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.EffectiveDateClauseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='EffectiveDateClauseForeffectivedateclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.ExclusionClause' originalName='ExclusionClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This clause allows a contract or contract coverage to exclude a predefined condition.

e.g: An automobile policy indicates the coverage is excluded in foreign countries.</Description>
    <RelationshipProperty isSynthetic='true' name='exclusionclausespecification' originalName='exclusion clause specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.ExclusionClauseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ExclusionClauseForexclusionclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.FreeClause' originalName='FreeClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This concept extends AgreementClauseComponent and defines a clause applicable to the contract.</Description>
    <RelationshipProperty isSynthetic='true' name='freeclausespecification' originalName='free clause specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.FreeClauseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='FreeClauseForfreeclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.NoClaimBonusClause' originalName='NoClaimBonusClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This specialization of AgreementClauseComponent allows to define a no claim bonus clause.

A no claim bonus is a bonus awarded to a policyholder when no claims have been made on an insurance policy during the period of insurance, usually one year. The bonus is subsequently applied to reduce the renewal premium.

The motor insurance business uses this approach extensively and companies will usually increase no claim bonuses annually up to a maximum, typically 60%, after four or five years. This method of rewarding policyholders with no claims is sometimes used in household insurance.</Description>
    <AttributeProperty isSynthetic='true' name='noClaimBonusRate' originalName='noClaimBonusRate' assignable='true' index='0'>
      <Description>No claim bonus rate.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='noclaimbonusclausespecification' originalName='no claim bonus clause specification' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementClause.NoClaimBonusSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='NoClaimBonusClauseFornoclaimbonusclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='noClaimBonusPeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.NoClaimBonusSpecification' originalName='NoClaimBonusSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This concept defines a no claim bonus option.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementClause.TerminationClause' originalName='TerminationClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>This concept describe the terms and conditions.</Description>
    <RelationshipProperty isSynthetic='true' name='terminationclausespecification' originalName='termination clause specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.TerminationClauseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='TerminationClauseForterminationclausespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AccountAgreementStatusCodeList' originalName='AccountAgreementStatusCodeList' restricts='java.lang.String'>
    <Description>The allowed values for life cycle states of an account agreement.</Description>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Matured' generator='Matured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Requested' generator='Requested'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancelled' generator='Cancelled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForce' generator='In Force'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForceChangePending' generator='In Force - Change Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Terminated' generator='Terminated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderNegotiation' generator='Under Negotiation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AgreementChangeTypeCodeList' originalName='AgreementChangeTypeCodeList' restricts='java.lang.String'>
    <Description>Contractual change Type</Description>
    <Enumerand isSynthetic='true' name='Cancel' generator='Cancel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Modify' generator='Modify'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Add' generator='Add'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AgreementComponentStatusCodeList' originalName='AgreementComponentStatusCodeList' restricts='java.lang.String'>
    <Description>This list defines the status of an agreement component.</Description>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancelled' generator='Cancelled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AgreementOptionStatusCodeList' originalName='AgreementOptionStatusCodeList' restricts='java.lang.String'>
    <Description>Subscribed Option Status</Description>
    <Enumerand isSynthetic='true' name='Inprogress' generator='In progress'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Onhold' generator='On hold'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Canceled' generator='Canceled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ended' generator='Ended'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AgreementRequestStatusCodeList' originalName='AgreementRequestStatusCodeList' restricts='java.lang.String'>
    <Description>Possible life cycle states for agreement request.</Description>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Invalid' generator='Invalid'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Processed' generator='Processed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Valid' generator='Valid'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AgreementStatusCodeList' originalName='AgreementStatusCodeList' restricts='java.lang.String'>
    <Description>This code list accounts for the various life cycle statuses of agreements.</Description>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForce' generator='In Force'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Terminated' generator='Terminated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderNegotiation' generator='Under Negotiation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancelled' generator='Cancelled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForceChangePending' generator='In Force - Change Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementPrematureEndings' generator='Agreement Premature Endings'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Applied' generator='Applied'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CustomerRejected' generator='Customer Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FullLifeEnding' generator='Full Life Ending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForceWithTemporaryCoverage' generator='In Force With Temporary Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsurerRejected' generator='Insurer Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lapsed' generator='Lapsed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Matured' generator='Matured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NegotiationEnd' generator='Negotiation End'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotTakenUp' generator='Not Taken Up'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Offered' generator='Offered'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='QuoteAbandoned' generator='Quote Abandoned'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Quoted' generator='Quoted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReplacedByCustomerApplication' generator='Replaced By Customer Application'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReplacedByInsurerCounteroffer' generator='Replaced By Insurer Counteroffer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Requested' generator='Requested'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AlphabetCodeList' originalName='AlphabetCodeList' restricts='java.lang.String'>
    <Enumerand isSynthetic='true' name='A' generator='A'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='B' generator='B'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='C' generator='C'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='D' generator='D'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='E' generator='E'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='F' generator='F'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='G' generator='G'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='H' generator='H'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='I' generator='I'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='J' generator='J'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='K' generator='K'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='L' generator='L'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='M' generator='M'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='N' generator='N'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='O' generator='O'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='P' generator='P'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Q' generator='Q'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='R' generator='R'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='S' generator='S'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='T' generator='T'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='U' generator='U'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='V' generator='V'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='W' generator='W'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='X' generator='X'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Y' generator='Y'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Z' generator='Z'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AntiTheftProductCodeList' originalName='AntiTheftProductCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of anti-theft device or product.</Description>
    <Enumerand isSynthetic='true' name='VehicleManufacturerOriginalEquipmentManufacturer' generator='Vehicle Manufacturer/Original Equipment Manufacturer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PROTG' generator='PRO-TG'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sherlock' generator='Sherlock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SPAV' generator='SPAV'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SuperDurogarde' generator='Super Duro-garde'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Doc' generator='Doc'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Autogarde' generator='Auto-garde'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RAMCO' generator='RAMCO'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Apple' generator='Apple'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Boomerang' generator='Boomerang'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DuroVIP' generator='Duro VIP'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VSS150' generator='VSS 150'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Automate' generator='Automate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TheftbusterTB300VVICCapproved' generator='Theftbuster TB300V (VICC approved)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Autowatch329TiVICCapproved' generator='Autowatch 329Ti (VICC approved)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Magtec6000VICCapproved' generator='Magtec 6000 (VICC approved)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PowerlockCanadaVICCapproved' generator='Powerlock Canada (VICC approved)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VICCapprovedproductVehicleInformationCenterofCanada' generator='VICC approved product (Vehicle Information Center of Canada)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.AutoAntiTheftDeviceCodeList' originalName='AutoAntiTheftDeviceCodeList' restricts='java.lang.String'>
    <Description>It identifies the principal anti-theft device found on the vehicle.</Description>
    <Enumerand isSynthetic='true' name='AlarmSystem' generator='Alarm System'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SecurityBattery' generator='Security Battery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ActiveDisabling' generator='Active Disabling'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectronicRetrieval' generator='Electronic Retrieval'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EtchedWindow' generator='Etched Window'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuelCutOff' generator='Fuel Cut-Off'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HoodLock' generator='Hood Lock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IgnitionCutOff' generator='Ignition Cut-Off'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SteeringLock' generator='Steering Lock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NoAntiTheftDevicePresent' generator='No Anti-Theft Device Present'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PassiveDisabling' generator='Passive Disabling'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShakerSwitch' generator='Shaker Switch'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WindowID' generator='Window ID'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AntiTheftDevicePresent' generator='Anti-Theft Device Present'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.BeneficiaryDesignationCodeList' originalName='BeneficiaryDesignationCodeList' restricts='java.lang.String'>
    <Description>Beneficiary Designation</Description>
    <Enumerand isSynthetic='true' name='Allnaturalchildrenoftheinsured' generator='All natural children of the insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrothersofInsured' generator='Brothers of Insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessAgreement' generator='Business Agreement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ByName' generator='By Name'>
      <Description>Identifies a Beneficiary with beneficiary designation 'By name'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Childrenbornofmarriage' generator='Children born of marriage.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChildrenOfInsured' generator='Children Of Insured'>
      <Description>Identifies a Beneficiary with beneficiary designation 'Children of Insured'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Childrenofmarriage' generator='Children of marriage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChildrenofPrimaryBeneficiary' generator='Children of Primary Beneficiary'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Complex' generator='Complex'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Creditors' generator='Creditors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DomesticPartner' generator='Domestic Partner'>
      <Description>Identifies a Beneficiary with beneficiary designation 'Domestic partner'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Estate' generator='Estate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EstateofPrimaryBeneficiary' generator='Estate of Primary Beneficiary'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExSpouseofInsured' generator='Ex-Spouse of Insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fractions' generator='Fractions'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Insured' generator='Insured'>
      <Description>Identifies a Beneficiary with beneficiary designation 'Insured'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LastWillandTestament' generator='Last Will and Testament'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lawfulchildrenofinsured' generator='Lawful children of insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Legallyadoptedchildrenofinsured' generator='Legally adopted children of insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Parentsofinsured' generator='Parents of insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ParentsofPrimaryBeneficiary' generator='Parents of Primary Beneficiary'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SiblingsofInsured' generator='Siblings of Insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SistersofInsured' generator='Sisters of Insured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SplitDollar' generator='Split Dollar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Spouse' generator='Spouse'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpouseandChildren' generator='Spouse and Children'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurvivingInsured' generator='Surviving Insured'>
      <Description>Identifies a Beneficiary with beneficiary designation 'Surviving Insured'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrustAgreement' generator='Trust Agreement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UniformGiftstoMinors' generator='Uniform Gifts to Minors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.BroadLineOfBusinessCodeList' originalName='BroadLineOfBusinessCodeList' restricts='java.lang.String'>
    <Description>A code list identifying the broad line of business classification.</Description>
    <Enumerand isSynthetic='true' name='Agriculture' generator='Agriculture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Annuity' generator='Annuity'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommercialLines' generator='Commercial Lines'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Health' generator='Health'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Life' generator='Life'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PersonalLines' generator='Personal Lines'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PleasureAndBusiness' generator='Pleasure And Business'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.CancellationReasonCodeList' originalName='CancellationReasonCodeList' restricts='java.lang.String'>
    <Description>It indicates why the cancellation, or non-renewal is taking place.</Description>
    <Enumerand isSynthetic='true' name='AgencyCompanyTerminationProducerInsurerTermination' generator='Agency/Company Termination - Producer/Insurer Termination'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanceledatRequestoftheFinanceCompany' generator='Canceled at Request of the Finance Company'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanceledbyUnderwriterorPlanAdministrator' generator='Canceled by Underwriter or Plan Administrator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateOfficerNonElection' generator='Corporate Officer NonElection'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoveragePlacedElsewhere' generator='Coverage Placed Elsewhere'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CourtRelease' generator='Court Release'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DuplicateCoverage' generator='Duplicate Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FailuretoComplywithTermsandConditionsexAuditFailure' generator='Failure to Comply with Terms and Conditions (ex. Audit Failure)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FailuretoPayDeductible' generator='Failure to Pay Deductible'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsuredsRequest' generator='Insured&apos;s Request'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MisrepresentationofInformationonApplication' generator='Misrepresentation of Information on Application'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonPayment' generator='Non-Payment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotTaken' generator='Not Taken'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OutofBusiness' generator='Out of Business'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RevocationofVoluntaryMarketAcceptance' generator='Revocation of Voluntary Market Acceptance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rewritten' generator='Rewritten'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessSold' generator='Business Sold'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubstantialChangeinRisk' generator='Substantial Change in Risk'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderwritingReasons' generator='Underwriting Reasons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WorkCompleted' generator='Work Completed'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.CoverageCodeList' originalName='CoverageCodeList' restricts='java.lang.String'>
    <Description>A code list representing coverages.</Description>
    <Enumerand isSynthetic='true' name='AutoLiabilityCoverage' generator='Auto Liability Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BasicCoverage' generator='Basic Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BodilyInjuryCoverage' generator='Bodily Injury Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BroadCoverage' generator='Broad Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CollisionCoverage' generator='Collision Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComprehensiveCoverage' generator='Comprehensive Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DwellingCoverage' generator='Dwelling Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EarthquakeCoverage' generator='Earthquake Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LossOfUseCoverage' generator='Loss Of Use Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MedicalPaymentsCoverage' generator='Medical Payments Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PersonalLiabilityCoverage' generator='Personal Liability Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PersonalPropertyCoverage' generator='Personal Property Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PropertyDamageCoverage' generator='Property Damage Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialCoverage' generator='Special Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TowingCoverage' generator='Towing Coverage'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.CoveragePriorityCodeList' originalName='CoveragePriorityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of coverage components according to their priority in relation to other coverages/policies.</Description>
    <Enumerand isSynthetic='true' name='Excess' generator='Excess'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ContributionPerLimitRatio' generator='Contribution Per Limit Ratio'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EqualShare' generator='Equal Share'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Primary' generator='Primary'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.CreditMechanismCodeList' originalName='CreditMechanismCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of LoanAccountAgreements according to their credit mechanism.</Description>
    <Enumerand isSynthetic='true' name='RevolvingCredit' generator='Revolving Credit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FixedTermLoan' generator='Fixed Term Loan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Leasing' generator='Leasing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LineOfCredit' generator='Line Of Credit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HomeEquityLineOfCredit' generator='Home Equity Line Of Credit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Overdraft' generator='Overdraft'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.EndorsementCodeList' originalName='EndorsementCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of CreditCardAgreements according to their endorsement.</Description>
    <Enumerand isSynthetic='true' name='NonEndorsed' generator='Non Endorsed'>
      <Description>Identifies a CreditCardAgreement with endorsement 'Non-endorsed'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Private' generator='Private'>
      <Description>Identifies a CreditCardAgreement with endorsement 'Private'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.ExcessOfLossTypeCodeList' originalName='ExcessOfLossTypeCodeList' restricts='java.lang.String'>
    <Description>Enables to determine the Excess of Loss treaty type.</Description>
    <Enumerand isSynthetic='true' name='RPP' generator='RPP'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Backup' generator='Back up'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.InsurableInterestCodeList' originalName='InsurableInterestCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the insurable interest of the insured party.</Description>
    <Enumerand isSynthetic='true' name='ArchitectsEngineersorSurveyors' generator='Architects, Engineers or Surveyors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Child' generator='Child'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ControllingInterest' generator='Controlling Interest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoOwnerofInsuredPremises' generator='Co-Owner of Insured Premises'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dependent' generator='Dependent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Designated' generator='Designated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Executor' generator='Executor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExtensionOf' generator='Extension Of'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrantorofFranchise' generator='Grantor of Franchise'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KeyPerson' generator='Key Person'>
      <Description>This concept gives informations on a person's profile in a key person insurance context.
Key person insurance is a particular type of life insurance policy taken out by a company on one of their employees, in which the company is the beneficiary in the case of that employee's untimely demise. Key person insurance is a relatively new phenomenon, but has attracted much praise and is encouraged by many strategic advisors. Life insurance is basically a system by which a fixed amount of money is paid to a beneficiary in the event that the person being covered dies. Most life insurance companies offer a type of key person insurance, as it has become more and more necessary in the modern business world.

There are four categories of loss for which key person insurance can provide compensation:
1. Losses related to the extended period when a key person is unable to work, to provide temporary personnel and, if necessary to finance the recruitment and training of a replacement.

2. Insurance to protect profits. For example, offsetting lost income from lost sales, losses resulting from the delay or cancellation of any business project that the key person was involved in, loss of opportunity to expand, loss of specialized skills or knowledge.

3. Insurance to protect shareholders or partnership interests. Typically this is insurance to enable shareholdings or partnership interests to be purchased by existing shareholders or partners.

4. Insurance for anyone involved in guaranteeing business loans or banking facilities. The value of insurance coverage is arranged to equal the value of the guarantee.
A key person can be anyone directly associated with the business whose loss can cause financial strain to the business. For example, the person could be a director of the company, a partner, a key sales person, key project manager, or someone with specific skills or knowledge which is especially valuable to the company.
Syn: key man insurance or keyman insurance.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lessor' generator='Lessor'>
      <Description>A party who grants a lease of property.

SOURCE: http://dictionary.reference.com/browse/lessor

A person or organization who provides property or workers via a lease. In worker's compensation, this is a company who provides leased employees to another company.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LessorandLossPayee' generator='Lessor and Loss Payee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lienholder' generator='Lienholder'>
      <Description>A party who has a lien on particular property. The lienholder is the legal owner of the property and holds the title to it. A lien is a form of security instrument that secures payment of a debt.

e.g. A lienholder is the lending institution that financed the purchase of a vehicle for a person.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LossPayee' generator='Loss Payee'>
      <Description>The party to whom the claim from a loss is to be paid.

SOURCE: http://www.investopedia.com/terms/l/loss-payee.asp

A loss payee clause (or loss payable clause) is a clause in a contract of insurance which provides that in the event of payment being made under the policy in relation to the insured risk, payment will be made to a third party rather than to the insured beneficiary of the policy. Such clauses are common where the insured property is subject to a mortgage or other security interest and the mortgagee (ie. usually a bank) requires that the property be insured and that such a clause be included.

SOURCE: http://en.wikipedia.org/wiki/Loss_payee_clause</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LossPayeeandAdditionalInterest' generator='Loss Payee and Additional Interest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mortgagee' generator='Mortgagee'>
      <Description>The party to a mortgage who makes the loan. The party who holds mortgaged property as security for repayment of a loan.

SOURCE: http://dictionary.reference.com/browse/mortgagee</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MortgageeAssigneeorReceiver' generator='Mortgagee, Assignee or Receiver'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Owner' generator='Owner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerLesseeContractorFormA' generator='Owner, Lessee, Contractor (Form A)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerLesseeContractorFormB' generator='Owner, Lessee, Contractor (Form B)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnersManagersorOperatorsofPremises' generator='Owners, Managers or Operators of Premises'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnersorContractors' generator='Owners or Contractors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Spouse' generator='Spouse'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StateorGovernmentalAgencyorSubdivision' generator='State or Governmental Agency or Subdivision'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StateorPoliticalSubdivisionPermitsRelatingtoPremises' generator='State or Political Subdivision Permits Relating to Premises'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StateorPoliticalSubdivisionsPermits' generator='State or Political Sub-divisions - Permits'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StudentLivingAwayFromTheResidencePremises' generator='Student Living Away From The Residence Premises'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TownhouseAssociation' generator='Townhouse Association'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Vendor' generator='Vendor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VendorIncludesRestrictionsorAbridgements' generator='Vendor (Includes Restrictions or Abridgements)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Volunteers' generator='Volunteers'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.InsuranceAgreementStatusCodeList' originalName='InsuranceAgreementStatusCodeList' restricts='java.lang.String'>
    <Description>Possible life cycle states for insurance policies.</Description>
    <Enumerand isSynthetic='true' name='Applied' generator='Applied'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CustomerRejected' generator='Customer Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FullLifeEnding' generator='Full Life Ending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForceWithTemporaryCoverage' generator='In Force With Temporary Coverage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsurerRejected' generator='Insurer Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lapsed' generator='Lapsed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotTakenUp' generator='Not Taken Up'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Offered' generator='Offered'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementPrematureEndings' generator='Agreement Premature Endings'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Quoted' generator='Quoted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReplacedByCustomerApplication' generator='Replaced By Customer Application'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReplacedByInsurerCounteroffer' generator='Replaced By Insurer Counteroffer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NegotiationEnd' generator='Negotiation End'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='QuoteAbandoned' generator='Quote Abandoned'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancelled' generator='Cancelled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForce' generator='In Force'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InForceChangePending' generator='In Force - Change Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Terminated' generator='Terminated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderNegotiation' generator='Under Negotiation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.InsuredTypeCodeList' originalName='InsuredTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the type of insured.</Description>
    <Enumerand isSynthetic='true' name='Additional' generator='Additional'>
      <Description>A party (person or organization) that is not automatically included as an insured under the agreement (e.g. contract) of another (insured) party, but for whom the named insured's agreement provides a certain degree of protection.

An endorsement is typically required to effect additional insured status. The named insured's impetus for providing additional insured status to others may be a desire to protect the other person or organization because of a close relationship with that person or organization (e.g., employees or members of an insured club), or to comply with a contractual agreement requiring the named insured to do so (e.g., customers or owners of property leased by the named insured).</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstNamed' generator='First Named'>
      <Description>The first name on the declaration page of the agreement (e.g. contract).

Explanation: Because there is wording in the contract specific to 'First Name Insured'. The first Named Insured is required to keep records. Audit and cancellations notices are sent to the first Named Insured. Non-renewal notice is sent to the first Named Insured. The contract is very specific.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Joint' generator='Joint'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Named' generator='Named'>
      <Description>A party (person or organization), other than the first named insured, identified as an insured in the agreement (e.g. contract) declarations or an addendum to the contract declarations.

Explanation: It can be all the Named Insured on the declarations page other than the First Named Insured. It could also apply as you endorse another party onto the declarations page. Or sometimes, it can apply when you acquire a new operation or organization.

The name on the declaration page of the contract. Explanation: There is wording in the CGL form that specifically refers to the Named Insured. For instance, 'No person or organization is an insured with respect to the conduct of any current or past partnership, joint venture or limited liability company that is not shown as a Named Insured in the Declarations.' See also Insured.

The term additional named insured has not acquired a uniformly agreed-upon meaning within the insurance industry, and use of the term in the two different senses defined above often produces confusion in requests for additional insured status between contracting parties.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Primary' generator='Primary'>
      <Description>A party covered as defined in the insurance contract that is named as the primary insured. Coverage is provided primarily to the primary insured and the insurer will primarily deal with the primary insured, or his representative, for all issues concerning the insurance policy. 

In life insurance policies there is one designated insured, the person so named; or a contract can be issued to numerous insureds on a group basis.

For non-life insurance policies (e.g. P&amp;C, general insurance) the primary insured is often referred to as the "first named insured" with corresponding responsibilities and provisions as outlined in the agreement.

For example, a personal auto policy may show "John Doe" as the policyholder on the declarations page, thereby making him the "first named insured". John's wife and children who reside with him would be considered "insureds" on this policy.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LineOfBusinessCodeList' originalName='LineOfBusinessCodeList' restricts='java.lang.String'>
    <Description>A code list identifying the line of business classification.</Description>
    <Enumerand isSynthetic='true' name='Auto' generator='Auto'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Aviation' generator='Aviation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoilerAndMachinery' generator='Boiler And Machinery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BOP' generator='BOP'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Crime' generator='Crime'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Earthquake' generator='Earthquake'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Excess' generator='Excess'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Flood' generator='Flood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GarageAndDealers' generator='Garage And Dealers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InlandMarine' generator='Inland Marine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Liability' generator='Liability'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Package' generator='Package'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Property' generator='Property'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialtyLines' generator='Specialty Lines'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TermLife' generator='Term Life'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Truckers' generator='Truckers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Umbrella' generator='Umbrella'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UniversalLife' generator='Universal Life'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Watercraft' generator='Watercraft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WholeLife' generator='Whole Life'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wind' generator='Wind'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WorkersCompensation' generator='Workers Compensation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanInterestMethodCodeList' originalName='LoanInterestMethodCodeList' restricts='java.lang.String'>
    <Description>Loan Interest Method</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaidInCash' generator='Paid In Cash'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Capitalized' generator='Capitalized'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanInterestPaymentMethodCodeList' originalName='LoanInterestPaymentMethodCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of LoanComponents according to their loan interest method.</Description>
    <Enumerand isSynthetic='true' name='SeparateInterestPayment' generator='Separate Interest Payment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AddOnInterest' generator='Add On Interest'>
      <Description>A procedure in which the interest payable during the term of the loan is added to the principal of the loan. The borrower repays principal plus interest.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanInterestTimingCodeList' originalName='LoanInterestTimingCodeList' restricts='java.lang.String'>
    <Description>Loan Interest Timing</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InterestinAdvance' generator='Interest in Advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InterestinArrears' generator='Interest in Arrears'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanInterestTypeCodeList' originalName='LoanInterestTypeCodeList' restricts='java.lang.String'>
    <Description>Loan Interest Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fixedloaninterestrate' generator='Fixed loan interest rate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Variableloaninterestrate' generator='Variable loan interest rate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Indexedloaninterestrate' generator='Indexed loan interest rate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Adjustableloaninterestrate' generator='Adjustable loan interest rate'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanPurposeCodeList' originalName='LoanPurposeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of LoanComponents according to their purpose.</Description>
    <Enumerand isSynthetic='true' name='CashFundingOrCleanCredit' generator='Cash Funding Or Clean Credit'>
      <Description>Identifies a LoanComponent with purpose 'Cash funding or clean credit'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PurchaseOfConsumerGoodsOrConsumerCredit' generator='Purchase Of Consumer Goods Or Consumer Credit'>
      <Description>Identifies a LoanComponent with purpose 'Funding for the purchase of consumer goods or consumer credit'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TemporaryFunding' generator='Temporary Funding'>
      <Description>Identifies a LoanComponent with purpose 'Temporary funding'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommercialInvestment' generator='Commercial Investment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RealEstatePurchase' generator='Real Estate Purchase'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanReasonCodeList' originalName='LoanReasonCodeList' restricts='java.lang.String'>
    <Description>Loan Reason</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Topayoffanotherloan' generator='To pay off another loan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Topaypremiums' generator='To pay premiums'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LoanStatusCodeList' originalName='LoanStatusCodeList' restricts='java.lang.String'>
    <Description>Loan Status</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Available' generator='Available'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Requested' generator='Requested'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Taken' generator='Taken'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Delinquent' generator='Delinquent'>
      <Description>The status of the loan is delinquent. Past due notices have been sent.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Defaulted' generator='Defaulted'>
      <Description>The status of the loan is defaulted.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.LossesCoverageBasisCodeList' originalName='LossesCoverageBasisCodeList' restricts='java.lang.String'>
    <Description>Enables to qualify the cover for losses of the policy.
LOD = A policy providing cover for losses occurring in the defined period no matter when they are reported, as opposed to a claims made policy or a risk attaching policy.</Description>
    <Enumerand isSynthetic='true' name='LOD' generator='LOD'>
      <Description>Losses Occurring During</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LORA' generator='LORA'>
      <Description>LORA = Losses On Risks Attaching.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LODLORA' generator='LOD LORA'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.NatureOfInterestCodeList' originalName='NatureOfInterestCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of a party's interest in an agreement.</Description>
    <Enumerand isSynthetic='true' name='BreachOfWarranty' generator='Breach Of Warranty'>
      <Description>A party in the role of lienholder or lessor, associated with an insurance policy where their interest in the property is managed via an endorsement that causes the policy to continue to protect the financial interest of a lienholder or lessor even when the insured breaches a condition, thereby voiding coverage. Any loss recoveries under such clause are payable only to the lienholder or lessor.

SOURCE: http://www.irmi.com/online/insurance-glossary/terms/b/breach-of-warranty-clause.aspx</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CondominiumUnitOwner' generator='Condominium Unit Owner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoOwner' generator='Co-Owner'>
      <Description>A party that owns property jointly with another party (or parties) and that needs to be accounted for on an agreement related to the jointly owned property.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DesignatedParty' generator='Designated Party'>
      <Description>person or organization</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmployeeAsLessor' generator='Employee As Lessor'>
      <Description>An employee who leases property, such as a vehicle, to his/her employer.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmployeesOtherthanExecutiveOfficers' generator='Employees Other than Executive Officers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LandLeaseInterests' generator='Land Lease Interests'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LeasebackOwner' generator='Leaseback Owner'>
      <Description>A leaseback is an arrangement where the seller of an asset leases back the same asset from the purchaser (the purchaser owns the property and is the "leaseback owner"). The leaseback owner may require the seller/user of the asset acquire insurance to protect the asset from loss. The leaseback owner may also require that it be represented on the insurance policy as an additional interest for that asset - more precisely as the "leaseback owner". 

SOURCE: http://www.investopedia.com/terms/l/leaseback.asp</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LendersLossPayable' generator='Lenders Loss Payable'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LendersLossPayee' generator='Lenders Loss Payee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lessee' generator='Lessee'>
      <Description>A person or organization who leases property or workers (the receiver of the lease). In the case of real estate this is the tenant. In workers' compensation this is the company who leases the workers.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LesseeofLeasedEmployees' generator='Lessee of Leased Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lessor' generator='Lessor'>
      <Description>A party who grants a lease of property.

SOURCE: http://dictionary.reference.com/browse/lessor

A person or organization who provides property or workers via a lease. In worker's compensation, this is a company who provides leased employees to another company.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LessorofLeasedEmployees' generator='Lessor of Leased Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LessorofLeasedEquipment' generator='Lessor of Leased Equipment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lienholder' generator='Lienholder'>
      <Description>A party who has a lien on particular property. The lienholder is the legal owner of the property and holds the title to it. A lien is a form of security instrument that secures payment of a debt.

e.g. A lienholder is the lending institution that financed the purchase of a vehicle for a person.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LimitedAdditionalInterest' generator='Limited Additional Interest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LossPayee' generator='Loss Payee'>
      <Description>The party to whom the claim from a loss is to be paid.

SOURCE: http://www.investopedia.com/terms/l/loss-payee.asp

A loss payee clause (or loss payable clause) is a clause in a contract of insurance which provides that in the event of payment being made under the policy in relation to the insured risk, payment will be made to a third party rather than to the insured beneficiary of the policy. Such clauses are common where the insured property is subject to a mortgage or other security interest and the mortgagee (ie. usually a bank) requires that the property be insured and that such a clause be included.

SOURCE: http://en.wikipedia.org/wiki/Loss_payee_clause</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ManagerLessor' generator='Manager/Lessor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mortgagee' generator='Mortgagee'>
      <Description>The party to a mortgage who makes the loan. The party who holds mortgaged property as security for repayment of a loan.

SOURCE: http://dictionary.reference.com/browse/mortgagee</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MortgageeandLossPayee' generator='Mortgagee and Loss Payee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MortgageHolder' generator='Mortgage Holder'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MortgageServicingAgency' generator='Mortgage Servicing Agency'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerOperator' generator='Owner/Operator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Registrant' generator='Registrant'>
      <Description>A party who registers with or is registered by another party.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TitleHolder' generator='Title Holder'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Trust' generator='Trust'>
      <Description>A trust is an entity established to manage assets for the benefit of a person or group of persons. The trust is managed by one or more persons called 'trustees'. The person or group of persons receiving the benefits generally have no control over the management of the trust.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Trustee' generator='Trustee'>
      <Description>Trustee is a legal term for a holder of property on behalf of a beneficiary. A trust can be set up either to benefit particular persons, or for any charitable purposes (but not generally for non-charitable purposes): typical examples are a will trust for the testator's children and family, a pension trust (to confer benefits on employees and their families), and a charitable trust. In all cases, the trustee may be a person or company, whether or not they are a prospective beneficiary.

SOURCE: http://en.wikipedia.org/wiki/Trustee

A party (e.g. person or an organization) which holds and manages assets on behalf of another via a trust agreement. For example, trustees are appointed to manage a scheme. They are responsible for investing the contributions, paying out the benefits and generally looking after scheme members' interests. The trustees may be appointed from management or staff; sometimes trustees independent of the insurance company are used.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.PilotLogTypeCodeList' originalName='PilotLogTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating a type of pilot log.</Description>
    <Enumerand isSynthetic='true' name='Amphibious' generator='Amphibious'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConventionalGear' generator='Conventional Gear'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Helicopter' generator='Helicopter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotAirBalloon' generator='Hot Air Balloon'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Jet' generator='Jet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MultiEngineLand' generator='Multi-Engine Land'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MultiEngineSeaplane' generator='Multi-Engine Seaplane'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PilotInCommand' generator='Pilot In Command'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PistonHelicopter' generator='Piston Helicopter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RetractableGear' generator='Retractable Gear'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RotorWing' generator='Rotor Wing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SecondInCommand' generator='Second In Command'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SingleEngineTurboProp' generator='Single Engine Turbo Prop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TotalSeaplane' generator='Total Seaplane'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurbineAgriculture' generator='Turbine Agriculture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurbineRotorWing' generator='Turbine Rotor Wing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurbineRotorWingAgriculture' generator='Turbine Rotor Wing Agriculture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurboJet' generator='Turbo Jet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurboProp' generator='Turbo Prop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurbineHelicopter' generator='Turbine Helicopter'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.PremiumCalculationCodeList' originalName='PremiumCalculationCodeList' restricts='java.lang.String'>
    <Description>A code list identifying various types of premium calculations.</Description>
    <Enumerand isSynthetic='true' name='GrossPremium' generator='Gross Premium'>
      <Description>The premium amount including taxes, surcharges and any other fees included in the price of the agreement.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NetPremium' generator='Net Premium'>
      <Description>The premium amount including taxes, surcharges and any other fees excluding the price of the agreement.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.PremiumNatureCodeList' originalName='PremiumNatureCodeList' restricts='java.lang.String'>
    <Description>Contract Premium Nature</Description>
    <Enumerand isSynthetic='true' name='InitialPremium' generator='Initial Premium'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubsequentPremium' generator='Subsequent Premium'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReinstatementPremium' generator='Reinstatement Premium'>
      <Description>Reinstatement premium (RIP) is a prorated insurance or reinsurance premium charged for the reinstatement of the amount of a primary policy or reinsurance coverage limit that has been reduced or exhausted by loss payments under such coverages.
This additional premium is charged under certain excess of loss reinsurance contracts to restore coverage amounts after a loss.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DepostPremium' generator='Depost Premium'>
      <Description>A deposit premium is the amount of premium (usually for an Excess of loss contract) that the Ceding company pays to the reinsurer on a periodic basis during the term of the contract. This amount is generally determined as a percentage of the estimated amount of premium which the contract will produce based on the rate and estimated subject premium. It is often the same as the minimum premium but may be higher or lower. The deposit premium will be adjusted to the higher of the actual developed premium or the minimum premium after the actual subject premium has been determined.

This occurs in cases where all relevant exposure or rating information are not known at the start of the period of cover, or the premium to be paid is dependent on the claims experience during the policy term. An initial premium is paid at the start of the period of cover, followed by an adjustment at the end when the information required is known.

Where this latter adjustment is stipulated at the outset as being upwards only, the term "Minimum and Deposit Premium" applies.

Where it is found in cases relating to retrospective experience rating, the term "swing rated premium" is often applied.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MinimumPremium' generator='Minimum Premium'>
      <Description>An amount of premium which will be charged (usually for an excess of loss reinsurance contract), not withstanding that the actual premium developed by applying the rate to the subject premium could have produced a lower figure. Compare deposit premium.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReinsurancePremium' generator='Reinsurance Premium'>
      <Description>Percentage of premiums paid by the reinsurer to the insurer in quota-share or Facultative treaties as a contribution to the acquisition and administrative costs relating to the business ceded.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.ProfitDestinationCodeList' originalName='ProfitDestinationCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of ProfitSharingComponents according to their destination.</Description>
    <Enumerand isSynthetic='true' name='AccumulateAtInterest' generator='Accumulate At Interest'>
      <Description>Identifies a ProfitSharingComponent with destination 'Accumulate at interest'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AddDividendToCashValueUl' generator='Add Dividend To Cash Value Ul'>
      <Description>Identifies a ProfitSharingComponent with destination 'Add dividend to cash value (UL)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Economatic' generator='Economatic'>
      <Description>Identifies a ProfitSharingComponent with destination 'Economatic'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>Identifies a ProfitSharingComponent with destination 'Other'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaidInCash' generator='Paid In Cash'>
      <Description>Identifies a ProfitSharingComponent with destination 'Paid in cash'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaidUpAdditions' generator='Paid Up Additions'>
      <Description>Identifies a ProfitSharingComponent with destination 'Paid-Up Additions'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlanEnhancement' generator='Plan Enhancement'>
      <Description>Identifies a ProfitSharingComponent with destination 'Plan enhancement (improves until lifetime then shortens premium duration)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementImprovement' generator='Agreement Improvement'>
      <Description>Identifies a ProfitSharingComponent with destination 'Policy Improvement (improves until lifetime plan)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReduceLoanValues' generator='Reduce Loan Values'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce Loan Values'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReduceLoanValuesBalanceInCash' generator='Reduce Loan Values Balance In Cash'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce loan values, balance in cash'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReduceLoanValuesBalanceToAccumulate' generator='Reduce Loan Values Balance To Accumulate'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce loan values, balance to accumulate'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReduceLoanValuesBalanceToPua' generator='Reduce Loan Values Balance To Pua'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce loan values, balance to PUA'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducePremium' generator='Reduce Premium'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce Premium'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducePremiumBalanceInCash' generator='Reduce Premium Balance In Cash'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce premium, balance in cash'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducePremiumBalanceToAccumulate' generator='Reduce Premium Balance To Accumulate'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce premium, balance to accumulate'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducePremiumBalanceToPua' generator='Reduce Premium Balance To Pua'>
      <Description>Identifies a ProfitSharingComponent with destination 'Reduce premium, balance to PUA'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecifiedAmountInCashBalanceToPua' generator='Specified Amount In Cash Balance To Pua'>
      <Description>Identifies a ProfitSharingComponent with destination 'Specified amount in cash balance to PUA'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TermDividendOptionFull' generator='Term Dividend Option Full'>
      <Description>Identifies a ProfitSharingComponent with destination 'Term Dividend Option (FULL)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
      <Description>Identifies a ProfitSharingComponent with destination 'Unknown'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.ReasonForTransferCodeList' originalName='ReasonForTransferCodeList' restricts='java.lang.String'>
    <Description>It identifies the reason for transfer.</Description>
    <Enumerand isSynthetic='true' name='BrokerageAcquisition' generator='Brokerage Acquisition'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CompanyAcquisition' generator='Company Acquisition'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewBusinessToTheBroker' generator='New Business To The Broker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PortfolioTransfer' generator='Portfolio Transfer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Remarketed' generator='Remarketed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReplacementOfAgreement' generator='Replacement Of Agreement'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.RelatedAgreementNatureCodeList' originalName='RelatedAgreementNatureCodeList' restricts='java.lang.String'>
    <Description>This list defines the nature of a related agreement.</Description>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Prior' generator='Prior'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Underlying' generator='Underlying'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.RepaymentTypeCodeList' originalName='RepaymentTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of LoanComponents according to their repayment type.</Description>
    <Enumerand isSynthetic='true' name='Amortisable' generator='Amortisable'>
      <Description>Identifies a Loan Component with repayment type 'Amortisable'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FixedRedemption' generator='Fixed Redemption'>
      <Description>Identifies a LoanComponent with repayment type 'Fixed redemption'. 
Fixed redemption means that for every installment period, the amount of the installment may be different: the part of the capital redemption of the loan is constant, while the interest part of each installment decreases.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WithInterest' generator='With Interest'>
      <Description>Identifies a Loan Component with repayment type 'With interest'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FixedInstallment' generator='Fixed Installment'>
      <Description>Identifies a LoanComponent with repayment type 'Fixed installment'.  

Fixed installment means that for every installment period, the amount of the installment is equal, but the interest and capital redemption parts of each installment are different. In the beginning of the loan there will be more interest and less capital redemption than at the end of the loan.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.RepresentativeTypeCodeList' originalName='RepresentativeTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of servicing representative.</Description>
    <Enumerand isSynthetic='true' name='AccountRepresentative' generator='Account Representative'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CustomerServiceRepresentative' generator='Customer Service Representative'>
      <Description>The person most directly associated with customer service in a given context (also known as "CSR").</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.RequestReasonCodeList' originalName='RequestReasonCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of agreement requests according to their request reason.</Description>
    <Enumerand isSynthetic='true' name='AgreementSuspension' generator='Agreement Suspension'>
      <Description>Identifies an agreement request with request reason 'Agreement suspended because of repetitive non payment of premium after warning'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.SignatoryDesignationCodeList' originalName='SignatoryDesignationCodeList' restricts='java.lang.String'>
    <Description>Signatory Designation</Description>
    <Enumerand isSynthetic='true' name='AgreementOwner' generator='Agreement Owner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementProducer' generator='Agreement Producer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Applicant' generator='Applicant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Insured' generator='Insured'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.TaxQualificationCodeList' originalName='TaxQualificationCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of agreements according to their tax qualification.</Description>
    <Enumerand isSynthetic='true' name='_401K' generator='401 K'>
      <Description>Identifies an insurance policy with tax qualification '401 K'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_403B' generator='403 B'>
      <Description>Identifies a InsurancePolicy with tax qualification '403B (includes Tax Sheltered Annuity TSA/TDA)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConformingToStatePresidentRegulation' generator='Conforming To State President Regulation'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Conforming to State President Regulation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeferredCompensation' generator='Deferred Compensation'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Deferred Compensation (includes 457, KEOGH, Pension/Profit Sharing, Simple Employee Pension SAR/SEP, South Africa)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeferredProfitSharingPlan' generator='Deferred Profit Sharing Plan'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Deferred Profit Sharing Plan'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EdIra' generator='Ed Ira'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Ed IRA (education)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Esop' generator='Esop'>
      <Description>Identifies a InsurancePolicy with tax qualification 'ESOP (Employee Stock Ownership Plan)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GroupRegisteredSavingsPlan' generator='Group Registered Savings Plan'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Group Registered Savings Plan'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hr10' generator='Hr 10'>
      <Description>Identifies a InsurancePolicy with tax qualification 'HR 10'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ira' generator='Ira'>
      <Description>Identifies a InsurancePolicy with tax qualification 'IRA'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiflifeIncomeFund' generator='Liflife Income Fund'>
      <Description>Identifies a InsurancePolicy with tax qualification 'LIF Life Income Fund'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonConformingToStatePresidentRegulation' generator='Non Conforming To State President Regulation'>
      <Description>Identifies a InsurancePolicy with tax qualification 'NonConforming to State President Regulation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonQualified' generator='Non Qualified'>
      <Description>Identifies a InsurancePolicy with tax qualification 'NonQualified'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Other'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreferredCompensation' generator='Preferred Compensation'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Preferred Compensation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreservationFundPension' generator='Preservation Fund Pension'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Preservation Fund Pension'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreservationFundProvident' generator='Preservation Fund Provident'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Preservation Fund Provident'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RegisteredHomeOwnershipSavingsPlan' generator='Registered Home Ownership Savings Plan'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Registered Home Ownership Savings Plan'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Resp' generator='Resp'>
      <Description>Identifies a InsurancePolicy with tax qualification 'RESP (Registered Education Savings Plan)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RespfamilyPlan' generator='Respfamily Plan'>
      <Description>Identifies a InsurancePolicy with tax qualification 'RESP Family Plan'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RothConversionIra' generator='Roth Conversion Ira'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Roth Conversion IRA'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rothira' generator='Rothira'>
      <Description>Identifies a InsurancePolicy with tax qualification 'ROTHIRA'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rrif' generator='Rrif'>
      <Description>Identifies a InsurancePolicy with tax qualification 'RRIF (Registered Retirement Income Fund)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rrsp' generator='Rrsp'>
      <Description>Identifies a InsurancePolicy with tax qualification 'RRSP (Registered Retirement Savings Plan)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rrtf' generator='Rrtf'>
      <Description>Identifies a InsurancePolicy with tax qualification 'RRTF'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sep' generator='Sep'>
      <Description>Identifies a InsurancePolicy with tax qualification 'SEP (Simple Employee Pension)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpousalGroupRegisteredSavingsPlan' generator='Spousal Group Registered Savings Plan'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Spousal Group Registered Savings Plan'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpousalRrif' generator='Spousal Rrif'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Spousal RRIF'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpousalRrsp' generator='Spousal Rrsp'>
      <Description>Identifies a InsurancePolicy with tax qualification 'Spousal RRSP'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.TreatyReinsuranceCategoryCodeList' originalName='TreatyReinsuranceCategoryCodeList' restricts='java.lang.String'>
    <Description>Treaty Reinsurance Category</Description>
    <Enumerand isSynthetic='true' name='Reinsurance' generator='Reinsurance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoReinsurance' generator='CoReinsurance'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.TreatyStatusCodeList' originalName='TreatyStatusCodeList' restricts='java.lang.String'>
    <Description>Treaty Status</Description>
    <Enumerand isSynthetic='true' name='Closed' generator='Closed'>
      <Description>Closed</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Valid' generator='Valid'>
      <Description>Valid</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Simulation' generator='Simulation'>
      <Description>Simulation</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>Other</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.ValidityCodeList' originalName='ValidityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of agreement requests according to their validity.</Description>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
      <Description>Identifies a agreement request with validity 'Rejected'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Undefined' generator='Undefined'>
      <Description>Identifies a agreement request with validity 'Undefined'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Valid' generator='Valid'>
      <Description>Identifies a agreement request with validity 'Valid'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.VehicleDamageabilityCodeList' originalName='VehicleDamageabilityCodeList' restricts='java.lang.String'>
    <Description>It indicates the relative degree of damageability of the vehicle.</Description>
    <Enumerand isSynthetic='true' name='Average' generator='Average'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='High' generator='High'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Low' generator='Low'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.VehicleLeasedCodeList' originalName='VehicleLeasedCodeList' restricts='java.lang.String'>
    <Description>It indicates the ownership/leased status of this vehicle.</Description>
    <Enumerand isSynthetic='true' name='Ownedbyinsuredleasedorhiredtoothers' generator='Owned by insured, leased or hired to others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Notownedbyinsuredleasedorhiredfromothers' generator='Not owned by insured, leased or hired from  others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ownedbyinsurednotleasedtoothers' generator='Owned by insured, not leased to others'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.VehicleSpecialUseCodeList' originalName='VehicleSpecialUseCodeList' restricts='java.lang.String'>
    <Description>It indicates any special use of this vehicle. If more than one code is appropriate, the code representing the majority use should apply.</Description>
    <Enumerand isSynthetic='true' name='AmusementDevice' generator='Amusement Device'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BobtailOperations' generator='Bobtail Operations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UsedinDumping' generator='Used in Dumping'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UsedinDumpingBobtailOperations' generator='Used in Dumping/Bobtail Operations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmergencyVehicle' generator='Emergency Vehicle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarmersLimitedRegistrationPlates' generator='Farmers Limited Registration Plates'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquefiedGas' generator='Liquefied Gas'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UsedinMovingOperations' generator='Used in Moving Operations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MovingVanAssociations' generator='Moving Van Associations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FreightForwardingOperations' generator='Freight Forwarding Operations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UsedinLogging' generator='Used in Logging'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarmtoMarket' generator='Farm-to-Market'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquefiedProducts' generator='Liquefied Products'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RollingStores' generator='Rolling Stores'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Showroom' generator='Showroom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ToxicWastes' generator='Toxic Wastes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Explosives' generator='Explosives'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.VehicleUseCodeList' originalName='VehicleUseCodeList' restricts='java.lang.String'>
    <Description>It identifies the predominant use of the vehicle</Description>
    <Enumerand isSynthetic='true' name='Business' generator='Business'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Clergy' generator='Clergy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Commercial' generator='Commercial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Commute' generator='Commute'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CarPool' generator='Car Pool'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrivenToandFromWork' generator='Driven To and From Work'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrivenToandFromSchool' generator='Driven To and From School'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Farm' generator='Farm'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pleasure' generator='Pleasure'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Retail' generator='Retail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShowRestrictedUse' generator='Show (Restricted Use)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Service' generator='Service'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VanPoolsEmployerFurnished' generator='Van Pools (Employer Furnished)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VanPoolsallother' generator='Van Pools (all other)'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Agreement.AgreementCodeLists.VowelsCodeList' originalName='VowelsCodeList' restricts='java.lang.String'>
    <Enumerand isSynthetic='true' name='A' generator='A'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='E' generator='E'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='I' generator='I'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='O' generator='O'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='U' generator='U'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' originalName='AgreementClauseComponent' superclassName='org.acord.aim.Agreement.AgreementComponent' isAbstract='false'>
    <Description>Agreements often contain clauses involving provisions, exclusions, obligations, and the like.

e.g. An insurance policy often contains a clause or clauses explaining the expectations of the parties involved in the agreement, such as the obligation of the insurer in the event the policy is canceled for non-payment.</Description>
    <AttributeProperty isSynthetic='true' name='agreementClauseTypeCode' originalName='agreementClauseTypeCode' assignable='true' index='1'>
      <Description>Indicates if the clause is an inclusion or an exclusion clause.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.CommonOptionsCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>Description of the clause (text)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementElement' originalName='AgreementElement' superclassName='org.acord.aim.Agreement.AgreementComponent' isAbstract='false'>
    <Description>This concept is the super-type of the concepts specifying the benefit attached to a contract coverage, such as: limit, deductibles, franchise, etc.</Description>
    <AttributeProperty isSynthetic='true' name='elementValue' originalName='elementValue' assignable='true' index='0'>
      <Description>The value of the element.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' originalName='AgreementFeatureComponent' superclassName='org.acord.aim.Agreement.AgreementComponent' isAbstract='false'>
    <Description>This concept is the super type for available features for a given agreement. The selected feature is directly related to the product feature specifications defined as available on the product this agreement is created from.</Description>
    <RelationshipProperty isSynthetic='true' name='productoptionspecification' originalName='product option specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementFeatureComponentForproductoptionspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementComponentSubtypes.CoverageComponent' originalName='CoverageComponent' superclassName='org.acord.aim.Agreement.AgreementComponent' isAbstract='false'>
    <Description>A financial services agreement component detailing the circumstances under which a benefit (money or services) will be paid. Effectively this provides protection against a particular risk. In property insurance, coverage identifies elements such as perils insured against, properties covered, locations covered, individuals insured and the limits of indemnification. In life insurance, a coverage identifies elements such as living and death benefits. 
 
e.g: Critical illness benefit, part of John's life policy.</Description>
    <AttributeProperty isSynthetic='true' name='coverageCode' originalName='coverageCode' assignable='true' index='1'>
      <Description>A code representing a coverage.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.CoverageCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='coveragePriorityCode' originalName='coveragePriorityCode' assignable='true' index='0'>
      <Description>Indicates the priority of the coverage in relation to other insurance policies that cover the same insured for the same risks. 
 
e.g: Contribution per limit ratio 
 
e.g: Equal share 
 
e.g: Excess 
 
e.g: Primary</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.CoveragePriorityCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='coveragespecification' originalName='coverage specification' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductCoverageSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CoverageComponentForcoveragespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='eligibilityDuration' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='exposureAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='extendedReportingDuration' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='retroactiveStartDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='waitingPeriodDuration' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementElementSubtypes.AgreementCoverageFranchise' originalName='AgreementCoverageFranchise' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementElement' isAbstract='false'>
    <Description>A franchise is similar to a deductible in that the insurer makes no settlement if the total claim is below the franchise figure. However, if the claim is above the franchise figure, the claim is paid in full. Franchises are very unusual in modern insurance practice though machinery breakdown covers sometimes use time franchises.
It can be interpreted in amount, percentage, time unit.

Franchise clause: Clause found in a marine insurance policy that states that the policy will not pay any claims less than a given amount but will pay claims in excess of that amount. The purpose of this clause is to eliminate the costs associated with processing small claims because their costs could easily exceed the actual amount of the claim. This is a form of deductible insurance.</Description>
    <RelationshipProperty isSynthetic='true' name='annualFranchiseAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='franchiseAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='francisedeductiblespecification' originalName='francise deductible specification' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.FranchiseSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementCoverageFranchiseForfrancisedeductiblespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementElementSubtypes.CoverageDeductible' originalName='CoverageDeductible' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementElement' isAbstract='false'>
    <Description>This concept defines the deductible characteristics of the selected coverage.

In an insurance policy, the deductible (North American term) or excess (UK term) is the portion of any claim that is not covered by the insurance provider. It is the amount of expenses that must be paid out of pocket before an insurer will cover any expenses. It is normally quoted as a fixed quantity and is a part of most policies covering losses to the policy holder. The deductible must be paid by the insured, before the benefits of the policy can apply. Typically, a general rule is: the higher the deductible, the lower the premium, and vice versa.

In a typical automobile insurance policy, a deductible will apply to claims arising from damage to or loss of the policy holder's own vehicle, whether this damage/loss is caused by accidents for which the holder is responsible, or vandalism and theft. Third-party liability coverage generally has no deductible, since the third party will likely attempt to recover any loss, however small, for which the policy holder is liable.

Most health insurance policies and some travel insurance policies have deductibles as well. The type of health insurance deductibles can also vary, as individual amounts and family amounts. Major medical insurance policies are known for often having a deductible which does not cover the cost of routine visits (e.g., to a doctor's office).

For example, a person might have an auto insurance policy with a $500 deductible on collision coverage. If this person were in an accident that did $800 worth of damage to the car, then the insurance company would pay him or her $300. The insured is responsible for the first $500 of damage (the deductible), and the insurance company pays the balance. In industrial risks it is also common for the deductible to be expressed as a percentage of the loss, often though not always, with a minimum and maximum amount, for example 10% of loss minimum 1,500USD max 5,000USD. Therefore in the event of a claim totaling 25,000USD the applicable deductible is 2,500 (i.e. 10% of the loss), meaning that the assured would receive an indemnity payment from the insurer of 22,500USD. If the claim only amounts to 7,500USD then the applicable deductible is 1,500USD and not 10% of the loss, since 10% is below the minimum deductible level. Similarly, in this instance, for losses above 50,000USD the deductible will never be more than 5,000USD. Deductibles can also differ depending on the cause of the claim: the same policy can contain varying deductibles which are applied to loss or damage arising from theft, fire, natural perils, etc.

For example a plastics factory may have a deductible of 10,000 for theft, 50,000 for natural perils and 100,000 for fire.

There are two types of deductibles:
- Straight deductible: A straight deductible is a deductible that applies to each separate loss, and is the type of deductible in most personal lines of insurance. For instance, if, during the course of a year, you are involved in 2 separate auto accidents, then the deductible will be subtracted for each accident.
- Aggregate deductible:
Commercial insurance often has an aggregate deductible, which is the total deductible for a given policy period. For instance, if a business has property insurance with an aggregate deductible of $10,000, then the business will have to cover the 1st $10,000 worth of losses for each policy period - usually a year. So if, during the course of a year, a business has 3 separate losses of $2,000, then $6,000, then $4,000, the business will be have to cover $10,000 of its losses, but will receive $2,000 from its insurance company for the last loss. Any more losses that occur within the same policy period will be fully covered. So if the business has another loss of $3,000, it will receive the full amount from its insurer.
An aggregate deductible makes more sense in commercial insurance, since businesses can have many separate losses during the course of a year, but would be unusual for an individual to experience multiple losses within a year.

A deductible should never be confused with a franchise, the latter representing a threshold which needs to be exceeded in order for the insurer to be liable for the entirety of the claim. In other words, with a franchise of 20,000USD a claim of 19,900 USD is borne entirely by the assured whereas in the event of a claim totaling 20,500 USD the insurer would be liable for the whole amount.</Description>
    <AttributeProperty isSynthetic='true' name='deductibleAppliesToCode' originalName='deductibleAppliesToCode' assignable='true' index='4'>
      <Description>A code identifying to what the deductible applies.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.DeductibleAppliesToCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='deductibleCalculationBase' originalName='deductibleCalculationBase' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='deductiblePercentage' originalName='deductiblePercentage' assignable='true' index='1'>
      <Description>Percentage of the coverage deductible</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='deductibleTypeCode' originalName='deductibleTypeCode' assignable='true' index='3'>
      <Description>A code identifying the type of deductible.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.DeductibleTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='perClaimApplicationIndicator' originalName='perClaimApplicationIndicator' assignable='true' index='0'>
      <Description>Indicates whether the deductible applies per claim or for all the occurred claims.
There are two types of deductibles:
- Straight deductible: A straight deductible is a deductible that applies to each separate loss, and is the type of deductible in most personal lines of insurance. For instance, if, during the course of a year, you are involved in 2 separate auto accidents, then the deductible will be subtracted for each accident. 
- Aggregate deductible: Commercial insurance often has an aggregate deductible, which is the total deductible for a given policy period. For instance, if a business has property insurance with an aggregate deductible of $10,000, then the business will have to cover the 1st $10,000 worth of losses for each policy period - usually a year. So if, during the course of a year, a business has 3 separate losses of $2,000, then $6,000, then $4,000, the business will be have to cover $10,000 of its losses, but will receive $2,000 from its insurance company for the last loss. Any more losses that occur within the same policy period will be fully covered. So if the business has another loss of $3,000, it will receive the full amount from its insurer. An aggregate deductible makes more sense in commercial insurance, since businesses can have many separate losses during the course of a year, but would be unusual for an individual to experience multiple losses within a year.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='deductibleAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='deductiblespecification' originalName='deductible specification' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.DeductibleSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CoverageDeductibleFordeductiblespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementElementSubtypes.CoverageLimit' originalName='CoverageLimit' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementElement' isAbstract='false'>
    <Description>This concept defines the key characteristics of a benefit limit regarding a coverage or the whole contract (Probable maximum loss).

Stop loss = maximum amount whatever the number of claims.</Description>
    <AttributeProperty isSynthetic='true' name='coverageLimitAppliesToCode' originalName='coverageLimitAppliesToCode' assignable='true' index='4'>
      <Description>A code identifying the concept to which the limit applies.

e.g. Per Accident, Per Vehicle</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LimitAppliesToCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='coverageLimitCalculationBase' originalName='coverageLimitCalculationBase' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='coverageLimitPercentage' originalName='coverageLimitPercentage' assignable='true' index='2'>
      <Description>Limit of the benefit expressed in percentage.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='0'>
      <Description>Describes the payment frequency for the coverage benefit.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='perClaimApplicationIndicator' originalName='perClaimApplicationIndicator' assignable='true' index='1'>
      <Description>Indicates whether the benefit limit applies per claim or for all the occurred claims.
Per claim = Occurrence limit
All occurred claims = Aggregate limit.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='annualLimitAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='coverageLimitAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='limitspecification' originalName='limit specification' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.LimitSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CoverageLimitForlimitspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementElementSubtypes.CoverageWaitingPeriodDeductible' originalName='CoverageWaitingPeriodDeductible' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementElement' isAbstract='false'>
    <Description>Waiting period deductible : 
(1) A deductible provision sometimes used in business interruption and other time element policies, in lieu of a currency amount deductible, that establishes that the insurer is not responsible for loss suffered during a specified period of time (such as 72 hours) immediately following a direct damage loss. 
(2) A deductible mechanism in disability income policies and under workers compensation statutes that establishes a period of time which must pass following an accident or illness causing disability before salary continuation benefits are payable.
Synonym: Elimination period.</Description>
    <RelationshipProperty isSynthetic='true' name='waitingperioddeductiblespecification' originalName='waiting period deductible specification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.WaitingPeriodDeductibleSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CoverageWaitingPeriodDeductibleForwaitingperioddeductiblespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='waitingPeriodDuration' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementAnnuityComponent' originalName='AgreementAnnuityComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This concept specifies all the characteristics of an annuity within an agreement.</Description>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='0'>
      <Description>Indicates the annuity payment frequency.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementannuitybankaccount' originalName='agreement annuity bank account' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementAnnuityComponentForagreementannuitybankaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementannuityfeature' originalName='agreement annuity feature' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.AgreementAnnuityFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementAnnuityComponentForagreementannuityfeature' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementInvestmentProfileComponent' originalName='AgreementInvestmentProfileComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This concept defines the characteristics of an Investment, in which money is invested within a life savings contract.</Description>
    <RelationshipProperty isSynthetic='true' name='investmentprofilespecification' originalName='investment profile specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.InvestmentVehicle.InvestmentProfileFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementInvestmentProfileComponentForinvestmentprofilespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementInvestmentVehicleBreakdownComponent' originalName='AgreementInvestmentVehicleBreakdownComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This concept defines at the agreement level the investment flow breakdown over subscribed investment vehicles feature that should be applied for remittances or surrenders.</Description>
    <AttributeProperty isSynthetic='true' name='fundSharePercentage' originalName='fundSharePercentage' assignable='true' index='0'>
      <Description>Fund share in percentage</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fundUnitCount' originalName='fundUnitCount' assignable='true' index='1'>
      <Description>Number of units of a fund</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='fundallocationbreakdowncomponent' originalName='fund allocation breakdown component' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AgreementInvestmentActivity.AgreementFundAllocation</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementInvestmentVehicleBreakdownComponentForfundallocationbreakdowncomponent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='investmentvehiclebreakdown' originalName='investment vehicle breakdown' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementInvestmentVehicleComponent</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementInvestmentVehicleBreakdownComponentForinvestmentvehiclebreakdown' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementInvestmentVehicleComponent' originalName='AgreementInvestmentVehicleComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This concept specifies saving coverages' investment vehicles active on contract. Specific to Savings products.</Description>
    <AttributeProperty isSynthetic='true' name='propositionType' originalName='propositionType' assignable='true' index='0'>
      <Description>Specifies how the choice between the investment vehicles is made.

Values are::
Free choice
Automatic</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='investmentvehiclespecification' originalName='investment vehicle specification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.InvestmentVehicle.InvestmentVehicleFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementInvestmentVehicleComponentForinvestmentvehiclespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementPartialSurrenderComponent' originalName='AgreementPartialSurrenderComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This concept defines the characteristics of programmed partial surrenders. Specific to Savings life insurance.</Description>
    <AttributeProperty isSynthetic='true' name='increaseIndexPercentage' originalName='increaseIndexPercentage' assignable='true' index='2'>
      <Description>This is used to increase the amount of the installment automatically every year, without an amendment.

Percentage of the programmed installment.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='partialSurrenderOptionStatusCode' originalName='partialSurrenderOptionStatusCode' assignable='true' index='0'>
      <Description>Status of partial surrender option.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AgreementOptionStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='1'>
      <Description>Defines the frequency of the partial surrender.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='surrenderChargesRate' originalName='surrenderChargesRate' assignable='true' index='3'>
      <Description>Surrender charges rate</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='amount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='partialsurrenderbankaccount' originalName='partial surrender bank account' assignable='true' index='8' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementPartialSurrenderComponentForpartialsurrenderbankaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='partialsurrenderinvestmentvehiclebreakdown' originalName='partial surrender investment vehicle breakdown' assignable='true' index='7' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.AgreementInvestmentVehicleBreakdownComponent</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementPartialSurrenderComponentForpartialsurrenderinvestmentvehiclebreakdown' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusEffectDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='surrenderAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='surrenderfeaturespecification' originalName='surrender feature specification' assignable='true' index='10' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.SurrenderFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementPartialSurrenderComponentForsurrenderfeaturespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='taxdeductionfeature' originalName='tax deduction feature' assignable='true' index='9' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.TaxDeductionFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementPartialSurrenderComponentFortaxdeductionfeature' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.BenefitPaymentComponent' originalName='BenefitPaymentComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This accounts for the benefit payment option(s) selected as part of the agreement.</Description>
    <RelationshipProperty isSynthetic='true' name='benefitpaymentfeaturespecification' originalName='benefit payment feature specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.BenefitPaymentFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='BenefitPaymentComponentForbenefitpaymentfeaturespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.BillingPaymentComponent' originalName='BillingPaymentComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This accounts for the billing payment option(s) selected as part of the agreement.</Description>
    <AttributeProperty isSynthetic='true' name='billingNatureCode' originalName='billingNatureCode' assignable='true' index='0'>
      <Description>A code that identifies the nature of the billing (policy bill, account bill).</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.BillingNatureCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='billingPaymentMethodCode' originalName='billingPaymentMethodCode' assignable='true' index='2'>
      <Description>A code identifying the means by which the billing payment was/will be made.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='billingPlanCode' originalName='billingPlanCode' assignable='true' index='1'>
      <Description>A code identifying the frequency of the billing.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='billingpaymentfeaturespecification' originalName='billing payment feature specification' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.BillingPaymentFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='BillingPaymentComponentForbillingpaymentfeaturespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.LoanComponent' originalName='LoanComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>An  financial services agreement component describing the provision for lending or borrowing money or the actual loan thereof. 
 
e.g: Loan under an endowment policy.</Description>
    <AttributeProperty isSynthetic='true' name='interestTypeCode' originalName='interestTypeCode' assignable='true' index='2'>
      <Description>Categorization of the loan component based on the variability of the applicable interest rate. 
Is derived from the interest specification in generic money provision. 
Derived from the interest specification related to the loan component.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanInterestTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanInterestPaymentMethodCode' originalName='loanInterestPaymentMethodCode' assignable='true' index='3'>
      <Description>Indicates whether the interest for the loan is paid separately, or, whether it is added on to the principal amount in the loan, to be paid in one series of payments together with the repayment of the principal amount.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanInterestPaymentMethodCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='purposeCode' originalName='purposeCode' assignable='true' index='1'>
      <Description>The purpose of the loan specifying how the money borrowed is used. 
 
e.g: Cash funding or clean credit 
 
e.g: Funding for the purchase of consumer goods or consumer credit 
 
e.g: Temporary funding</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanPurposeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='repaymentTypeCode' originalName='repaymentTypeCode' assignable='true' index='0'>
      <Description>Categorization of installments according to the redemption mode applied. 
 
e.g: Amortisable. 
 
e.g: Fixed installment, this means that for every installment period, the amount of the installment is equal, but the interest and redemption parts of each installment are different. In the beginning of the loan there will be more interest and less redemption than at the end of the loan.

e.g: Fixed redemption, this means that for every installment period, the amount of the installment may be different: the part of the redemption of the loan is constant, while the interest part of each installment decreases. 

e.g: With interest.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.RepaymentTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementloanrelationship' originalName='agreement loan relationship' assignable='true' index='5' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.AgreementLoan.AgreementLoan</TypeName>
      <RelationshipProperty isSynthetic='true' name='LoanComponentForagreementloanrelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='loadfeaturespecification' originalName='load feature specification' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.LoanFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='LoanComponentForloadfeaturespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.MembershipComponent' originalName='MembershipComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This accounts for the membership/subscription option(s) selected as part of the agreement.</Description>
    <RelationshipProperty isSynthetic='true' name='membershipcomponentfeature' originalName='membership component feature' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.MembershipFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='MembershipComponentFormembershipcomponentfeature' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.ProfitSharingComponent' originalName='ProfitSharingComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>An agreement component describing how the policyholder wants to use the profit shares for this insurance policy. The profit sharing bonus (sometimes called dividend) is a share in the profits or surplus of the insurer. It can be used to increase the coverage or it can be returned directly to the policyholder in the form of a rebate on premium payments due.</Description>
    <AttributeProperty isSynthetic='true' name='destinationCode' originalName='destinationCode' assignable='true' index='0'>
      <Description>An indication of  how the profit sharing amounts  will be used. In case the customer chooses for one year Term benefits, these benefits will be attached to the Life policy as a separate death coverage. 
 
e.g: Accumulate at interest 
 
e.g: Add dividend to cash value (UL) 

e.g: Economatic 

e.g: Other 

e.g: Paid in cash
 
e.g: Paid-Up Additions 

e.g: Plan enhancement (improves until lifetime then shortens premium duration). 

e.g: Policy Improvement (improves until lifetime plan). 

e.g: Reduce Loan Values 

e.g: Reduce loan values, balance in cash 

e.g: Reduce loan values, balance to accumulate 

e.g: Reduce loan values, balance to PUA 

e.g: Reduce Premium 

e.g: Reduce premium, balance in cash 

e.g: Reduce premium, balance to accumulate 

e.g: Reduce premium, balance to PUA 

e.g: Specified amount in cash balance to PUA 

e.g: Term Dividend Option (FULL) 

e.g: Unknown</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.ProfitDestinationCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='profitsharingfeaturespecification' originalName='profit sharing feature specification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.ProfitSharingFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProfitSharingComponentForprofitsharingfeaturespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.RemittanceComponent' originalName='RemittanceComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This accounts for the remittance option(s) selected as part of the agreement.</Description>
    <RelationshipProperty isSynthetic='true' name='remittancefeaturespecification' originalName='remittance feature specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.RemittanceFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='RemittanceComponentForremittancefeaturespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementFeatureComponentSubtypes.ServiceComponent' originalName='ServiceComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>An financial services agreement component representing the services that the modeled organization is providing in the context of the agreement.

These can be services such as providing access to financial information, providing legal advice, managing assets, provide for the use of financial transactions of a certain type.</Description>
    <RelationshipProperty isSynthetic='true' name='servicecomponentfeature' originalName='service component feature' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.ServiceFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='ServiceComponentForservicecomponentfeature' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementPremium.Premium' originalName='Premium' superclassName='org.acord.aim.Finance.FinancialProvision' isAbstract='false'>
    <Description>The price for coverage, benefit, and the like described in the agreement or agreement component, and typically associated with a specific period of time.

For example, an insurance policy premium is the price for coverage of a particular risk or set of risks described in the agreement, during a specific period of time.</Description>
    <AttributeProperty isSynthetic='true' name='calculationMethodCode' originalName='calculationMethodCode' assignable='true' index='1'>
      <Description>A code indicating the type of premium calculation.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.PremiumCalculationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='natureCode' originalName='natureCode' assignable='true' index='0'>
      <Description>Indicates the nature of the premium. Designed to distinguish subtypes of premiums.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.PremiumNatureCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='amount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='premiuminstallment' originalName='premium installment' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.PremiumInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='PremiumForpremiuminstallment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='premiumspecification' originalName='premium specification' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.PremiumSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='PremiumForpremiumspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.AgreementContentChangeRequest' originalName='AgreementContentChangeRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' isAbstract='false'>
    <Description>A request to maintain the contractual content of a financial services agreement. Depending on the kind of maintenance applied to the financial services agreement, such a request may or may not generate the issue of a new version of the financial services agreement. 

For example, a modification to the premium or the beneficiary of an insurance policy will trigger the issue of a new version of the policy, while a change in the address of the policyholder will not necessarily do. 
 
e.g: Endorsement Request: A request to add or subtract insurance coverages in an insurance policy. For example, vandalism and malicious mischief can be added to a fire policy through an endorsement. 
 
e.g: Investment Vehicle Allocation Request: A request by which the customer chooses the investment vehicle(s) in which he wishes to invest. Every regular or irregular installment that will be made by the customer will be allocated to the contractually-defined investment vehicle(s). 
 
e.g: Partial Surrender Request: A request to pay out a portion of the accumulated value of the insurance agreement. The coverages of the policy stay in effect, the value of some of the coverages may be decreased. 
 
e.g: Pledge Request: A request to transfer the cash value of a life insurance policy from the policyholder to the policyholder's creditor as security for a loan. 
 
e.g: Renewal Deferral Request: A request to defer the renewal of an insurance policy. Payment of the renewal premium is suspended and the policy is not renewed. The policy can be reactivated by payment of the renewal premium after the deferral period. 
 
e.g: Reversion Request: A request to pay an annuity to another designated beneficiary at the death of the annuitant. Some annuities may be paid to more than one person, with payments (in the same or lesser amount) paid to the survivor(s) after the death of one of them.</Description>
    <AttributeProperty isSynthetic='true' name='agreementChangeTypeCode' originalName='agreementChangeTypeCode' assignable='true' index='0'>
      <Description>A code indicating the type of change applicable to the agreement.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AgreementChangeTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='changerequestresultingpremium' originalName='change request resulting premium' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementPremium.Premium</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementContentChangeRequestForchangerequestresultingpremium' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.AgreementLoanOperationRequest' originalName='AgreementLoanOperationRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' isAbstract='false'>
    <Description>This concept represents the request for an agreement/policy loan operation.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.AgreementRequest' originalName='AgreementRequest' superclassName='org.acord.aim.Activity.Activity' isAbstract='true'>
    <Description>A request for a change on an existing agreement or a request for issuing a new one, or a request for executing a transaction or service according to the terms and conditions of an agreement. A request may be initiated by the modeled organization or any other third party. 

An agreement request is based on the definition provided in a agreement request specification.</Description>
    <AttributeProperty isSynthetic='true' name='communicationMediumCode' originalName='communicationMediumCode' assignable='true' index='4'>
      <Description>Identifies the medium used by the requester  to issue this agreement request.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.CommunicationMediumCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='requestReasonCode' originalName='requestReasonCode' assignable='true' index='0'>
      <Description>The reason why the request was made. 
Derived from the status related information. 
 
e.g: Agreement suspended because of repetitive non payment of premium after warning.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.RequestReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='2'>
      <Description>The current status of the agreement request within the life-cycle model.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AgreementRequestStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusReasonCode' originalName='statusReasonCode' assignable='true' index='3'>
      <Description>The reason explaining why there was a status change.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.StatusReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='validCode' originalName='validCode' assignable='true' index='1'>
      <Description>The indication of whether the request fulfills its validity conditions, which are defined on the specification of the request. 

e.g: Rejected. 
 
e.g: Undefined. 
 
e.g: Valid.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.ValidityCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementrequestcomposition' originalName='agreement request composition' assignable='true' index='5' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementRequest.AgreementRequest</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementRequestForagreementrequestcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementrequestpartyrole' originalName='agreement request party role' assignable='true' index='8' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementRequestForagreementrequestpartyrole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='requestonagreement' originalName='request on agreement' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Agreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementRequestForrequestonagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='specification' originalName='specification' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductRequestSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementRequestForspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.AgreementWaiverRequest' originalName='AgreementWaiverRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' isAbstract='false'>
    <Description>An agreement waiver enables the policy holder to cancel his/her agreement during the cooling off period and get back all the premium paid.
This is mainly used in life insurance, especially in France.</Description>
    <RelationshipProperty isSynthetic='true' name='totalAgreementWaiverAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.CancellationRequest' originalName='CancellationRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.StatusChangeRequest' isAbstract='false'>
    <Description>This concept states a request for a contract cancellation.</Description>
    <AttributeProperty isSynthetic='true' name='cancellationReasonCode' originalName='cancellationReasonCode' assignable='true' index='1'>
      <Description>A code indicating the reason for cancellation of the agreement.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.CancellationReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='outcomeType' originalName='outcomeType' assignable='true' index='0'>
      <Description>Automatic
Manual</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='cancellationDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' originalName='FinancialServicesRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.AgreementRequest' isAbstract='false'>
    <Description>This concept describes an underwriting request that, if accepted by the company, will result in an insurance contract.</Description>
    <AttributeProperty isSynthetic='true' name='premiumCommercialReductionRate' originalName='premiumCommercialReductionRate' assignable='true' index='0'>
      <Description>the premium of the whole contract can be multiplied by this ratio calculated by the back-end. This ratio is linked to the quality of the prospect.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='premiumCommercialReductionReason' originalName='premiumCommercialReductionReason' assignable='true' index='1'>
      <Description>free text to give the motive of the commercial reduction</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.PremiumWaiverRequest' originalName='PremiumWaiverRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' isAbstract='false'>
    <Description>This concept states a request for a waiver.</Description>
    <RelationshipProperty isSynthetic='true' name='interestAccruedDuringThePeriodAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='interestPaidAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netInstallmentPremiumAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='operationEffectDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='shareInterestPaidByInterestAcquiredAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalWaiverAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.ProducerRequest' originalName='ProducerRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.AgreementRequest' isAbstract='false'>
    <Description>A request for a change on an existing producer agreement or a request for issuing a new one, or a request for executing a transaction or service according to the terms and conditions of a producer agreement. A request may be initiated by the producer or by the modeled organization.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.ProposalRequest' originalName='ProposalRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.StatusChangeRequest' isAbstract='false'>
    <Description>This concept gathers information to build a proposal. It may follow a quotation request.

The information (on risk, covers, benefits, clauses....) required to build a proposal is specified using the relationship with concepts inside the ContractElement package additionally to the information formerly specified in the quotation request (if a previous quotation request has been issued)</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.ProviderRequest' originalName='ProviderRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.AgreementRequest' isAbstract='false'>
    <Description>A request for a change on an existing provider agreement or a request for issuing a new one, or a request for executing a transaction or service according to the terms and conditions of a provider agreement. A request may be initiated by the provider or by the modeled organization. 
 
e.g: MIA Insurance Co.'s request to their automobile expert to assess the physical condition of John Doe's damaged vehicle.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.QuotationRequest' originalName='QuotationRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.StatusChangeRequest' isAbstract='false'>
    <Description>This concept describes a quotation request. The information of the quotation request is mainly contained in the related contract elements. 

Using this quotation request and its related elements one will get a quotation (Quotation concept) of the hypothetical future insurance contract.</Description>
    <AttributeProperty isSynthetic='true' name='commissionRate' originalName='commissionRate' assignable='true' index='0'>
      <Description>In some cases this information is fixed by default. For other cases where agents can define their commission amount, this information is then fixed by the agent. CommissionRate is usually bounded by two limits defined by the insurer.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='quotationtoproposal' originalName='quotation to proposal' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementRequest.ProposalRequest</TypeName>
      <RelationshipProperty isSynthetic='true' name='QuotationRequestForquotationtoproposal' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='selectedAgreementPeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.StatusChangeRequest' originalName='StatusChangeRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' isAbstract='false'>
    <Description>A request that results in a change to the life cycle status of a financial services agreement. Each modeled organization may have its own variety of statuses resulting from status change requests.
 
e.g: Cancellation Request: A request that leads to the end of the financial services agreement. Such a request can be initiated by the customer or by the modeled organization. In the latter case, different circumstances may exist, such as the nonrenewable of the next insurance agreement term for underwriting reasons, the termination of a pending insurance agreement due to non-acceptance of the risk, the nonrenewable of a credit card agreement due to the customer's bad reimbursement history.

e.g: Full Surrender Request: A request that leads to the end of the financial services agreement. The accumulated value of the insurance agreement minus surrender charges is paid out to the insured and all the coverages provided under the insurance agreement are ended.

e.g: Lapse Request: A request to put the financial services agreement in a lapse status. In insurance, such a request may be triggered by the non-payment of premiums. Lapse processing may include the execution of non-forfeiture or exit options if there is cash value.

e.g: Maturity Request: A request to put a financial services agreement in a matured status. Typically, in life insurance, a maturity request is triggered when life insurance death proceeds or endowments are paid, either at the death of an insured or at the end of the endowment period.

e.g: Policy Conversion Request: Converts a policy to another policy, ending the first one, creating a new policy and transferring value from the ended to the new policy. Typically done for changing to a different product, like for instance when moving the value of a group pension policy to an individual annuity policy.

e.g: Quote Request: A request for a price estimate for a financial services agreement. In the case of insurance, a quote is a price estimate for an insurance cover, typically requested by a prospective customer to explore insurance alternatives and to obtain a quick rate quotation.

e.g: Reactivation Request: A request to reestablish a financial services agreement's in-force status after suspension.

e.g: Reinstatement Request: A request to place a previously lapsed financial services agreement back in force. In the case of an insurance policy, the insurance policy may have lapsed because of non-payment of premiums, or be a life insurance agreement that continues as extended term or reduced paid-up insurance.

e.g: Renewal Request: A request to renew a preexisting financial services agreement. Typically, in insurance, it represents the request for automatically reestablishing an insurance policy's in-force status, usually achieved through payment of the premium due.

e.g: Suspension Request: A request to place an financial services agreement in a suspend state. This means that no externally requested or automatic life-cycle event for this financial services agreement is further possible. The request may be initiated by the customer (for a limited period of time), by a producer or servicer (e.g. for the processing of a pending death claim), or by the modeled organization (e.g. whenever the withdrawals on a credit card have exceeded the withdrawal limit for a period of time). Typically, in insurance, any substantial increase of hazard in the risk covered may trigger a suspension request.</Description>
    <AttributeProperty isSynthetic='true' name='requestedStatusCode' originalName='requestedStatusCode' assignable='true' index='0'>
      <Description>The status in which the agreement should be after completion of the request. 
 
e.g: Applied for. 
 
e.g: Suspended.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.InsuranceAgreementStatusCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.AgreementRequest.TransferRequest' originalName='TransferRequest' superclassName='org.acord.aim.Agreement.AgreementRequest.FinancialServicesRequest' isAbstract='false'>
    <Description>This concept materializes the request of a client to transfer his contract</Description>
    <AttributeProperty isSynthetic='true' name='agreementNumberTransferred' originalName='agreementNumberTransferred' assignable='true' index='0'>
      <Description>This is the previous contract number before transfer</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='transferReasonCode' originalName='transferReasonCode' assignable='true' index='1'>
      <Description>A code indicating the reason for the transfer of the agreement.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.ReasonForTransferCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='openingDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.DriverPartyRole.Driver' originalName='Driver' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A driver is a person who operates a motorized vehicle (e.g. car, truck, boat).

This concept describes a set of information needed to define the profile of a driver as related to an agreement (e.g. insured driver on a personal automobile insurance policy).</Description>
    <AttributeProperty isSynthetic='true' name='currentVehicleInsuranceReductionRate' originalName='currentVehicleInsuranceReductionRate' assignable='true' index='0'>
      <Description>The reduction rate (if any) applied to the driver's current vehicle insurance.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='insuredDuration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.DriverPartyRole.ExcludedDriver' originalName='ExcludedDriver' superclassName='org.acord.aim.Agreement.DriverPartyRole.Driver' isAbstract='false'>
    <Description>A person specified as excluded as a driver in an automobile insurance policy or a financial services agreement component. Coverage is not provided in case the excluded driver is operating the insured vehicle at the time of the loss event.

e.g: John Doe Junior excluded from driving the car of John Doe Senior in John Doe Senior's automobile policy.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.DriverPartyRole.NamedDriver' originalName='NamedDriver' superclassName='org.acord.aim.Agreement.DriverPartyRole.Driver' isAbstract='false'>
    <Description>A person specified as a driver in an automobile insurance policy. 
 
e.g: Marc Sennat, as the main driver in a car insurance policy.</Description>
    <AttributeProperty isSynthetic='true' name='declaredAccidentCount' originalName='declaredAccidentCount' assignable='true' index='1'>
      <Description>The number of accidents which a person has declared to the insurer.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='declaredClaimCount' originalName='declaredClaimCount' assignable='true' index='0'>
      <Description>The number of (auto) claims declared by the person named as driver.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='declaredDrivingViolationCount' originalName='declaredDrivingViolationCount' assignable='true' index='2'>
      <Description>The number of driving convictions which a person has declared to the insurer, for example, reckless driving, speeding, improper lane change.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.AccountAgreement' originalName='AccountAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='false'>
    <Description>An agreement between a financial services provider and  an account holder related to the management of a financial account.</Description>
    <AttributeProperty isSynthetic='true' name='allowCollateralIndicator' originalName='allowCollateralIndicator' assignable='true' index='2'>
      <Description>In a deposit account agreement or investment portfolio agreement, indicates whether the account holder can use the account as agreement collateral. In a loan account agreement, indicates whether the creditor can use the account as an agreement collateral. This information can be derived from allowed requests and their attached rules. e.g: A company sells a portion of loans, which were previously purchased in the marketplace, to investors. Since the loans cannot be physically separated, the portion sold cannot be delivered to the investors. As a result, the investors cannot sell or pledge the loans. The company also retains physical custody of the loans; however, to protect the interests of each of the parties, the company is prohibited under the agreement from selling or pledging the loans that were the subject of the partial sale.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='allowMultiCurrencyBalancesIndicator' originalName='allowMultiCurrencyBalancesIndicator' assignable='true' index='1'>
      <Description>Indicates whether the account can hold balances in multiple currencies.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='allowMultiCurrencyTransactionsIndicator' originalName='allowMultiCurrencyTransactionsIndicator' assignable='true' index='0'>
      <Description>Indicates whether the account holder can make transactions in multiple currencies on this account.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='3'>
      <Description>The current status of the account agreement within the life-cycle model.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AccountAgreementStatusCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.CommutationAgreement' originalName='CommutationAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='false'>
    <Description>This specific agreement holds the information needed to define a commutation agreement.
An agreement to cancel a reinsurance contract.</Description>
    <RelationshipProperty isSynthetic='true' name='commutationagreementreinsurer' originalName='commutation agreement reinsurer' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Reinsurer</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommutationAgreementForcommutationagreementreinsurer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='commutationClosingDate' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='commutingreinsuranceagreement' originalName='commuting reinsurance agreement' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.ReinsuranceAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommutationAgreementForcommutingreinsuranceagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.CreditCardAgreement' originalName='CreditCardAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.AccountAgreement' isAbstract='false'>
    <Description>A specific type of account agreement which enables a credit card holder to obtain products and services before payment is made. It allows a party to draw on a revolving line of credit, subject to a maximum credit limit.</Description>
    <AttributeProperty isSynthetic='true' name='endorsementCode' originalName='endorsementCode' assignable='true' index='1'>
      <Description>Code indicating the type of card endorsement according to whether the card has the stamp or endorsement of a third party such as a non-profit organization, for promotional purposes. 
 
e.g: Non-endorsed 
 
e.g: Private</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.EndorsementCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='minimumMonthlyRepaymentPercentage' originalName='minimumMonthlyRepaymentPercentage' assignable='true' index='0'>
      <Description>The minimum proportion of the outstanding balance which must be paid by the owner monthly.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.CurrentAccountAgreement' originalName='CurrentAccountAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.DepositAccountAgreement' isAbstract='false'>
    <Description>A deposit account agreement in which both parties agree to settle on one account all further credits and debits. At the end, only the balance is payable, no individual debit or credit being payable separately. 

On such an account, any part of the balance may be withdrawn at any time.</Description>
    <RelationshipProperty isSynthetic='true' name='authorisedOverdraftAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.CustomerAccountAgreement' originalName='CustomerAccountAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.DepositAccountAgreement' isAbstract='false'>
    <Description>An account held by the financial services organization as a buffer for incoming and outgoing payments for the cost of services and payment of benefits for its customers. A customer may be allowed to make regular payments of a fixed amount rather than being required to pay varying amounts at irregular intervals. The financial services company will then use a customer account as a way of balancing the regular payments with the amounts that will become due at different times.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.DepositAccountAgreement' originalName='DepositAccountAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.AccountAgreement' isAbstract='false'>
    <Description>An account agreement on which interest is payable. 
 
e.g: A current account: a deposit account from which any part of the balance may be withdrawn at any time. 
 
e.g: A notice account: a deposit account whereby notice must be given of withdrawal, otherwise some penalty is incurred. 
 
e.g: A term deposit account: a deposit of funds for a fixed period of time.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.DerivativeAgreement' originalName='DerivativeAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='false'>
    <Description>An agreement specifying the obligations that the issuer of a derivative commits to. 
 
e.g: Forwards are contracts to purchase or sell a specific quantity of a financial instrument, a commodity, or a foreign currency at a specified price determined at the outset, with delivery or settlement at a specified future date. Settlement is at maturity by actual delivery of the item specified in the contract, or by a net cash settlement. 
 
e.g: Interest Rate Swaps and Forward Rate Agreements are contracts to exchange cash flows as of a specified date or a series of specified dates based on a notional amount and fixed and floating rates.</Description>
    <RelationshipProperty isSynthetic='true' name='agreementderivative' originalName='agreement derivative' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.FinancialAsset.Derivative</TypeName>
      <RelationshipProperty isSynthetic='true' name='DerivativeAgreementForagreementderivative' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='agreementfinancialasset' originalName='agreement financial asset' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.FinancialAsset.FinancialAsset</TypeName>
      <RelationshipProperty isSynthetic='true' name='DerivativeAgreementForagreementfinancialasset' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.FrontingAgreement' originalName='FrontingAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='false'>
    <Description>Fronting refers to the use of an insurer to issue paper, i.e., an insurance policy, on behalf of a self-insured organization or captive insurer without the intention of bearing any of the risk. 

The risk of loss is transferred back to the self-insured or captive insurer with an indemnity or reinsurance agreement. However, the fronting company (insurer) assumes a credit risk since it would be required to honor the obligations imposed by the policy if the self-insurer or captive failed to indemnify it. Fronting companies charge a fee for this service, generally between 5 and 10 percent of the premium being written. Fronting arrangements allow captives and self-insurers to comply with financial responsibility laws imposed by many states that require evidence of coverage written by an admitted insurer, such as for auto and workers compensation insurance. Fronting arrangements must also be used in business contracts with other organizations, such as leases and construction contracts, where evidence of coverage through an admitted insurer is also required.

Fronting is a device used for circumventing regulatory requirements, whereby an insurer who is not licensed in a particular country or state employs the services of a licensed local primary insurer to write a piece of business (which is otherwise produced or controlled by him) with the specific understanding that the entire risk would be transferred to him by way of reinsurance.</Description>
    <RelationshipProperty isSynthetic='true' name='frontingfrontedrole' originalName='fronting fronted role' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Fronted</TypeName>
      <RelationshipProperty isSynthetic='true' name='FrontingAgreementForfrontingfrontedrole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='frontingfronterrole' originalName='fronting fronter role' assignable='true' index='2' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Fronter</TypeName>
      <RelationshipProperty isSynthetic='true' name='FrontingAgreementForfrontingfronterrole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='frontingreinsuranceagreement' originalName='fronting reinsurance agreement' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.ReinsuranceAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='FrontingAgreementForfrontingreinsuranceagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.FuturesAgreement' originalName='FuturesAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.DerivativeAgreement' isAbstract='false'>
    <Description>A derivative agreement that defines the terms and conditions applicable to a future.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.GroupAgreement' originalName='GroupAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.InsuranceAgreement' isAbstract='false'>
    <Description>An insurance policy between the modeled organization and an organization on behalf of the members of a group related to the organization (such as the employees of a company). 
 
e.g: A group policy providing a term life coverage to all permanent employees of Acme Insurance.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.IndividualAgreement' originalName='IndividualAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.InsuranceAgreement' isAbstract='false'>
    <Description>An insurance policy between the Insurer and a party. (The Individual agreement models both Life and Health Insurance individual policies and General Insurance (Property and Casualty Insurance) personal policies.) 
 
e.g: Annuity. 
 
e.g: Automobile Insurance. 
 
e.g: Comprehensive Personal Liability Insurance. 
 
e.g: Disability Income Insurance. 
 
e.g: Family Income Policy. 
 
e.g: Homeowners Insurance Policy. 
 
e.g: Individual Life Insurance. 
 
e.g: Investment Contract. 
 
e.g: Protection Contract.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.InsuranceAgreement' originalName='InsuranceAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='false'>
    <Description>An agreement (individual agreement, commercial agreement or group agreement) between an insurer and a policyholder based on a product specification. 

The agreement specifies the obligation of the insurer to pay benefits and of the premium payer to pay premiums.</Description>
    <AttributeProperty isSynthetic='true' name='broadLineOfBusinessCode' originalName='broadLineOfBusinessCode' assignable='true' index='2'>
      <Description>A code identifying the broad line of business classification.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.BroadLineOfBusinessCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lineOfBusinessCode' originalName='lineOfBusinessCode' assignable='true' index='3'>
      <Description>A code identifying the line of business classification.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LineOfBusinessCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='renewalIndicator' originalName='renewalIndicator' assignable='true' index='0'>
      <Description>Indicates whether or not the insurance policy is a renewal.  If not, it indicates that the insurance policy is in its first renewal period.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='1'>
      <Description>The current status of the insurance policy within the life-cycle model.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.InsuranceAgreementStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='productCode' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.InvestmentPortfolioAgreement' originalName='InvestmentPortfolioAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.AccountAgreement' isAbstract='false'>
    <Description>An account agreement  related to the management of financial positions of the account holder in financial assets.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.LoanAgreement' originalName='LoanAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.AccountAgreement' isAbstract='false'>
    <Description>An agreement in which the financial institution provides funds, often with corresponding collateral associated with the loan, for the benefit of a customer that wants to borrow a sum of money.

e.g. Premium Finance - often associated with large commercial business</Description>
    <AttributeProperty isSynthetic='true' name='creditMechanismCode' originalName='creditMechanismCode' assignable='true' index='0'>
      <Description>The type of credit according to its mechanism, in relation with the nature of the requirements it meets.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.CreditMechanismCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='loanAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.OptionsAgreement' originalName='OptionsAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.DerivativeAgreement' isAbstract='false'>
    <Description>A derivative agreement that defines the terms and conditions applicable to an option.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.ReinsuranceAgreement' originalName='ReinsuranceAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='true'>
    <Description>This concept represents the agreement between a cedent and a reinsurer.

The two basic methods of reinsurance are Facultative and Treaty. Within the scope of each of these two methods, there are two broad types - Proportional (or contributing) reinsurance and Non-Proportional (or non-contributing) reinsurance.
Facultative reinsurance is an optional method, under which the direct insurer (ceding company or cedent) offers each risk individually to the reinsurer for his consideration. The reinsurer consequently receives full details of each risk offered, as he would if he were to write it on a direct basis, and he has the option to reject the offer or to agree to acceptance on such terms and conditions as he may prescribe. The offer and acceptance are thus optional on both sides, and there is no valid contract until and unless the offer is accepted. 
Treaty reinsurance is an obligatory method based on an agreement concluded for a specified period of time (usually 12-month period, renewable annually) covering a defined concept or concepts of business. Details of individual risks are not provided (barring exceptional cases providing for submission of bordereaux). The cedent is obliged to cede all risks falling within the scope of the agreement, and the reinsurer is obliged to accept all such cessions without the option to decline or to ask for improved terms. Offer and acceptance are thus automatic, and the offer becomes a contract as soon as it is made (rather than as soon as it is accepted - as under the facultative method).

Proportional (synonyms: share reinsurance or pro rata reinsurance) and Non-proportional reinsurance:
Under proportional reinsurance, the cedent and the reinsurer share the original risk on pro rata basis, and they also share the premiums and claims in the same proportion. This concept could be applied to an individual risk (facultative) or to a number of risks covered by a single contract (treaty). There is thus a complete community of interest between the parties to the contract.

Basic methods and types of reinsurance: 
 Facultative:
 - Proportional = Proportional facultative
 - Non-Proportional = Risk Excess, Layered Cover, Facultative Stop Loss
 Treaty:
 - Proportional = Quota Share, Surplus, Combined Quota-cum-Surplus
 - Non-Proportional = Per Risk Excess of Loss, Working Excess of Loss, Catastrophe Excess of Loss, Aggregate Excess of Loss (Stop Loss)
 Semi-automatic arrangements:
 - Proportional = Automatic Facultative Cover, Facultative Obligatory Cover, Line Slip
 - Non-Proportional = Coded Excess of Loss, Excess of Loss Line Slip

Inception date = Commencement date of the contract.
Expiration date = Date of cessation of a reinsurance cover, when the time period for which it was written has ended. A treaty written on a "continuous until canceled" basis does not expire automatically but will contain a provision for termination.</Description>
    <AttributeProperty isSynthetic='true' name='capacityDescription' originalName='capacityDescription' assignable='true' index='0'>
      <Description>A description of the capacity associated with the reinsurance agreement. The capacity is reflected as one of the following:

(1) largest amount of Reinsurance available from a company or from the general market; (2) large amounts of reinsurance on one risk; or (3) maximum premium volume that can be written by a reinsurer.

SOURCE: http://www.answers.com/topic/reinsurance-capacity</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='quotaSharePerClaimPercentage' originalName='quotaSharePerClaimPercentage' assignable='true' index='2'>
      <Description>The fixed percentage per claim that will be paid by the reinsurer based on this reinsurance agreement. 
Is derived from the information in the deductibles that are linked to this reinsurance agreement.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='uniqueReinsuranceAgreementReference' originalName='uniqueReinsuranceAgreementReference' assignable='true' index='1'>
      <Description>Unique reinsurance agreement reference (UCR) is the market reference of a reinsurance agreement.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='capacityTotalAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='depositPremiumAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='excessOfLossForPortfolioAmount' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='excessOfLossPerClaimAmount' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='minimumPremiumAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='placingdocument' originalName='placing document' assignable='true' index='11' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.AgreementDocumentSubtypes.PlacementDocument</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceAgreementForplacingdocument' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reinsuranceagreementcedent' originalName='reinsurance agreement cedent' assignable='true' index='9' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Cedent</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceAgreementForreinsuranceagreementcedent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reinsuranceagreementreinsurer' originalName='reinsurance agreement reinsurer' assignable='true' index='10' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Reinsurer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceAgreementForreinsuranceagreementreinsurer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='retentionAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.SuretyBondAgreement' originalName='SuretyBondAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreement' isAbstract='false'>
    <Description>A surety bond is a promise to pay one party (the obligee) a certain amount if a second party (the principal) fails to meet some obligation, such as fulfilling the terms of a contract. The surety bond protects the obligee against losses resulting from the principal's failure to meet the obligation.

SOURCE: http://en.wikipedia.org/wiki/Surety_bond

Often, a surety bond agreement involves three parties:
(1) Obligee (2) Principal (3) Surety
Common practice involves the principal and surety signing the bond (contract/agreement). The contract language/form is prescribed by obligee. The agent/producer signs on behalf of surety under a power of attorney.

Use Case: The city of Smallville needs a road to be constructed. It documents the requirements and then gives contractors time to bid the job. Whichever contractor is awarded the job (low bid) must be "bonded" (e.g. The contractor must have a bond backed by a surety. The bond language is prescribed by Smallville (obligee). The bond describes the work to be performed by the contractor (principal) and states that the surety (insurance company) will get the work performed or provide finances to conclude the work in the event the contractor is unable to complete the project/fulfill its obligation).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AccountHolder' originalName='AccountHolder' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party who owns an account agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AccountProvider' originalName='AccountProvider' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party who, in the context of an account agreement, provides an account and the related account facilities to the account holder. 
 
e.g: Bank KBC providing deposit account 056-9985567-91.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AdditionalInterest' originalName='AdditionalInterest' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party that is not automatically provided with coverage or indemnification, nor included as an insured under the policy of another main insured party, but for whom the main insured's policy may provide a certain degree of protection. 
 
e.g: Acme Bank as the additional interest "mortgagee" on the homeowners insurance policy on which William Shakespeare is the insured.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>The description of an additional interest.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='natureOfInterestTypeCode' originalName='natureOfInterestTypeCode' assignable='true' index='3'>
      <Description>A code classifying a party's role as an additional interest on an agreement.

NOTE: For property and casualty insurance, the classification of the interest is typically as a third party to the given agreement. For example, an insurance policy covering a dwelling critically involves two parties: (1) the policyholder/insured (2) the insurer. The party in the role of insured on the insurance agreement may also be a participant in a loan agreement, where it plays the role of borrower/mortgagor with another party playing the role of lender/mortgagee. The party acting as the lender in the loan agreement may require it be listed as "mortgagee" on the insurance agreement covering the dwelling. In this scenario, the party acting as the lender in the loan agreement has an additional interest in the insurance agreement and is accounted for as some type of additional interest or third party on the insurance agreement. Such additional interests may be classified for clarity on the insurance agreement. The lender plays the primary/first party role of "mortgagee" on the loan agreement. On the insurance agreement, the lender is playing a third party/additional interest role that can be classified as "mortgagee".</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.NatureOfInterestCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='rank' originalName='rank' assignable='true' index='1'>
      <Description>The ranking of 'this' additional interest when multiple additional interests are associated with the same item.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reason' originalName='reason' assignable='true' index='2'>
      <Description>The reason the additional interest is associated with the agreement.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementApprover' originalName='AgreementApprover' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A role player that formally approves the agreement so that it can enter in force. Prior to approval, the agreement is not binding for the modeled organization. 
 
e.g: The board of directors formally states that the agreement matches the goals of the organization and enters in force on January, 1st 2008.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementAuditor' originalName='AgreementAuditor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept states one's role as an auditor, acting in the context of a service provider agreement.

An auditor is a party who performs either operational or financial reviews (audits) of various types of operational or financial information.</Description>
    <AttributeProperty isSynthetic='true' name='internalIndicator' originalName='internalIndicator' assignable='true' index='0'>
      <Description>Indicates whether the auditor is internal.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementHolder' originalName='AgreementHolder' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>The party (e.g. person or organization) with rightful possession of an agreement (e.g. insurance contract), usually the "contract holder".
SOURCE: Barron's

A party who holds/owns an agreement (e.g. insurance policy). 
 
e.g: John Doe, as policyholder of an automobile comprehensive cover policy.</Description>
    <AttributeProperty isSynthetic='true' name='agreementHolderRejectionReasonCode' originalName='agreementHolderRejectionReasonCode' assignable='true' index='0'>
      <Description>The reason given by the policyholder for his rejection of the conditions stated in the financial services agreement. 
 
e.g: Decided for a different agreement 
 
e.g: Decided for a different insurer</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.AgreementHolderRejectionReasonCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementManager' originalName='AgreementManager' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept states a contract Manager who is managing the contract.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementProducer' originalName='AgreementProducer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept states the active role of the producer, who is responsible for getting the business.

e.g. Agent, Agency, Broker, Brokerage, etc.

e.g. The producer who negotiates a contract of reinsurance between the reassured and the reinsurer - developed into the Producing Broker (the broker who handles the business on behalf of the reassured) and the Placing Broker (the broker, who may be the same as the placing broker or a correspondent broker, who negotiates and places the business on rates / terms agreed with the reinsurer).</Description>
    <AttributeProperty isSynthetic='true' name='interestPercentage' originalName='interestPercentage' assignable='true' index='0'>
      <Description>The percent of interest the agreement producer has with regards to a related agreement. Collectively, the interests of one or more agreement producers should total 100%.

e.g. If one agreement has only one agreement producer, that producer has 100% interest.

e.g. If one agreement has two agreement producers, each would have its respective interest in the agreement (50% and 50%; 60% and 40%; etc.).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementRequester' originalName='AgreementRequester' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party who submits an agreement request to create or modify an existing agreement.
 
e.g: Gregory Michael , as requester of a partial surrender of his life policy.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementServicer' originalName='AgreementServicer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A servicing role played by a party in the context of a financial services agreement. 
 
e.g: Jim Jones, as servicing agent in the term life insurance policy of Grace Cruise. Jim is the main point of contact for all endorsements on Grace's policy</Description>
    <AttributeProperty isSynthetic='true' name='representativeTypeCode' originalName='representativeTypeCode' assignable='true' index='0'>
      <Description>A code identifying the type of service representative, independent of responsibilities.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.RepresentativeTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementUnderwriter' originalName='AgreementUnderwriter' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party that assess the eligibility and/or acceptability of a customer to obtain and/or continue with an agreement and any related services  (equity capital, insurance, mortgage, or credit).

SOURCE: http://en.wikipedia.org/wiki/Underwriting

The skilled person who determines whether an insurance or reinsurance organization should participate in a risk and under what conditions.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Applicant' originalName='Applicant' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party applying for financial services. The party has not yet been accepted by the financial services provider; no financial services agreement has been issued yet. 
 
e.g: Eds Construction Company that wants to be insured in a new construction liability insurance. 
 
e.g: John Doe who wants to be insured in a new Life policy.</Description>
    <AttributeProperty isSynthetic='true' name='agreementTerminatedByInsurerIndicator' originalName='agreementTerminatedByInsurerIndicator' assignable='true' index='1'>
      <Description>An indicator the applicant had an agreement that was terminated by an insurer.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='agreementTerminationReason' originalName='agreementTerminationReason' assignable='true' index='2'>
      <Description>The reason the agreement was terminated by the insurer.

e.g. claim activity, driving record, false declaration, non payment of premium</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='declaredClaimCount' originalName='declaredClaimCount' assignable='true' index='0'>
      <Description>The number of claims declared by an applicant, not including claims filed to the modeled organization.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='timeSinceAgreementTermination' originalName='timeSinceAgreementTermination' assignable='true' index='3'>
      <Description>The amount of time that has passed since the party's prior agreement was terminated.

e.g. 
Less than 3 months
From 6 to 12 months
From 12 to 24 months
From 24 to 36 months
More than 36 months'</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='declaredClaimAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lossTimePeriodDuration' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='noClaimDiscountDuration' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Assignee' originalName='Assignee' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party to whom the rights to a benefit are conveyed. For example, the cash surrender value or a portion of the death benefit of a life insurance policy is often assigned by the policyholder to a lending institution (the assignee) as collateral for a loan. 
 
e.g: Smiths and Sons Company, as Assignee of a term life insurance policy</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Beneficiary' originalName='Beneficiary' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party who is designated by the owner of an insurance policy to receive the proceeds from one or more of the benefits defined within the terms of the policy. 
 
e.g: Mary Smith, as beneficiary of an endowment policy.</Description>
    <AttributeProperty isSynthetic='true' name='acceptedIndicator' originalName='acceptedIndicator' assignable='true' index='3'>
      <Description>Indicates whether this beneficiary has explicitly accepted the beneficial rights of the financial services agreement in the context of which this role is being played.  
Such acceptance may have the consequence that the policyholder can no longer solely decide about changes to the insurance policy.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='benefitDistributionCalculationCode' originalName='benefitDistributionCalculationCode' assignable='true' index='5'>
      <Description>Indicates the way the share of the benefit for this beneficiary is calculated.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.BenefitDistributionCalculationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='designationCode' originalName='designationCode' assignable='true' index='0'>
      <Description>Designation of beneficiary. Indicates how the beneficiary will be identified. 
 
e.g: By name 
 
e.g: Children of the insured 
 
e.g: Domestic partner 
 
e.g: Insured 
 
e.g: Spouse</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.BeneficiaryDesignationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='irrevocableIndicator' originalName='irrevocableIndicator' assignable='true' index='1'>
      <Description>Indicates whether or not the beneficiary is irrevocable. TRUE if irrevocable, FALSE if revocable.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='legalWording' originalName='legalWording' assignable='true' index='2'>
      <Description>The exact, legal, beneficiary description.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='partExemptFromTaxesPercentage' originalName='partExemptFromTaxesPercentage' assignable='true' index='4'>
      <Description>Indicates the percentage of the benefit amount that can be excluded from current income for the purpose of calculating income taxation.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Biller' originalName='Biller' superclassName='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementServicer' isAbstract='false'>
    <Description>A servicing role played by a party in the context of a financial services agreement, whereby the party is responsible for the creation and sending of a bill or account statement to a customer, as a request for payment for a product or service.</Description>
    <AttributeProperty isSynthetic='true' name='daysToEpostCount' originalName='daysToEpostCount' assignable='true' index='0'>
      <Description>Days to post an electronic payment. The maximum days between receipt of an electronic payment by the biller and posting to the customer's account.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='prenoteRequiredIndicator' originalName='prenoteRequiredIndicator' assignable='true' index='1'>
      <Description>Pre-Note Required. If set to True, the biller requires pre-noting by the service provider.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Borrower' originalName='Borrower' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party that obtains or receives (something, such as money) on loan for temporary use, intending to give it, or something equivalent or identical, back to the lender.

SOURCE: http://dictionary.reference.com/browse/borrower</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Cedent' originalName='Cedent' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>Cedent is the term used to denote the reassured or primary insured under a proportional reinsurance contract. From a practical view, it is an insurer in the role of transferring some of the risks it holds in policies it insures to another insurance company.

Same as Ceding company or Primary insurer.

This concept is also used to define a retrocedent (the reinsurer of an original risk in relation to a contract under which he retrocedes his acceptance) within a retrocession.

A retrocession is the transaction whereby a reinsurer transfers a portion of his reinsurance acceptance to another reinsurer (known as the Retrocessionaire).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.ContributionPayer' originalName='ContributionPayer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party who pays the savings installments for the savings components in a financial services agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Creditor' originalName='Creditor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party to whom a debt is owned. 
 
e.g: A company that presents its bills to an account holder through a bill presentment service. 
 
e.g: The party with whom an account holder agrees to make further payments as specified in a direct debit mandate.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Fronted' originalName='Fronted' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept represents the fronted role within a fronting agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Fronter' originalName='Fronter' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept represents the fronter role within a fronting agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Guarantor' originalName='Guarantor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A role player who undertakes, in full or in part, the financial responsibility for a financial services agreement between two other role players, in the event that the original contracting party is unable to fulfill its obligations.
 
e.g: A party who guarantees a specific capital expansion loan agreement. 
 
e.g: A person who guarantees the premium payment of a life insurance policy.</Description>
    <RelationshipProperty isSynthetic='true' name='guaranteeLimitAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Insured' originalName='Insured' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>Any person or organization whose interest in the subject matter of the insurance is protected under the insurance contract. The insured does not necessarily need to be the contractholder or the beneficiary. (Alternate definition: A person or organization covered as defined in the insurance contract. In life insurance policies there is one designated insured, the person so named; or a contract can be issued to numerous insured on a group basis. The insured persons in property and casualty policies may also include residents of the insured's household, such as a spouse, relatives of either, and other individuals under their care, custody, and control if under age 21. See also "Named Insured".

SOURCE: Barron's
 
e.g: Barbara Wire, as insured in a dangerous sports disability coverage.</Description>
    <AttributeProperty isSynthetic='true' name='insurableInterestCode' originalName='insurableInterestCode' assignable='true' index='2'>
      <Description>A code indicating the insurable interest of the insured party.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.InsurableInterestCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='legalWording' originalName='legalWording' assignable='true' index='0'>
      <Description>The exact, legal, insured name/description.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='1'>
      <Description>A code indicating the type of insured.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.InsuredTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.InsuredBorrower' originalName='InsuredBorrower' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept gives information on a borrower's profile in the context of loan insurance.</Description>
    <AttributeProperty isSynthetic='true' name='borrowerQuality' originalName='borrowerQuality' assignable='true' index='0'>
      <Description>Indicates the borrower quality (related PersonProfile)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanSharePercentage' originalName='loanSharePercentage' assignable='true' index='1'>
      <Description>Indicates the share of the loan for the related insured person (PersonProfile).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Insurer' originalName='Insurer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party (e.g. person or organization) that undertakes to provide insurance services in exchange for the payment of premiums.

SOURCE: Barron's

A party who offers protection to the insured in a financial services agreement.

NOTE: When an insurer shares the risk sustained under an insurance policy with another insurer, each is also known as a co-insurer.
 
e.g: Acme Insurance Company as the insurer of an endowment policy.</Description>
    <AttributeProperty isSynthetic='true' name='leaderIndicator' originalName='leaderIndicator' assignable='true' index='3'>
      <Description>Indicates the insurer is the leader (aperitor).

Note: Co-insurance refers to the insurance, usually of large risks, by two or more direct insurers as a means of spreading the risk.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='managementByAperitorIndicator' originalName='managementByAperitorIndicator' assignable='true' index='4'>
      <Description>Indicates if the management of the coinsurance is made by the aperitor.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='rejectionReasonCode' originalName='rejectionReasonCode' assignable='true' index='0'>
      <Description>The reason given by the insurer for his rejection of the conditions stated in the financial services agreement. 
 
e.g: High risk 
 
e.g: History of fraud</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.InsurerRejectionReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='signedLinePercentage' originalName='signedLinePercentage' assignable='true' index='2'>
      <Description>The amount for which an insurer becomes liable in the event of a slip being over- subscribed (see written line).
Syn: Closed line.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='writtenLinePercentage' originalName='writtenLinePercentage' assignable='true' index='1'>
      <Description>Written line: the maximum amount of insurance that an insurer has agreed to accept when initialling a slip; it may be more than the amount actually insured by an individual insurer if the broker obtains more than 100% cover for the risk, in which case each insurer's liability will be reduced proportionately (written down) to a closed line or signed line.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Lender' originalName='Lender' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party that provides (money) temporarily, often at interest.

SOURCE: http://dictionary.reference.com/browse/lender</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.MedicalExaminer' originalName='MedicalExaminer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>The physician who examines an applicant on behalf of the insurer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Obligee' originalName='Obligee' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>The "Obligee" is the party for whom the guarantee in a surety bond agreement is being provided.

1.  a party in whose favor an obligation, contract, or bond is created; creditor
2.  a party who receives a bond

SOURCE: http://dictionary.reference.com/browse/Obligee

The party (e.g. person or organization) for whom or which a surety guarantees the performance of the principal's obligations.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.PayingServicer' originalName='PayingServicer' superclassName='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementServicer' isAbstract='false'>
    <Description>A servicing role whereby the party is responsible for the payment of revenue, such as dividends, capital gain, interest, and so on. 
 
e.g: Jim Jones, as servicing agent in the investment contract held by Grace Cruise. Jim is in charge of paying the interests resulting from the investment to Grace.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Pilot' originalName='Pilot' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>This concept describes a set of information needed to define the profile of a pilot.</Description>
    <AttributeProperty isSynthetic='true' name='claimCount' originalName='claimCount' assignable='true' index='0'>
      <Description>Insured pilot's total claims count.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='flightMeasurementDuration' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='flightTimeDuration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='helicopterOtherFlightDuration' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='helicopterPistonFlightDuration' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='helicopterTurbineFlightDuration' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='insuredDuration' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='planeJetFlightDuration' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='planeOtherFlightDuration' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='planePistonFlightDuration' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='planeTurbopropFlightDuration' assignable='true' index='14' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalFlightDuration' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalHelicopterFlightDuration' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalHotAirBalloonFlightDuration' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalPlaneDuration' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.PilotLog' originalName='PilotLog' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents a set of information needed to depict a pilot log.</Description>
    <AttributeProperty isSynthetic='true' name='pilotLogTypeCode' originalName='pilotLogTypeCode' assignable='true' index='0'>
      <Description>A code indicating a type of pilot log.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.PilotLogTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='flightDuration' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='pilotpilotlog' originalName='pilot pilotlog' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Pilot</TypeName>
      <RelationshipProperty isSynthetic='true' name='PilotLogForpilotpilotlog' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalFlightDuration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.PremiumCollector' originalName='PremiumCollector' superclassName='org.acord.aim.Agreement.PartyRoleInAgreement.AgreementServicer' isAbstract='false'>
    <Description>A servicing role whereby the party is responsible for collecting the premiums. 
 
e.g: Jim Jones, as servicing agent in the term life insurance policy of Grace Cruise. Jim is in charge of collecting the premiums due on Grace's policy.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.PremiumPayer' originalName='PremiumPayer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A party who pays the premium due under an agreement. 
 
e.g: John Smith, as premium payer for a term life insurance covering his son.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Principal' originalName='Principal' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>The party primarily responsible for performing or fulfilling work in a surety bond agreement.

1. a party primarily liable for an obligation, in contrast with an endorser, or the like.

SOURCE: http://dictionary.reference.com/browse/Principal</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Reinsurer' originalName='Reinsurer' superclassName='org.acord.aim.Agreement.PartyRoleInAgreement.Insurer' isAbstract='false'>
    <Description>An insurance company that assumes all or part of an insurance or reinsurance contract written by a primary insurance company (cedent).
SOURCE: Barron's

A reinsurer is a company, pool or syndicate of underwriting individuals who assume risks from primary insurers or otherwise provide reinsurance protection. A company accepting reinsurance could be the Reinsurance department of a primary insurer or a professional reinsurer, who does not deal with the public.

This concept is also used to define a retrocessionaire (the assuming reinsurer in a contract of retrocession accepted from a retrocedent).

A retrocession is the transaction whereby a reinsurer transfers a portion of his reinsurance acceptance to another reinsurer (known as the Retrocessionaire).</Description>
    <AttributeProperty isSynthetic='true' name='placementDescription' originalName='placementDescription' assignable='true' index='1'>
      <Description>Description of the Reinsurer Placement</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsurerType' originalName='reinsurerType' assignable='true' index='2'>
      <Description>Type of the reinsurer.
Values are [ "CoReinsurer", "Reinsurer", Aperitor" ].</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='sharePercentage' originalName='sharePercentage' assignable='true' index='0'>
      <Description>Share of the Reinsurer in the Treaty.

Written Line: The amount of a risk that an Insurer or Reinsurer has agreed to accept.
Signed Line: The underwriter’s participation in a risk after the lines have been reduced, as necessary, to total 100% of the actual amount at risk. This refers to the amount of a given risk that an underwriter has agreed to accept. It may be the same as the underwriter's written line or, if there is signing down, a lower amount.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.RiskManager' originalName='RiskManager' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>The organization that is managing the risk.  It may be the modeled organization itself or a sub-organization (line of business, organization unit, geographical  division, etc) thereof.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Signatory' originalName='Signatory' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A signer, or one of the signers, of a document.

SOURCE: http://dictionary.reference.com/browse/signatory+</Description>
    <AttributeProperty isSynthetic='true' name='designationCode' originalName='designationCode' assignable='true' index='0'>
      <Description>Designation of signatory. Indicates how the signatory is associated with the agreement. 

e.g: Applicant
 
e.g: Producer</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.SignatoryDesignationCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='signatureDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.PartyRoleInAgreement.Surety' originalName='Surety' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' isAbstract='false'>
    <Description>A "Surety" is the party (e.g. insurance company) backing another party that is playing the role of "Principal" in a surety bond agreement.

1. a party that has made itself responsible for another, as a sponsor, godparent, or bondsman.
2. a party who is legally responsible for the debt, default, or delinquency of another.

SOURCE: http://dictionary.reference.com/browse/Surety</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceFacultativeAgreement' originalName='ReinsuranceFacultativeAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.ReinsuranceAgreement' isAbstract='true'>
    <Description>Facultative reinsurance is an optional method, under which the direct insurer (ceding company or cedent) offers each risk individually to the reinsurer for his consideration. The reinsurer consequently receives full details of each risk offered, as he would if he were to write it on a direct basis, and he has the option to reject the offer or to agree to acceptance on such terms and conditions as he may prescribe. The offer and acceptance are thus optional on both sides, and there is no valid contract until and unless the offer is accepted.

Facultative reinsurance is the oldest form of reinsurance, having been derived from the concept of coinsurance or sharing of an individual risk by a number of insurers. The basic difference between the two methods is that under the facultative method it is only the primary insurer who has a contractual liability under the original insurance whereas, under coinsurance, each participating insurer has a direct and individual relationship with the original insured - although without any joint or collective liability.
The word 'facultative' means 'optional' or as implying a faculty, that is a 'facility or power to act according to a free choice'. In the early days of reinsurance (up to the middle of the 19th century), reinsurance in U.K. was effected facultatively between one direct office and another - usually on the basis of reciprocal support through an exchange of risks. However, this situation gave rise to worry in the minds of primary insurers that they were disclosing too much information on their book of business to competitors. This problem was resolved with the emergence of professional reinsurers, who posed no threat of direct competition.
The problem of confidentiality was further eased with the development of the treaty method, which enabled direct insurers to purchase reinsurance without disclosing sensitive details of each risk to the reinsurer. Despite extensive use of treaties, the facultative method is however still employed today owing to the expanding size of risks as also the increase in their hazard and complexity, leading to greater need for consultation between cedent and reinsurer. 



Facultative reinsurance types:
- Proportional = Proportional facultative
- Non-Proportional = Risk Excess, Layered Cover, Facultative Stop Loss</Description>
    <AttributeProperty isSynthetic='true' name='cessionRate' originalName='cessionRate' assignable='true' index='1'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceCommissionRate' originalName='reinsuranceCommissionRate' assignable='true' index='0'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='reinsurancefacultativeagreement' originalName='reinsurance facultative agreement' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceFacultativeAgreementForreinsurancefacultativeagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceProgram' originalName='ReinsuranceProgram' superclassName='org.acord.aim.Agreement.AgreementComponent' isAbstract='false'>
    <Description>A reinsurance plan enables to define the reinsurance policy of a ceding company. It is made of reinsurance contracts.</Description>
    <AttributeProperty isSynthetic='true' name='reinsurancePlanName' originalName='reinsurancePlanName' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='atRiskLimitAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='finalRetentionAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='finalRetentionObjectiveAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossRetentionAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='referencePeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reinsuranceprogramcedent' originalName='reinsurance program cedent' assignable='true' index='6' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Cedent</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceProgramForreinsuranceprogramcedent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceTreatyAgreement' originalName='ReinsuranceTreatyAgreement' superclassName='org.acord.aim.Agreement.FinancialServicesAgreementSubtypes.ReinsuranceAgreement' isAbstract='true'>
    <Description>A reinsurance treaty is a reinsurance convention between an insurer and a reinsurer defining the terms under which the risks covered by the convention are ceded and accepted.
The two main categories of treaty reinsurance are proportional and non-proportional. 
Treaty reinsurance is an obligatory method based on an agreement concluded for a specified period of time (usually 12-month period, renewable annually) covering a defined concept or concepts of business. Details of individual risks are not provided (barring exceptional cases providing for submission of bordereaux). The cedent is obliged to cede all risks falling within the scope of the agreement, and the reinsurer is obliged to accept all such cessions without the option to decline or to ask for improved terms. Offer and acceptance are thus automatic, and the offer becomes a contract as soon as it is made (rather than as soon as it is accepted - as under the facultative method).

This concept is the parent concept for the different treaty concepts.
Treaty:
- Proportional = Quota Share, Surplus, Combined Quota-cum-Surplus
- Non-Proportional = Per Risk Excess of Loss, Working Excess of Loss, Catastrophe Excess of Loss, Aggregate Excess of Loss (Stop Loss)</Description>
    <AttributeProperty isSynthetic='true' name='billingType' originalName='billingType' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceCategoryCode' originalName='reinsuranceCategoryCode' assignable='true' index='5'>
      <Description>The values can be [ ReInsurance, CoReinsurance]</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.TreatyReinsuranceCategoryCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceRisk' originalName='reinsuranceRisk' assignable='true' index='6'>
      <Description>A technical Treaty is defined for a Risk</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatyFrequencyCode' originalName='treatyFrequencyCode' assignable='true' index='1'>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatyLabel' originalName='treatyLabel' assignable='true' index='2'>
      <Description>Treaty's label</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatyStatusCode' originalName='treatyStatusCode' assignable='true' index='0'>
      <Description>Values are [ "closed", "Valid", "Simulation"]</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.TreatyStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatyVersion' originalName='treatyVersion' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='subtreatycomposition' originalName='sub treaty composition' assignable='true' index='11' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceTreatyAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceTreatyAgreementForsubtreatycomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatyCreationDate' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatyPeriod' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatyReferencePeriod' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatyStatusDate' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes.NonProportionalFacultativeAgreement' originalName='NonProportionalFacultativeAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceFacultativeAgreement' isAbstract='false'>
    <Description>Facultative written to protect the ceding company from all or part of claims in excess of a specified amount retained (priority).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes.ProportionalFacultativeAgreement' originalName='ProportionalFacultativeAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceFacultativeAgreement' isAbstract='false'>
    <Description>Facultative reinsurance defining a reinsurer's share of claims carried by the insurer in proportion to its share of premiums received. Proportional reinsurance is generally written as a quota share of business or as surplus reinsurance.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes.RiskExcessFacultativeAgreement' originalName='RiskExcessFacultativeAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes.ProportionalFacultativeAgreement' isAbstract='false'>
    <Description>Reinsurance and retained limits apply per risk as opposed to per occurrence or in the aggregate.
Use of this method for placement of extremely large or complex risks has been given an impetus by:
- Insufficient proportional capacity in the international reinsurance market,
- Disparities between the original rate and the global rate expected by reinsurers, and 
- The drive by insurers to optimize efficient deployment of capital by maximizing retention. 
Under this method, the loss potential of a single risk from any one loss into two layers above and below the Excess Point:
- Underlying Layer (Deductible or Loss Retention or Priority) - portion of each loss retained by the reassured on a first loss basis); and
- Limit of Indemnity - the excess over the Deductible borne by the Reinsurer up to a stipulated limit.
The subject matter insured is the Ultimate Net Loss, which is defined as meaning all sums actually paid by the Reinsured in respect of the loss including expenses of litigation and all other loss expenses but excluding office expenses and salaries of his employees. Salvages, third party recoveries and collections under prior proportional reinsurances shall first be deducted. 
The Risk Excess is distinct from Per Risk Excess of Loss and Working Excess of Loss, which are treaty methods employed for protection of all the individual risks comprised in a whole defined portfolio - rather than a specified individual risk. 
The trigger for attachment of Reinsurer’s liability under a Risk Excess is each loss. It is accordingly necessary to define this term because an accumulation of otherwise separate but arguably simultaneous losses can be caused by a single event (such as a riot or a natural calamity) affecting one and the same risk. Whereas a loss occurrence is defined in both temporal and spatial terms under the Hours Clause, all that is required under a Risk Excess is a temporal definition as the area covered is the specific location of the risk. 
If the Risk Excess method is used to handle a risk which itself is originally insured on First Loss basis for a fraction of the theoretical Value at Risk, the Indemnity may be so pegged that, when added to the Deductible, the resulting total is equivalent to the First Loss Limit of Liability relating to the facultative portion - regardless of the Value at Risk. However, if the risk is insured for the full Value at Risk (Total Sum Insured) but is underwritten on PML basis, it must be remembered that the insurer is nevertheless liable up to the full TSI - plus costs such as survey and adjustment charges, legal fees etc. Therefore, where there is a possibility of PML error, the Indemnity is stretched further - often up to the full TSI - by purchasing a relatively cheap sleep easy top layer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes.StopLossFacultativeAgreement' originalName='StopLossFacultativeAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceFacultativeAgreementSubtypes.ProportionalFacultativeAgreement' isAbstract='false'>
    <Description>This method was originally developed to meet the requirements of direct insureds for the protection of industrial risks where, instead of maintaining large self-insured deductibles for each and every claim, the insured would bear on his own account the aggregate during the year of all low intensity / high frequency claims below a defined level in return for a discount in premium. This concept is sometimes used in facultative reinsurance to arrest attrition losses that are costly to handle for both cedent and reinsurer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.CatastropheTreatyAgreement' originalName='CatastropheTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.NonProportionalTreatyAgreement' isAbstract='false'>
    <Description>Catastrophe treaty reinsurance protects the ceding insurer against a loss or losses in excess of a specified retention, from an accumulation of losses caused by a single catastrophic event or a series of events. A catastrophic event may be a sudden, violent, physical event that causes widespread and severe property damage, such as a hurricane. When a catastrophic event occurs, multiple policies are usually implicated, and catastrophe reinsurance protects these multiple losses.
Example: Company A writes 100 automobile policies in 2004 with exposure totaling $100,000. Company A enters into a Catastrophe Treaty Reinsurance agreement with Company B by which Company B agrees to assume all losses above $50,000 in the event of a catastrophic event.
A hurricane causes 25 cars to be totally demolished, resulting in a loss of $75,000. Company B is liable for $25,000.
On that same day, 10 other cars get into random accidents resulting in a loss of $10,000. Company B is not liable for the $10,000 under the Catastrophe Treaty because those ten cars were not damaged by the catastrophic event.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.CodedExcessOfLossTreatyAgreement' originalName='CodedExcessOfLossTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SemiAutomaticArrangement' isAbstract='false'>
    <Description>The Coded XOL is a compromise between the Risk Excess (facultative method) and the Per Risk XOL Treaty (treaty method). Whilst cover is automatic for each and every risk within a defined portfolio, each risk has to be rated separately and declared under a periodical bordereau prepared by the Reassured on the basis of a premium formula agreed in advance with the Reinsurer. The difference between this arrangement and the Line Slip is that the estimated annual excess of loss premium is computed at inception and a deposit lodged with the Reinsurer, usually subject to a minimum premium on year-end adjustment.
Coded excess is considered more accurate in measuring exposure than averaging methods.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ExcessOfLossLineSlipAgreement' originalName='ExcessOfLossLineSlipAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SemiAutomaticArrangement' isAbstract='false'>
    <Description>The Line Slip concept prevalent in proportional reinsurance can be applied equally to the Risk Excess. Under this semi-automatic arrangement, whereas each risk is offered by means of a separate slip, coverage up to an agreed maximum limit is guaranteed once the rates and other terms are agreed with the Leading Underwriter.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ExcessOfLossTreatyAgreement' originalName='ExcessOfLossTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.NonProportionalTreatyAgreement' isAbstract='false'>
    <Description>Excess of Loss Treaty.
Excess of loss reinsurance is a method whereby an insurer pays the amount of each claim for each risk up to a limit determined in advance and the reinsurer pays the amount of the claim above that limit up to a specific sum. For example, assume that an insurer issues automobile liability policies of $150,000 on any one risk and retains the first $50,000 of any risk. The insurer purchases excess loss reinsurance for $100,000 in excess of $50,000 on any one risk. The insurer pays the first $50,000 of all losses, and the reinsurer pays any excess amount up to a maximum of $100,000.

Low or working layer excess of loss reinsurance: Reinsurance that absorbs the losses immediately above the reinsured's retention layer. A low layer excess of loss reinsurer will pay up to a certain monetary amount at which point a higher layer reinsurer or the ceding company will be liable for additional losses.  Also known as working layer reinsurance.</Description>
    <AttributeProperty isSynthetic='true' name='aggregateDeductibleCurrency' originalName='aggregateDeductibleCurrency' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='excessOfLossTypeCode' originalName='excessOfLossTypeCode' assignable='true' index='4'>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.ExcessOfLossTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='interlockingClauseIndicator' originalName='interlockingClauseIndicator' assignable='true' index='8'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lossesCoverageBasisCode' originalName='lossesCoverageBasisCode' assignable='true' index='5'>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LossesCoverageBasisCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='priority' originalName='priority' assignable='true' index='3'>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinstatementCount' originalName='reinstatementCount' assignable='true' index='2'>
      <Description>Number of Reconstruction of the Excess of Loss Treaty</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsurerNumberLimit' originalName='reinsurerNumberLimit' assignable='true' index='1'>
      <Description>Reinsurer Number Limit of the Excess of Loss Treaty</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='retentionNumber' originalName='retentionNumber' assignable='true' index='0'>
      <Description>The Excess of Loss Treaty retention number</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='treatyLossesCoverageBasisCode' originalName='treatyLossesCoverageBasisCode' assignable='true' index='9'>
      <Description>Enables to determines which original policy losses will be covered under a given reinsurance agreement.
There are two types of methodologies: policies attaching and losses occurring.  The determination may be based on 1) the effective or renewal date of the original policy; or 2) on the date of the loss; or 3) on the date when the reinsured company recorded premium or loss transaction. LOD = A policy providing cover for losses occurring in the defined period no matter when they are reported, as opposed to a claims made policy or a risk attaching policy. Syn = basis of attachment.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LossesCoverageBasisCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='xLLayerLabel' originalName='xLLayerLabel' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='aggregateDeductibleAmount' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='attachmentPointAmount' assignable='true' index='15' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='backupprotection' originalName='back up protection' assignable='true' index='16' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ExcessOfLossTreatyAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ExcessOfLossTreatyAgreementForbackupprotection' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='excessoflosstreatyinterlockingclause' originalName='excess of loss treaty interlocking clause' assignable='true' index='19' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.InterlockingClause</TypeName>
      <RelationshipProperty isSynthetic='true' name='ExcessOfLossTreatyAgreementForexcessoflosstreatyinterlockingclause' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reinstatementlimit' originalName='reinstatement limit' assignable='true' index='17' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ReinstatementLimit</TypeName>
      <RelationshipProperty isSynthetic='true' name='ExcessOfLossTreatyAgreementForreinstatementlimit' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reinstatementpremiumprotection' originalName='reinstatement premium protection' assignable='true' index='18' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ExcessOfLossTreatyAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ExcessOfLossTreatyAgreementForreinstatementpremiumprotection' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reinsuredLimitAmount' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalCoverageAmount' assignable='true' index='14' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatyLimitAmount' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='treatyRangeAmount' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.InterlockingClause' originalName='InterlockingClause' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementClauseComponent' isAbstract='false'>
    <Description>The Interlocking Clause defines a provision in a reinsurance agreement designed to allocate loss from a single occurrence between two or more reinsurance agreements.  The provision is intended to be used when the company purchases its excess of loss reinsurance on an "underwriting year" or "risks attaching" basis.  The provision allows the reinsured to prorate its retention between two or more reinsurance agreement periods, i.e., when one loss affects policies assigned to different reinsurance periods, so that the company will have one retention and one recovery for the loss involving the two reinsurance periods.

This clause in a reinsurance treaty is designed to mesh and apportion loss from a single occurrence between two or more reinsurance contracts. The exact opposite is the event approach, designed to cause all loss from one occurrence to have one deemed date of loss, regardless of the number of dates of loss or reinsurance contracts involved.

Under an excess of loss cover on Issued and Renewed (Risks Attaching) basis, the Reassured would be exposed to two loss retentions (deductibles) if the same loss occurrence were to involve policies issued in two different underwriting years. The Interlocking Clause provides for pro rata distribution of the Ultimate Net Loss over the two years in such cases and apportionment of the limits based on such distribution:
Excess of Loss Limits 500,000 XS 100,000 each and every loss occurrence
Loss from the ground up 300,000 from the same event (involving 2 underwriting years)
Year Gross Loss Normal Cover Subject to Interlocking Clause
  Deductible Indemnity Deductible Indemnity
1998 200,000 100,000 100,000 67,000 133,000
1999 100,000 100,000 Nil 33,000 67,000
Total 300,000 200,000 100,000 100,000 200,000</Description>
    <AttributeProperty isSynthetic='true' name='interlockingClauseDescription' originalName='interlockingClauseDescription' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.LineSlipAgreement' originalName='LineSlipAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SemiAutomaticArrangement' isAbstract='false'>
    <Description>Facultative excess of loss line slip.
The Line Slip concept prevalent in proportional reinsurance can be applied equally to the Risk Excess. Under this semi-automatic arrangement, whereas each risk is offered by means of a separate slip, coverage up to an agreed maximum limit is guaranteed once the rates and other terms are agreed with the Leading Underwriter.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.NonProportionalTreatyAgreement' originalName='NonProportionalTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceTreatyAgreement' isAbstract='false'>
    <Description>In non-proportional treaty reinsurance, the reinsurer’s portion of the risk does not bear a fixed relationship to that of the ceding company. The reinsurer is obligated only after the ceding company’s loss payments exceed a predetermined
amount, after which the reinsurer is obligated to pay a share or the entirety of subsequent losses. In non-proportional reinsurance, the reinsurer’s share of loss is not proportional to the share of original premiums.
Within the category of non-proportional treaty reinsurance
are the sub-categories of Excess of Loss, Catastrophe, and Stop
Loss reinsurance.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ObligatoryFacultativeTreatyAgreement' originalName='ObligatoryFacultativeTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SemiAutomaticArrangement' isAbstract='false'>
    <Description>Obligatory facultative treaty is a type of semi-automatic proportional treaty under which it is obligatory for the cedent to cede each risk within defined terms, whereas the reinsurer enjoys the discretion to decide whether or not to accept the cession, and if so for what amount. This is thus the reverse of the Facultative Obligatory Treaty (also known as Open cover treaty).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.OpenCoverTreatyAgreement' originalName='OpenCoverTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SemiAutomaticArrangement' isAbstract='false'>
    <Description>Open cover reinsurance treaty
Briefly referred to as an Autofac - a type of semi-automatic proportional treaty under which the cedent enjoys the freedom to decide whether or not to affect a cession but it is obligatory for the reinsurer to accept all cessions once they are made. Also known simply as the Facultative obligatory treaty (Fac/Oblig) - being the reverse of the Obligatory facultative treaty. One distinguishing feature, as compared to a treaty, is that an Autofac is not subject to any line limitation.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ProportionalTreatyAgreement' originalName='ProportionalTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceTreatyAgreement' isAbstract='false'>
    <Description>This concept is the super-type of all proportional treaty types.
A proportional Treaty is a reinsurance agreement in which the risks are transferred in direct proportion to the premiums paid over.</Description>
    <AttributeProperty isSynthetic='true' name='overridingCommissionRate' originalName='overridingCommissionRate' assignable='true' index='5'>
      <Description>An allowance paid to the ceding company (cedent) over and above the acquisition cost to allow for overhead expenses and often including a margin for profit.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='profitCommissionCalculationMode' originalName='profitCommissionCalculationMode' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='profitCommissionRate' originalName='profitCommissionRate' assignable='true' index='4'>
      <Description>Also known as Contingent commission.
This is an amount which the reinsurer agrees to pay to the reassured (usually under a proportional treaty and very rarely under a non-proportional treaty) as an incentive by way of profit participation. The results are arrived at after deduction from earned premium of losses incurred, ceding commission, taxes &amp; charges (but not brokerage) and an allowance for the reinsurer's management expenses (the M/E factor). Losses, if any, are carried forward to the computation of profit for a specified count of subsequent years or until extinction. A separate statement has to be prepared for each reinsurer because, apart from differences in ceding commission and rate of profit commission (as, for example, in the case of the Lead Reinsurer or a reciprocal reinsurer), only those losses may be carried forward which relate to the participation of a particular reinsurer in previous years. A new reinsurer cannot claim credit for losses carried forward relating to the outgoing reinsurer whom he has replaced. The commission may be a fixed percentage of the profit or calculated on a sliding scale. It is important for the cedent to render a profit commission statement within a reasonable time after rendering of accounts for the final quarter, even if the result is a loss because otherwise accounts would be incomplete and the loss to be carried forward will not be recorded. This also facilitates maintenance of cumulative treaty statistics over a period of years. Reinsurers would prefer allowing a generous profit commission to a higher basic commission. The rate is influenced by various factors - such as: - whether the treaty is well-established and has a clear pattern of past profitability or is unbalanced, with the dangerous potential that profits earned over several good years may be wiped out by a huge loss in a single year, - whether there is a substantial exposure to catastrophic losses (riots, elemental perils), thus requiring the reinsurer to incur additional costs on excess of loss protection for his share, - whether the treaty is placed on reciprocal basis or is placed as a bouquet supported by a book of more profitable business and - whether the basic commission itself incorporates a profit incentive (as discussed earlier). Where various treaties are placed together on 'bouquet' basis, profit commission is usually calculated on the combined results of the bouquet. Likewise, where a treaty is comprised of more than one section (Quota Share / Surplus, Domestic / Foreign risks, different sub-classes such as under General Accident). Calculation of profits under a bouquet becomes a bit of a problem if it contains long tail business such as Marine Cargo, CAR/EAR or liability. There is a theory which holds that no profit commission should be allowed under a quota share treaty as the results and interests of both parties under such a treaty are already the same (i.e. they share in both good and bad business) and there is no need for a further monetary inducement to the cedent for better management of the portfolio. The position under a surplus treaty is different as the cedent is in a position to influence the fortunes of the surpluses ceded without participating in the results. Profit commission is not usually allowed under automatic facultative and facultative obligatory treaties, where results tend to fluctuate widely and there is a potential for periodical heavy deficits. The objective in fixing the rate of profit commission would be to ensure that, combined with the basic commission; it does not eat up an unreasonable portion of the profit. The reinsurer should be allowed to retain an adequate margin in return for the risk he has run and in order that he is enabled to set aside reserves to finance the deficit in bad years. In order to achieve some flexibility on this front, it is common practice to have sliding scale or stepped up scales based on the profit ratio. While the ratio of profit for purposes of the formula is based on earned premium, the rate profit commission payable is applied to written premium.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceAccountFrequencyCode' originalName='reinsuranceAccountFrequencyCode' assignable='true' index='3'>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceCommissionCalculationMode' originalName='reinsuranceCommissionCalculationMode' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceCommissionRate' originalName='reinsuranceCommissionRate' assignable='true' index='0'>
      <Description>The commission paid by the reinsurer to the ceding company (primary insurer) on reinsurance agreements as compensation to place the business with the reinsurer and to cover the ceding company's acquisition expenses.

Also called Ceding commission or Exchange commission. The pricing mechanism (expressed as a percentage of premium ceded) under a proportional reinsurance contract, whereby the ceding company recoups the reinsurer's pro rata share of its original costs from the reinsurer (and, in addition, sometimes claims a margin for good will or presumptive profit). The cedent's original costs are comprised of acquisition costs (direct commission, brokerage) and management expenses (on risk inspection, issue of policies, underwriting, accounting, claims processing etc.) Commission is payable only under proportional reinsurance - whether facultative or treaty. The reason is that, under the proportional method, the reinsurer shares premiums with the cedent in direct proportion to his share of the sum insured and must likewise share the costs. Under the excess of loss method, there is no such sharing and the premium charged to the reassured is a net price related to the quantum of protection. If commission is only meant to recover actual original costs, it can be calculated easily. However, in practice, it is a pricing mechanism whereby the cedent tries to earn the highest possible reward for producing, controlling and managing a book of business which is then given in a packaged form to the reinsurer. The rate of commission therefore includes a premium for quality based on the merits and performance of the portfolio ceded. Commission terms vary, depending on basis of cession (OGR or ONR) In fixing the margin over and above original costs, the factors taken into account are the balance of the treaty, the track record of the treaty and future loss potential, extent of anti-selection against the reinsurer, types of risks and perils ceded, market norms for each class / treaty type, type of treaty, , whether treaty is traded reciprocally, cash flow potential, special relationship if any with the reinsurer, cost of administration of the treaty and, finally, the law of supply and demand. There are three types of commission: - Fixed Commission - Fixed plus Additional Commission linked to Loss Ratio - Sliding Scale Commission.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='proportionalTreatyTotalCapacityAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.QuotaShareTreatyAgreement' originalName='QuotaShareTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ProportionalTreatyAgreement' isAbstract='false'>
    <Description>Quota Share Treaty.
Quota share reinsurance is an automatic reinsurance that requires the insurer to transfer, and the reinsurer to accept, a given percentage of every risk within a defined category of business written by the insurer. For example, in the case of a 20% quota share, the insurer transfers 20% of its liability and premiums on every risk to the reinsurer, who must pay 20% of any loss sustained, whether total or partial. The percentage is constant throughout and applies to premiums and losses alike.</Description>
    <AttributeProperty isSynthetic='true' name='cessionRate' originalName='cessionRate' assignable='true' index='0'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='retentionRate' originalName='retentionRate' assignable='true' index='1'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ReinstatementLimit' originalName='ReinstatementLimit' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>Reinstatement is a provision in an excess of loss reinsurance contract, particularly catastrophe and clash covers, that provides for reinstatement of a limit that had been reduced by the occurrence of a loss or losses. The number of times that the limit can be reinstated varies, as does the cost of the reinstatement.</Description>
    <AttributeProperty isSynthetic='true' name='reinstatementLimitConditions' originalName='reinstatementLimitConditions' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinstatementLimitStatus' originalName='reinstatementLimitStatus' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='reinstatementLimitAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SemiAutomaticArrangement' originalName='SemiAutomaticArrangement' superclassName='org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceTreatyAgreement' isAbstract='false'>
    <Description>This concept is the super-type of all semi-automatic arrangements.
Types of semi-automatic arrangements :
- Proportional = Automatic Facultative Treaty, Facultative Obligatory Treaty, Line Slip
- Non-Proportional = Coded Excess of Loss, Excess of Loss Line Slip</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.StopLossTreatyAgreement' originalName='StopLossTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.NonProportionalTreatyAgreement' isAbstract='false'>
    <Description>Stop loss reinsurance protects a cedent against an aggregate amount of claims over a period, in excess of a specified percentage of the earned premium income. Stop loss reinsurance does not cover individual claims. The reinsurer's liability is limited to a stipulated percentage of the loss and/or a maximum currency amount. The stop loss method protects the cedent against the possibility that the aggregate value of an accumulation of small losses will exceed a specified percentage of earned premium income of a particular class. Stop loss reinsurance is the exact opposite of the quota share reinsurance and surplus reinsurance, and differs considerably from other forms of excess of loss reinsurance.

For example, a reinsurer can provide a cedent with 50% of the amount by which aggregate incurred losses of the cedent in any year exceed 70% of the cedent's earned premium income during that year.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.SurplusShareTreatyAgreement' originalName='SurplusShareTreatyAgreement' superclassName='org.acord.aim.Agreement.ReinsuranceTreatyAgreementSubtypes.ProportionalTreatyAgreement' isAbstract='false'>
    <Description>Surplus Share Treaty is a Proportional treaty.
Surplus reinsurance is an automatic reinsurance that requires an insurer to transfer (cede) and the reinsurer to accept the part of every risk that exceeds the insurer's predetermined retention limit. The reinsurer shares in premiums and losses in the same proportion as it shares in the total policy limits of the risk. The surplus method permits the insurer to keep for its own account small policies, and to transfer the amount of risk on large policies above its retention limit. For example, assume an insurer issues a policy for $20,000. The insurer keeps $5000 (¼) and transfers the remaining $15,000 (¼) to its reinsurer. This is called a three line surplus because the amount transferred equals three times the retained line of the insurer. The insurer keeps ¼ and transfers ¾ of the premium to the reinsurer. In the event of total loss, the settlements between the insurer and the reinsurer would be effected on the identical ¼-¾ basis. The same principal applies if there is a partial loss, in that the reinsurer must reimburse the insurer in the same proportion as the reinsurance premium received.</Description>
    <RelationshipProperty isSynthetic='true' name='thresholdAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.CreditRiskAgreement' originalName='CreditRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreementSubtypes.FinancialRiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with credit risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.CurrencyRiskAgreement' originalName='CurrencyRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreementSubtypes.FinancialRiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with currency risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.EquityRiskAgreement' originalName='EquityRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreementSubtypes.FinancialRiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with equity risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.FinancialRiskAgreement' originalName='FinancialRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with financial risk management</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.InterestRateRiskAgreement' originalName='InterestRateRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreementSubtypes.FinancialRiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with interest rate risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.LiquidityRiskAgreement' originalName='LiquidityRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreementSubtypes.FinancialRiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with liquidity risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.MarketRiskAgreement' originalName='MarketRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with market risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.OperationalRiskAgreement' originalName='OperationalRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with operational risk management.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Agreement.RiskAgreementSubtypes.SolvencyRiskAgreement' originalName='SolvencyRiskAgreement' superclassName='org.acord.aim.Agreement.RiskAgreement' isAbstract='false'>
    <Description>A risk agreement concerned with the regulation and management of the solvency position of an insurance undertaking. 

Usually a solvency risk agreement is entered into by two parties: the insurance undertaking and its regulatory authority.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ActuarialAnalysis' originalName='ActuarialAnalysis' superclassName='org.acord.aim.Activity.AssessmentActivity' isAbstract='false'>
    <Description>An actuarial analysis or assessment concerning a given concept (e.g. a party, an event, a set of insurance policies and related claims activities, etc.).</Description>
    <AttributeProperty isSynthetic='true' name='reinsuranceScenarioTypeCode' originalName='reinsuranceScenarioTypeCode' assignable='true' index='0'>
      <Description>A categorization of actuarial analysis assessments according to how reinsurance has been taken into consideration when calculating the values represented by analytical measures.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ScenarioReinsuranceStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='scenarioValuationBasisCode' originalName='scenarioValuationBasisCode' assignable='true' index='3'>
      <Description>A categorization of actuarial analysis assessments according to the set of parameters and their respective values that have been taken into consideration when calculating analytical measures. The set of assumptions that those parameters and their values represent is labeled as a 'scenario valuation basis'. The labels are essentially arbitrary, and may be plain text set by business users, such as actuaries.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ScenarioValuationBasisCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='solvencyMarginStatusCode' originalName='solvencyMarginStatusCode' assignable='true' index='1'>
      <Description>The status of the solvency margin taken into consideration when calculating the values represented by analytical measures.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ScenarioSolvencyMarginStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='taxStatusCode' originalName='taxStatusCode' assignable='true' index='2'>
      <Description>A status of how taxation has been taken into consideration when calculating the values represented by analytical measures.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.TaxCalculationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='valuationStateCode' originalName='valuationStateCode' assignable='true' index='4'>
      <Description>A code that defines an assessment scenario set.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.AssessmentScenarioSetCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResult' originalName='AssessmentResult' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The result of an evaluation, based on an expert opinion, on the use of specialized instrumentation, or on the use of analytical systems. This includes scores (of parties, market segments, policies, and places) calculated for risk assessment, marketing or other purposes, financial valuations (of parties, market segments, agreements and physical objects) and conditions (of places, physical objects and activity occurrences).</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A free-text statement used to describe the assessment result.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reliabilityCode' originalName='reliabilityCode' assignable='true' index='0'>
      <Description>The presumed accuracy of the assessment result. 
 
e.g: Estimated 
 
e.g: Known</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ReliabilityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='2'>
      <Description>The current status of the assessment result within the life-cycle model.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.AssessmentResultStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusReasonCode' originalName='statusReasonCode' assignable='true' index='3'>
      <Description>The reason explaining why there was a status change.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.StatusReasonCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='assessmentactivityresultassociation' originalName='assessment activity result association' assignable='true' index='10' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.AssessmentActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssessmentResultForassessmentactivityresultassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='assessmentresultinvolvedinclaim' originalName='assessment result involved in claim' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssessmentResultForassessmentresultinvolvedinclaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AssessmentResultOnParty' originalName='AssessmentResult On Party' assignable='true' index='11' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssessmentResultForAssessmentResultOnParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AssessmentResultOnPlace' originalName='AssessmentResult On Place' assignable='true' index='9' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssessmentResultForAssessmentResultOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='categoryassessment' originalName='category assessment' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.Category</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssessmentResultForcategoryassessment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='physicalobjectassessment' originalName='physical object assessment' assignable='true' index='8' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssessmentResultForphysicalobjectassessment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.DamageAssessment' originalName='DamageAssessment' superclassName='org.acord.aim.Activity.AssessmentActivity' isAbstract='false'>
    <Description>A specific type of assessment activity around damage caused to a physical object.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.Inspection' originalName='Inspection' superclassName='org.acord.aim.Activity.AssessmentActivity' isAbstract='false'>
    <Description>This concept represents an inspection of some type.

e.g. During the placement process, the insurer may require an inspection of a vehicle or structure to determine insurability and identify any pre-existing damage or condition(s).</Description>
    <AttributeProperty isSynthetic='true' name='inspectionReportSource' originalName='inspectionReportSource' assignable='true' index='2'>
      <Description>It indicates the type of inspection report which is being or was ordered.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='inspectionStatusCode' originalName='inspectionStatusCode' assignable='true' index='1'>
      <Description>It identifies the inspection status of the item.</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.InspectionStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='inspectionTypeCode' originalName='inspectionTypeCode' assignable='true' index='0'>
      <Description>It identifies the type of inspection.</Description>
      <TypeName>org.acord.aim.Activity.ActivityCodeLists.InspectionTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.LossAdjustmentCaseAssessment' originalName='LossAdjustmentCaseAssessment' superclassName='org.acord.aim.Activity.AssessmentActivity' isAbstract='false'>
    <Description>This concept represents the outcome of the loss adjustment case handling. 

Technically, the loss adjustment case assessing is a sub-activity of the composite activity "Loss adjustment case".

The loss adjustment case assessment generates - as activity results - the compensation and damage evaluation amounts.</Description>
    <AttributeProperty isSynthetic='true' name='estimationAcceptedByBeneficiaryIndicator' originalName='estimationAcceptedByBeneficiaryIndicator' assignable='true' index='0'>
      <Description>States whether the offered amount has been accepted by the beneficiary</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MedicalAssessment' originalName='MedicalAssessment' superclassName='org.acord.aim.Activity.AssessmentActivity' isAbstract='false'>
    <Description>A specific type of assessment activity around the medical condition of a person. This concept serves as a base concept for all medically related assessment activities.</Description>
    <AttributeProperty isSynthetic='true' name='generalObservation' originalName='generalObservation' assignable='true' index='0'>
      <Description>General text related to observations made via a Medical Assessment; however, this is not the result of a medical assessment.

e.g: A skin test may not result in proof of a condition, such as skin cancer, but one may observe the discoloration of some skin.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='medicalReportDocument' originalName='medical Report Document' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.MedicalReport</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicalAssessmentFormedicalReportDocument' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskAssessment' originalName='RiskAssessment' superclassName='org.acord.aim.Activity.AssessmentActivity' isAbstract='false'>
    <Description>An assessment concerned with determining the degree, probability, exposure or contributing factors of a risk.</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.AssessmentResultStatusCodeList' originalName='AssessmentResultStatusCodeList' restricts='java.lang.String'>
    <Description>Possible life cycle states for assessment result.</Description>
    <Enumerand isSynthetic='true' name='Accepted' generator='Accepted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Proposed' generator='Proposed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.AssessmentScenarioSetCodeList' originalName='AssessmentScenarioSetCodeList' restricts='java.lang.String'>
    <Description>This list defines an assessment scenario set.</Description>
    <Enumerand isSynthetic='true' name='Actual' generator='Actual'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AlternateVariancePeriod' generator='Alternate Variance Period'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Budget' generator='Budget'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Forecast' generator='Forecast'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StressTesting' generator='Stress Testing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VariancePercent' generator='Variance Percent'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.AttitudeRatingCodeList' originalName='AttitudeRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Attitudes according to their rating.</Description>
    <Enumerand isSynthetic='true' name='HighPriceSensitivity' generator='High Price Sensitivity'>
      <Description>Identifies a Attitude with rating 'High price-sensitivity'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LowPriceSensitivity' generator='Low Price Sensitivity'>
      <Description>Identifies a Attitude with rating 'Low price-sensitivity'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.BuildingDegreeCodeList' originalName='BuildingDegreeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of DemographicScores according to their building degree.</Description>
    <Enumerand isSynthetic='true' name='Exurban' generator='Exurban'>
      <Description>Identifies a DemographicScore with building degree 'Exurban'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rural' generator='Rural'>
      <Description>Identifies a DemographicScore with building degree 'Rural'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suburban' generator='Suburban'>
      <Description>Identifies a DemographicScore with building degree 'Suburban'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Urban' generator='Urban'>
      <Description>Identifies a DemographicScore with building degree 'Urban'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.CommunicationEffectivenessRatingCodeList' originalName='CommunicationEffectivenessRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Communication Effectiveness Scores according to their rating.</Description>
    <Enumerand isSynthetic='true' name='ErrorInResponse' generator='Error In Response'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NoErrorInResponse' generator='No Error In Response'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.CurabilityCodeList' originalName='CurabilityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Medical Conditions according to their curability.</Description>
    <Enumerand isSynthetic='true' name='FiftyPercent' generator='Fifty Percent'>
      <Description>Identifies a MedicalCondition with curability '50 % chance of being curable'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Curable' generator='Curable'>
      <Description>Identifies a medical condition with curability 'curable'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotCurable' generator='Not Curable'>
      <Description>Identifies a medical condition with curability 'not curable'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.LiquidityCodeList' originalName='LiquidityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of NetWorths according to their liquidity.</Description>
    <Enumerand isSynthetic='true' name='FixedAssets' generator='Fixed Assets'>
      <Description>Identifies a NetWorth with liquidity 'Fixed assets'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquidAssets' generator='Liquid Assets'>
      <Description>Identifies a NetWorth with liquidity 'Liquid assets'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.LossRateReasonCodeList' originalName='LossRateReasonCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Physical Conditions according to their loss rate reason.</Description>
    <Enumerand isSynthetic='true' name='TotalLossEconomicallyNotRepairable' generator='Total Loss Economically Not Repairable'>
      <Description>Identifies a MedicalCondition with curability '50 % chance of being curable'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TotalLossBurntOut' generator='Total Loss Burnt Out'>
      <Description>Identifies a medical condition with curability 'curable'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.LoyaltyRatingCodeList' originalName='LoyaltyRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Loyalty Scores according to their rating.</Description>
    <Enumerand isSynthetic='true' name='High' generator='High'>
      <Description>Identifies a ProfitabilityScore with rating 'High'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Low' generator='Low'>
      <Description>Identifies a ProfitabilityScore with rating 'Low'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Medium' generator='Medium'>
      <Description>Identifies a LoyaltyScore with rating 'Medium'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.PredictiveModelCodeList' originalName='PredictiveModelCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of PropensityScores according to their predictive model.</Description>
    <Enumerand isSynthetic='true' name='Attrition' generator='Attrition'>
      <Description>Identifies a PropensityScore with predictive model 'Attrition'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrossSell' generator='Cross Sell'>
      <Description>Identifies a PropensityScore with predictive model 'Cross sell'. 
 
e.g: Health to Life 
 
e.g: Life to Non-life 
 
e.g: non-life to Health.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CustomerRetention' generator='Customer Retention'>
      <Description>Identifies a PropensityScore with predictive model 'Customer retention'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UpSell' generator='Up Sell'>
      <Description>Identifies a PropensityScore with predictive model 'Up sell, e.g. fire house coverage to full house coverage'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Winback' generator='Winback'>
      <Description>Identifies a PropensityScore with predictive model 'Winback'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrossSellLifeToHealth' generator='Cross Sell Life To Health'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrossSellLifeToNonLife' generator='Cross Sell Life To Non Life'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrossSellNonLifeToHealth' generator='Cross Sell Non Life To Health'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UpSellFireHouseCoverToFullHouseCover' generator='Up Sell Fire House Cover To Full House Cover'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ProfitabilityRatingCodeList' originalName='ProfitabilityRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Profitability Scores according to their rating.</Description>
    <Enumerand isSynthetic='true' name='_15PercentNetGain' generator='15 Percent Net Gain'>
      <Description>Identifies a ProfitabilityScore with rating '15% net gain'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_27PercentNetLoss' generator='27 Percent Net Loss'>
      <Description>Identifies a ProfitabilityScore with rating '27% net loss'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Loss' generator='Loss'>
      <Description>Identifies a ProfitabilityScore with rating 'Loss'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Marginal' generator='Marginal'>
      <Description>Identifies a ProfitabilityScore with rating 'Marginal'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='High' generator='High'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Low' generator='Low'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.PurchasingPowerCodeList' originalName='PurchasingPowerCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of DemographicScores according to their purchasing power.</Description>
    <Enumerand isSynthetic='true' name='Affluent' generator='Affluent'>
      <Description>Identifies a DemographicScore with purchasing power 'Affluent'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentAssistance' generator='Government Assistance'>
      <Description>Identifies a DemographicScore with purchasing power 'Government assistance'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LowIncome' generator='Low Income'>
      <Description>Identifies a DemographicScore with purchasing power 'Low income'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UpperMiddleIncome' generator='Upper Middle Income'>
      <Description>Identifies a DemographicScore with purchasing power 'Upper middle income'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.RelationshipStageRatingCodeList' originalName='RelationshipStageRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Relationship Stages according to their rating.</Description>
    <Enumerand isSynthetic='true' name='AccountManagement' generator='Account Management'>
      <Description>Identifies a RelationshipStage with rating 'Account Management'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Divorce' generator='Divorce'>
      <Description>Identifies a RelationshipStage with rating 'Divorce'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GetToKnow' generator='Get To Know'>
      <Description>Identifies a RelationshipStage with rating 'Get to know'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IntensiveCare' generator='Intensive Care'>
      <Description>Identifies a RelationshipStage with rating 'Intensive Care'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Targeting' generator='Targeting'>
      <Description>Identifies a RelationshipStage with rating 'Targeting'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Welcoming' generator='Welcoming'>
      <Description>Identifies a RelationshipStage with rating 'Welcoming'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Winback' generator='Winback'>
      <Description>Identifies a RelationshipStage with rating 'Winback'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ReliabilityCodeList' originalName='ReliabilityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of AssessmentResults according to their reliability.</Description>
    <Enumerand isSynthetic='true' name='Estimated' generator='Estimated'>
      <Description>Identifies a AssessmentResult with reliability 'Estimated'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Calculated' generator='Calculated'>
      <Description>Identifies that the AssessmentResult has been 'Calculated'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Scored' generator='Scored'>
      <Description>Identifies the Reliability of an AssessmentResult as being obtained through the application of a scoring model.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Known' generator='Known'>
      <Description>Identifies an assessment result with reliability 'Known'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Appraised' generator='Appraised'>
      <Description>Identifies a AssessmentResult with reliability 'Appraised'; an informed estimate made by an expert in an official capacity.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.RepairableCodeList' originalName='RepairableCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Physical Conditions according to their repairability.</Description>
    <Enumerand isSynthetic='true' name='PhysicallyNotRepairable' generator='Physically Not Repairable'>
      <Description>Identifies a MedicalCondition with curability '50 % chance of being curable'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Repairable' generator='Repairable'>
      <Description>Identifies a medical condition with curability 'curable'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EconomicallyNotRepairable' generator='Economically Not Repairable'>
      <Description>Identifies a medical condition with curability 'not curable'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.SatisfactionRatingCodeList' originalName='SatisfactionRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Satisfaction Scores according to their rating.</Description>
    <Enumerand isSynthetic='true' name='NotSatisfied' generator='Not Satisfied'>
      <Description>Identifies a SatisfactionScore with rating 'Not satisfied'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VerySatisfied' generator='Very Satisfied'>
      <Description>Identifies a SatisfactionScore with rating 'Very satisfied'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ScenarioReinsuranceStatusCodeList' originalName='ScenarioReinsuranceStatusCodeList' restricts='java.lang.String'>
    <Description>A categorization of actuarial analysis assessments according to how reinsurance has been taken into consideration when calculating the values represented by analytical measures.</Description>
    <Enumerand isSynthetic='true' name='Ceded' generator='Ceded'>
      <Description>Identifies an actuarial analysis assessments with reinsurance status labeled 'Ceded', specifying that the analytical measures to which the applies are calculated by including only the ceded reinsurance amounts into all premium components of those measures, i.e. the measures are calculated on a 'reinsurance only' basis.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DirectWritten' generator='Direct Written'>
      <Description>Identifies an actuarial analysis assessments with reinsurance status labeled 'Direct written', specifying that the analytical measures to which the applies are calculated by including ceded reinsurance amounts into all premium components of those measures, i.e., the measures are calculated on a 'gross of reinsurance' basis.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Net' generator='Net'>
      <Description>Identifies an actuarial analysis assessments with reinsurance status labeled 'Net', specifying that the analytical measures to which the applies are calculated by including only the ceded reinsurance amounts into all premium components of those measures (i.e., the measures are calculated on a 'reinsurance only' basis).</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ScenarioSolvencyMarginStatusCodeList' originalName='ScenarioSolvencyMarginStatusCodeList' restricts='java.lang.String'>
    <Description>The status of the solvency margin taken into consideration when calculating the values represented by analytical measures.</Description>
    <Enumerand isSynthetic='true' name='Gross' generator='Gross'>
      <Description>Identifies an actuarial analysis assessment with a solvency margin status labeled 'Gross', specifying that the analytical measures to which the applies represent amounts calculated by excluding the effect of solvency margin.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Net' generator='Net'>
      <Description>Identifies an actuarial analysis assessment with a solvency margin status labeled 'Net', specifying that the analytical measures to which the applies represent amounts calculated by including the effect of solvency margin.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ScenarioValuationBasisCodeList' originalName='ScenarioValuationBasisCodeList' restricts='java.lang.String'>
    <Description>A categorization of actuarial analysis assessments according to the set of parameters and their respective values that have been taken into consideration when calculating analytical measures. The set of assumptions that those parameters and their values represent is labeled as a 'scenario valuation basis'. The labels are essentially arbitrary, and may be plain text set by business users, such as actuaries.</Description>
    <Enumerand isSynthetic='true' name='CentralFsaBasis' generator='Central Fsa Basis'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighLapseRateSensitivity' generator='High Lapse Rate Sensitivity'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighMortalitySensitivity' generator='High Mortality Sensitivity'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.SeverityCodeList' originalName='SeverityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of MedicalConditions according to their severity.</Description>
    <Enumerand isSynthetic='true' name='Permanent' generator='Permanent'>
      <Description>Identifies a MedicalCondition with severity 'Permanent'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarAboveHealthylLevel' generator='Far Above Healthyl Level'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AboveHealthyLevel' generator='Above Healthy Level'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarBelowHealthyLevel' generator='Far Below Healthy Level'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BelowHealthyLevel' generator='Below Healthy Level'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Healthy' generator='Healthy'>
      <Description>Identifies a MedicalCondition with severity 'Healthy'; the patient is in a good medical condition.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.SupervisionRatingCodeList' originalName='SupervisionRatingCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of supervision scores according to their rating.</Description>
    <Enumerand isSynthetic='true' name='EachTransaction' generator='Each Transaction'>
      <Description>Identifies a supervision score with supervision rating 'Each transaction'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LargeCashAmountTransaction' generator='Large Cash Amount Transaction'>
      <Description>Identifies a supervision score with supervision rating 'High frequence repetitive transaction'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighFrequenceRepetitiveTransaction' generator='High Frequence Repetitive Transaction'>
      <Description>Identifies a supervision score with supervision rating 'High frequence repetitive transaction'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BeneficiaryChange' generator='Beneficiary Change'>
      <Description>Identifies a supervision score with supervision rating 'Beneficiary change'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ValuationTypeCodeList' originalName='ValuationTypeCodeList' restricts='java.lang.String'>
    <Description>A code list identifying a valuation type.</Description>
    <Enumerand isSynthetic='true' name='AppraisedValue' generator='Appraised Value'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EstimatedValue' generator='Estimated Value'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarketValue' generator='Market Value'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Condition' originalName='Condition' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResult' isAbstract='false'>
    <Description>The state of a place, a physical object or an activity occurrence existing at a given point in time. A condition may be readily observable or an objective evaluation. The objective evaluation may be either declared by an involved party or established as an outcome of an assessment activity. A condition covers physical results of loss events such as material damages, diseases or death, as well as any other states, such as good health, cancellation or disappearance. 
 
e.g: Cancellation of a wedding. 
 
e.g: Dent on a car. 
 
e.g: Pollution of a lake</Description>
    <RelationshipProperty isSynthetic='true' name='activityresponsibleforcondition' originalName='activity responsible for condition' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.Activity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ConditionForactivityresponsibleforcondition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='conditioncauseofclaim' originalName='condition cause of claim' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='ConditionForconditioncauseofclaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='conditioncauseofcondition' originalName='condition cause of condition' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Condition</TypeName>
      <RelationshipProperty isSynthetic='true' name='ConditionForconditioncauseofcondition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='conditioncomposition' originalName='condition composition' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Condition</TypeName>
      <RelationshipProperty isSynthetic='true' name='ConditionForconditioncomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='establishedDurationPeriod' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='losseventcauseofcondition' originalName='loss event cause of condition' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Event.LossEvent</TypeName>
      <RelationshipProperty isSynthetic='true' name='ConditionForlosseventcauseofcondition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statedDurationPeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition' originalName='DamageCondition' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.PhysicalCondition' isAbstract='false'>
    <Description>This represents damage associated with a person, place or thing. The damage may be physical or financial. Damage is determined following an assessment.</Description>
    <RelationshipProperty isSynthetic='true' name='claimcoveragefordamage' originalName='claim coverage for damage' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimCoverage</TypeName>
      <RelationshipProperty isSynthetic='true' name='DamageConditionForclaimcoveragefordamage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='damagedependency' originalName='damage dependency' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition</TypeName>
      <RelationshipProperty isSynthetic='true' name='DamageConditionFordamagedependency' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lossestimatedforspecificdamage' originalName='loss estimated for specific damage' assignable='true' index='4' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.LossEstimation</TypeName>
      <RelationshipProperty isSynthetic='true' name='DamageConditionForlossestimatedforspecificdamage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reservesetforbenefitspaidfordamage' originalName='reserve set for benefits paid for damage' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimReserveEntryDetail.DamageReserve</TypeName>
      <RelationshipProperty isSynthetic='true' name='DamageConditionForreservesetforbenefitspaidfordamage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reservesetforrecoverydefinedfordamage' originalName='reserve set for recovery defined for damage' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimReserveEntryDetail.DamageReserve</TypeName>
      <RelationshipProperty isSynthetic='true' name='DamageConditionForreservesetforrecoverydefinedfordamage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Death' originalName='Death' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.MedicalCondition' isAbstract='false'>
    <Description>This concept specializes the PersonDamage concept. It will be used to manage a detailed description of the death.</Description>
    <RelationshipProperty isSynthetic='true' name='bodilyinjurydeath' originalName='bodily injury death' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.AssessmentandCondition.PersonDamageSubtypes.BodilyInjury</TypeName>
      <RelationshipProperty isSynthetic='true' name='DeathForbodilyinjurydeath' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='deathDate' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedillness' originalName='related illness' assignable='true' index='2' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Illness</TypeName>
      <RelationshipProperty isSynthetic='true' name='DeathForrelatedillness' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation' originalName='FinancialValuation' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResult' isAbstract='false'>
    <Description>An assessment result expressed in financial units.</Description>
    <AttributeProperty isSynthetic='true' name='valuationTypeCode' originalName='valuationTypeCode' assignable='true' index='0'>
      <Description>A code identifying a valuation type.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ValuationTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='amount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialvaluationscore' originalName='financial valuation score' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialValuationForfinancialvaluationscore' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='rangeEndAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='rangeStartAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='subjectoffinancialvaluation' originalName='subject of financial valuation' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Agreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialValuationForsubjectoffinancialvaluation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Illness' originalName='Illness' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.MedicalCondition' isAbstract='false'>
    <Description>This concept  specializes the PersonDamage concept. It will be used to manage a detailed description of an illness.</Description>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>Name of illness</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='permanentIndicator' originalName='permanentIndicator' assignable='true' index='1'>
      <Description>Indicates whether the illness is permanent or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='illnesshospitalization' originalName='illness hospitalization' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.MedicalAssessmentSubtypes.Hospitalization</TypeName>
      <RelationshipProperty isSynthetic='true' name='IllnessForillnesshospitalization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='typeCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.MedicalCondition' originalName='MedicalCondition' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.PhysicalCondition' isAbstract='false'>
    <Description>The health state of a person, such as an injury, a disease or a disability. A medical condition can apply to the whole human body or to a specific body part. A medical condition may be identified as a result of an assessment activity and can require a medical treatment. 
 
e.g: Broken leg 
 
e.g: Deafness 
 
e.g: Physically disabled 
 
e.g: Visual impaired</Description>
    <AttributeProperty isSynthetic='true' name='curabilityCode' originalName='curabilityCode' assignable='true' index='0'>
      <Description>An indication of the degree or probability an individual has of recovering from a particular medical condition. 
 
e.g: 50 % chance of being curable 
 
e.g: Curable 
 
e.g: Not Curable</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.CurabilityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='formalName' originalName='formalName' assignable='true' index='1'>
      <Description>The formal name that is recognized by the medical profession.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='frequencyCode' originalName='frequencyCode' assignable='true' index='3'>
      <Description>The frequency of occurrence or re-occurrence of this medical condition. 
 
e.g: Sporadic</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='severityCode' originalName='severityCode' assignable='true' index='2'>
      <Description>The qualification of the seriousness of the medical condition in terms of threatening the health of an individual. 
 
e.g: High (level of bad cholesterol) 
 
e.g: Permanent</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.SeverityCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.PhysicalCondition' originalName='PhysicalCondition' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Condition' isAbstract='false'>
    <Description>The state of a physical object such as damaged, rusty, broken, flooded, collapsed and so on. A physical condition may apply to a structure, road vehicle, ship or any other physical object. 
 
e.g: Collapsed building.</Description>
    <AttributeProperty isSynthetic='true' name='lossPercentage' originalName='lossPercentage' assignable='true' index='0'>
      <Description>The degree of destruction of a physical object or the disability rate of a person from which partial or total disability can be determined. 
 
e.g: 100% (total write-off) 
 
e.g: 50% disable</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lossRateReasonCode' originalName='lossRateReasonCode' assignable='true' index='1'>
      <Description>Indication of the reason why the loss rate was attributed. 
 
e.g: total loss burnt out (100% loss rate) 
 
e.g: total loss economically not repairable (100% loss rate)</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.LossRateReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='repairableCode' originalName='repairableCode' assignable='true' index='2'>
      <Description>Indicates whether the damages to the physical object are considered to be repairable. 
 
e.g: Economically not repairable. 
 
e.g: Physically not repairable. 
 
e.g: Repairable.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.RepairableCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.PlaceCondition' originalName='PlaceCondition' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Condition' isAbstract='false'>
    <Description>The state of a place such as polluted, flooded, burnt, dried up, affected by an earthquake. 
 
e.g: The central area of Ostend is flooded.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' originalName='Score' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResult' isAbstract='false'>
    <Description>A value associated with parties, places or activities that indicates assessed characteristics, in particular those characteristics that support marketing activities or represent risk factors.</Description>
    <RelationshipProperty isSynthetic='true' name='referencedproduct' originalName='referenced product' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ScoreForreferencedproduct' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.ImmaterialDamage' originalName='ImmaterialDamage' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition' isAbstract='false'>
    <Description>This concept specializes the Damage concept for all immaterial damages (e.g. slander, libel, business income, loss of use, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.MaterialDamage' originalName='MaterialDamage' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition' isAbstract='false'>
    <Description>This concept is used to manage the description of the material damage for any type of claim.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.PersonDamage' originalName='PersonDamage' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition' isAbstract='false'>
    <Description>This concept specializes the Damage concept. It is the super-type of all damages applicable to a person.</Description>
    <AttributeProperty isSynthetic='true' name='permanentIndicator' originalName='permanentIndicator' assignable='true' index='0'>
      <Description>Indicates whether the disability is permanent or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.CashFlowEstimate' originalName='CashFlowEstimate' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation' isAbstract='false'>
    <Description>Outlook or forecast of all cash receipts (income) and all cash expenditures that are expected to occur during a certain time period. Estimates can be made monthly, bimonthly, or quarterly, and may include core business activities' income and expenditures as well as non-core business activities' items.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.CatastrophicRiskPosition' originalName='CatastrophicRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of the possible loss for a catastrophic risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.ConcentrationRiskPosition' originalName='ConcentrationRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of the possible loss for a concentration risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.CreditRiskPosition' originalName='CreditRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.FinancialRiskPosition' isAbstract='false'>
    <Description>The estimate of the possible loss for a credit risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.CurrencyRiskPosition' originalName='CurrencyRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.FinancialRiskPosition' isAbstract='false'>
    <Description>The estimate of the possible loss for a currency risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.EconomicRiskPosition' originalName='EconomicRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of the possible loss for an economic risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.EquityRiskPosition' originalName='EquityRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.FinancialRiskPosition' isAbstract='false'>
    <Description>The estimate of the possible loss for an equity risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.FinancialRiskPosition' originalName='FinancialRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of the possible loss for a financial risk exposure.</Description>
    <RelationshipProperty isSynthetic='true' name='financialriskaccount' originalName='financial risk account' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.Account</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialRiskPositionForfinancialriskaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.InterestRateRiskPosition' originalName='InterestRateRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.FinancialRiskPosition' isAbstract='false'>
    <Description>The estimate of the possible loss for an interest rate risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.LifetimeValue' originalName='LifetimeValue' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation' isAbstract='false'>
    <Description>An estimate of the future net profit to be obtained during the lifetime of a party. 
 
e.g: Lifetime value of doing business with Anna Wilton, EUR 250,000.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.LiquidityRiskPosition' originalName='LiquidityRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.FinancialRiskPosition' isAbstract='false'>
    <Description>The estimate of the possible loss for a liquidity risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.LossEstimation' originalName='LossEstimation' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation' isAbstract='false'>
    <Description>This concept handles the estimated loss for the damage for all the contract coverages that may be impacted by the loss.</Description>
    <AttributeProperty isSynthetic='true' name='estimateTypeCode' originalName='estimateTypeCode' assignable='true' index='0'>
      <Description>A list of the various types of estimates that can be provided.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.EstimateTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='taxPercentage' originalName='taxPercentage' assignable='true' index='2'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='valuationMethodCode' originalName='valuationMethodCode' assignable='true' index='1'>
      <Description>A code list identifying the method used to determine the item value</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValuationMethodCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='taxAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.MarketRiskPosition' originalName='MarketRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of the possible loss for a market risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.NetWorth' originalName='NetWorth' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation' isAbstract='false'>
    <Description>A point in time assessment of the financial worth (wealth) of a person, organization, or market segment as derived from subtracting the total value of liabilities from the total value of assets. 
 
e.g: Net equity of Deltal Paper Bag Company. 
 
e.g: Personal wealth of Byron Wendell Beaumont III.</Description>
    <AttributeProperty isSynthetic='true' name='liquidityCode' originalName='liquidityCode' assignable='true' index='0'>
      <Description>Identifies whether the net worth of a party consists of fixed assets such as real estate, or consists of liquid assets such as shares and bonds. 
 
e.g: fixed assets 
 
e.g: liquid assets</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.LiquidityCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.OperationalRiskPosition' originalName='OperationalRiskPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of the possible loss for an operational risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' originalName='RiskEstimate' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.FinancialValuation' isAbstract='false'>
    <Description>The estimate of the possible loss for a risk exposure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.SolvencyPosition' originalName='SolvencyPosition' superclassName='org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate' isAbstract='false'>
    <Description>The estimate of a solvency risk exposure obtained from a solvency position assessment that was performed in accordance to a regulatory solvency specification.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ImmaterialDamageSubtypes.LegalProtectionDamage' originalName='LegalProtectionDamage' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.ImmaterialDamage' isAbstract='false'>
    <Description>This concept  specializes the Damage for claims related to legal protection coverage often associated with the character of a party which, if harmed/damaged, may result in financial loss to that party (e.g. personal and advertising injury, slander, libel, etc.).</Description>
    <AttributeProperty isSynthetic='true' name='courtDecision' originalName='courtDecision' assignable='true' index='1'>
      <Description>It indicates the court decision</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='courtName' originalName='courtName' assignable='true' index='0'>
      <Description>It indicates the name of the court</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='courtDecisionDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ImmaterialDamageSubtypes.OperatingLoss' originalName='OperatingLoss' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.ImmaterialDamage' isAbstract='false'>
    <Description>This concept  specializes the Damage for claims related to operating losses of a financial nature (e.g. loss of use, business income, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MaterialDamageSubtypes.AutomobileMaterialDamage' originalName='AutomobileMaterialDamage' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.MaterialDamage' isAbstract='false'>
    <Description>This specialized concept will be used to manage a detailed description of the damage for automobile product types.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MaterialDamageSubtypes.HouseholdMaterialDamage' originalName='HouseholdMaterialDamage' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.MaterialDamage' isAbstract='false'>
    <Description>This specialized concept will be used to manage a detailed description of the damage for household product types.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MaterialDamageSubtypes.OtherMaterialDamage' originalName='OtherMaterialDamage' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.MaterialDamage' isAbstract='false'>
    <Description>This object will store a detailed description of the damage for other product types.
This specialized concept will be used to manage a detailed description of the damage for other product types than automobile or household.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MedicalAssessmentSubtypes.Hospitalization' originalName='Hospitalization' superclassName='org.acord.aim.AssessmentandCondition.MedicalAssessment' isAbstract='false'>
    <Description>This concept represents a hospitalization. It is related to damages suffered by a person, or an activity that occurs at the hospital (e.g. scheduled surgery).

Hospitalization date and discharge date utilize general start and end dates related to super type Activity.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MedicalAssessmentSubtypes.MedicallExamination' originalName='MedicallExamination' superclassName='org.acord.aim.AssessmentandCondition.MedicalAssessment' isAbstract='false'>
    <Description>The medical examination of an applicant for insurance or a claimant by a qualified physician who acts on behalf of the insurer. At the time of purchasing life insurance, equity-linked life insurance or disability insurance, a medical examination is required. Normally answering a number of medical questions is sufficient. Not required is the medical examination in case of pension insurance, equity-tied pension insurance and immediate pension.</Description>
    <AttributeProperty isSynthetic='true' name='medicalExamTypeCode' originalName='medicalExamTypeCode' assignable='true' index='0'>
      <Description>Defines the type of medical examination.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.MedicalExamTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='symptoms' originalName='symptoms' assignable='true' index='1'>
      <Description>Main complaints and/or symptoms</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='compositionofmedicaltest' originalName='composition of medical test' assignable='true' index='5' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.MedicalAssessmentSubtypes.MedicalTest</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicallExaminationForcompositionofmedicaltest' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='medicaldiagnosis' originalName='medical diagnosis' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.MedicalCondition</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicallExaminationFormedicaldiagnosis' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='MedicalExaminationOnHealthInstitution' originalName='MedicalExamination On HealthInstitution' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.OrganizationSubtypes.HealthInstitution</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicallExaminationForMedicalExaminationOnHealthInstitution' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='recommendedmedicaltreatment' originalName='recommended medical treatment' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.MedicalTreatment</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicallExaminationForrecommendedmedicaltreatment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.MedicalAssessmentSubtypes.MedicalTest' originalName='MedicalTest' superclassName='org.acord.aim.AssessmentandCondition.MedicalAssessment' isAbstract='false'>
    <Description>A specific medical procedure conducted as part of a Medical Examination.

e.g: Oxygen saturation
e.g: Pregnancy test
e.g: Blood Pressure
e.g: Height and Weight
e.g: Body Temp</Description>
    <AttributeProperty isSynthetic='true' name='medicalTestName' originalName='medicalTestName' assignable='true' index='0'>
      <Description>Name of the medical test</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='result' originalName='result' assignable='true' index='1'>
      <Description>Described the official conclusion of the test performed.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lastAcceptableMedicalTestDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='medicalTestResultDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.PersonDamageSubtypes.AestheticLoss' originalName='AestheticLoss' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.PersonDamage' isAbstract='false'>
    <Description>This represents an aesthetic loss (e.g. visible scar, damage to skin, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.PersonDamageSubtypes.BodilyInjury' originalName='BodilyInjury' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.PersonDamage' isAbstract='false'>
    <Description>This concept  specializes the PersonDamage concept. It will be used to manage a detailed description of the bodily injuries whatever the product type is.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.PersonDamageSubtypes.Disability' originalName='Disability' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.PersonDamage' isAbstract='false'>
    <Description>This represents a person's disability (e.g. paralysis, blindness, etc.).</Description>
    <AttributeProperty isSynthetic='true' name='disabilityRate' originalName='disabilityRate' assignable='true' index='0'>
      <Description>Indicates the disability rate</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='hospitalizationIndicator' originalName='hospitalizationIndicator' assignable='true' index='3'>
      <Description>Indicates if an hospitalization was necessary and done.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='sickLeaveIndicator' originalName='sickLeaveIndicator' assignable='true' index='1'>
      <Description>It indicates if work has been stopped for the insured</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='sickLeaveType' originalName='sickLeaveType' assignable='true' index='2'>
      <Description>Indicates the type of sick leave</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='sickLeaveTimePeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.PersonDamageSubtypes.OpportunityLoss' originalName='OpportunityLoss' superclassName='org.acord.aim.AssessmentandCondition.DamageConditionSubtypes.PersonDamage' isAbstract='false'>
    <Description>This represents a damage to a person that results in a loss of potential opportunities (e.g. unable to gain desired employment, unable to pursue desired hobby, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.CatastrophicRiskExposure' originalName='CatastrophicRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure arising from external events that are of great magnitude, and that would cause partial or complete discontinuation of the operations of the enterprise.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.ConcentrationRiskExposure' originalName='ConcentrationRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure arising from concentration of financial services agreements in one particular market segment, geographical area, financial services product or product group.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.CreditRiskExposure' originalName='CreditRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.FinancialRiskExposure' isAbstract='false'>
    <Description>A risk exposure arising from other parties owing the institution money and their changing ability, or willingness, to make payment.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.CurrencyRiskExposure' originalName='CurrencyRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.FinancialRiskExposure' isAbstract='false'>
    <Description>A risk exposure arising from currency holdings, and the variation in rates of exchange and hence the value of those holdings.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.EconomicRiskExposure' originalName='EconomicRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure arising from the ability of a project's output to make a return which covers the investment made in that project.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.EquityRiskExposure' originalName='EquityRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.FinancialRiskExposure' isAbstract='false'>
    <Description>A risk exposure arising from volatility of equity prices.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.FinancialRiskExposure' originalName='FinancialRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure which is based in the institutions money holdings or the manner in which it is using those money holdings. 
It identifies that the holdings in an account are exposed to potential losses of a kind that is identified in a peril category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.InterestRateRiskExposure' originalName='InterestRateRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.FinancialRiskExposure' isAbstract='false'>
    <Description>A risk exposure which arises from changes in interest rates.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.LiquidityRiskExposure' originalName='LiquidityRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.FinancialRiskExposure' isAbstract='false'>
    <Description>A risk exposure arising as a consequence of a timing mismatch between asset and liability cash flow patterns.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.MarketRiskExposure' originalName='MarketRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure which arises from changes in the market price of equities, funds, commodities and alike.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.OperationalRiskExposure' originalName='OperationalRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure arising as a consequence of the institution's processes being badly designed, badly documented, badly executed or poorly managed.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' originalName='RiskExposure' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>An exposure to a risk; the possibility, or likelihood, of a damage or a loss to occur. 
It identifies that a business model object, or a set of business model objects, is exposed to a peril category.</Description>
    <RelationshipProperty isSynthetic='true' name='amount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='exposurePeriod' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='riskexposureconcept' originalName='risk exposure concept' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.InformationModelObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='RiskExposureForriskexposureconcept' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='riskexposureestimate' originalName='risk exposure estimate' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.FinancialValuationSubtypes.RiskEstimate</TypeName>
      <RelationshipProperty isSynthetic='true' name='RiskExposureForriskexposureestimate' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='riskexposureperil' originalName='risk exposure peril' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.CommonClasses.Peril</TypeName>
      <RelationshipProperty isSynthetic='true' name='RiskExposureForriskexposureperil' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='riskexposureriskagreement' originalName='risk exposure risk agreement' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.RiskAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='RiskExposureForriskexposureriskagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.RiskExposure.SolvencyRiskExposure' originalName='SolvencyRiskExposure' superclassName='org.acord.aim.AssessmentandCondition.RiskExposure.RiskExposure' isAbstract='false'>
    <Description>A risk exposure that describes the possibility that an insurance undertaking may become insolvent, arising out from a combination of financial risk exposures, market risk exposures, concentration risk exposures, catastrophic risk exposures and operational risk exposures that may impact the financial services agreements which the insurance company has underwritten and its assets and liabilities.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.ActivitySpecificationRiskScore' originalName='ActivitySpecificationRiskScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>Assessment results from an assessment of specific risks for a type of activity (activity specification). 
 
e.g: Nuclear industry has a high risk score. 
 
e.g: Parachute jumping has a high risk score.</Description>
    <RelationshipProperty isSynthetic='true' name='probabilityforactivityresponsibilityinlossevent' originalName='probability for activity responsibility in loss event' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.LossEventCategory</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivitySpecificationRiskScoreForprobabilityforactivityresponsibilityinlossevent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.CatastrophicRiskFactorScore' originalName='CatastrophicRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to catastrophic risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.CommunicationEffectivenessScore' originalName='CommunicationEffectivenessScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A rating of the effectiveness of a communication. 
 
e.g: Communication preference mismatch: negative account balance printed in red, color not readable by customer. 
 
e.g: Wrong amounts paid following receipt of bill</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>Rating indicating the effectiveness of the communication. 
 
e.g: error in response 
 
e.g: no error in response</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.CommunicationEffectivenessRatingCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='communicationassessment' originalName='communication assessment' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Communication</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationEffectivenessScoreForcommunicationassessment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.ConcentrationRiskFactorScore' originalName='ConcentrationRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to concentration risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.CreditRating' originalName='CreditRating' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.FinancialRiskFactorScore' isAbstract='false'>
    <Description>A credit rating typically provided by a financial institution or rating service, indicating the likelihood that a particular party will be able to meet financial commitments. The likelihood is assessed based on past behavior and current financial position.

Each credit score or rating is member of a credit rating category defined by a particular rating code, which is assignable by a rating service, via category membership. 
 
e.g: For a person, Mary Wilson's cash only credit rating. 
 
e.g: For an organization Griploul Inc's AAA credit rating.

e.g. For a person, Jane Doe's credit score.</Description>
    <AttributeProperty isSynthetic='true' name='creditHoldingsIndicator' originalName='creditHoldingsIndicator' assignable='true' index='0'>
      <Description>Indicates whether or not the customer holds credit at assessment time.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='litigationIndicator' originalName='litigationIndicator' assignable='true' index='1'>
      <Description>Indicates whether or not the customer is or ever was directly involved in a dispute or litigation.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentIndicator' originalName='paymentIndicator' assignable='true' index='2'>
      <Description>Indicates whether or not the customer usually pays on time.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.CurrencyRiskFactorScore' originalName='CurrencyRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.FinancialRiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to currency risk.</Description>
    <AttributeProperty isSynthetic='true' name='averageDailyVariancePercentage' originalName='averageDailyVariancePercentage' assignable='true' index='1'>
      <Description>Volatility of the currency exchange rate measured as the average of the daily variation in the exchange rate.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='highestExchangeRate' originalName='highestExchangeRate' assignable='true' index='2'>
      <Description>Highest exchange rate reached in previous period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lowestExchangeRate' originalName='lowestExchangeRate' assignable='true' index='3'>
      <Description>Lowest exchange rate reached in previous period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='volatilityPercentage' originalName='volatilityPercentage' assignable='true' index='0'>
      <Description>The proportional variation of the currency exchange rate versus the reference currency, as compared to the previous period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.DemographicScore' originalName='DemographicScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>Assessment results from a demographic analysis of the population of an area. The actual list of attributes is very dependent on the information provider. The attributes listed here are only examples of demographic information generally available on the market.</Description>
    <AttributeProperty isSynthetic='true' name='averageAge' originalName='averageAge' assignable='true' index='2'>
      <Description>The average age of residents.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='averageBuildingAge' originalName='averageBuildingAge' assignable='true' index='3'>
      <Description>The average age of buildings.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='averageFamilySize' originalName='averageFamilySize' assignable='true' index='4'>
      <Description>The average count of members in each family.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='averageHouseholdDwellingSize' originalName='averageHouseholdDwellingSize' assignable='true' index='5'>
      <Description>The average floor space of dwellings.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='averageInHouseholdSize' originalName='averageInHouseholdSize' assignable='true' index='6'>
      <Description>The average count of members in each household.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='blueCollarPercentage' originalName='blueCollarPercentage' assignable='true' index='8'>
      <Description>The percentage of the workforce resident in the geographic area that are employed in manual occupations.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='buildingDegreeCode' originalName='buildingDegreeCode' assignable='true' index='1'>
      <Description>Code indicating the density of buildings and population in an occurrence of place. 
 
e.g: Exurban 
 
e.g: Rural 
 
e.g: Suburban 
 
e.g: Urban</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.BuildingDegreeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='buildingDesignStyleCode' originalName='buildingDesignStyleCode' assignable='true' index='27'>
      <Description>The typical design style of the buildings.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.BuildingDesignStyleCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='degreeOnlyPercentage' originalName='degreeOnlyPercentage' assignable='true' index='10'>
      <Description>The percentage of adults resident in the geographic area that have a degree but no higher level academic qualification.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='dwellingOwnershipPercentage' originalName='dwellingOwnershipPercentage' assignable='true' index='7'>
      <Description>The percentage of dwellings that are owner-occupied.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='familyHouseholdsPercentage' originalName='familyHouseholdsPercentage' assignable='true' index='11'>
      <Description>The percentage of households resident in the geographic area that include a couple, of whom one is designated as the head of the household, as well as at least one child of the couple.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='highSchoolDiplomaOnlyPercentage' originalName='highSchoolDiplomaOnlyPercentage' assignable='true' index='13'>
      <Description>The percentage of adults resident in the geographic area that have second level / high school academic qualifications only.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='householdsLowIncomePercentage' originalName='householdsLowIncomePercentage' assignable='true' index='12'>
      <Description>The percentage of households resident in the geographic area that have a total net of tax income of less than a certain threshold amount.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='householdsWithChildrenPercentage' originalName='householdsWithChildrenPercentage' assignable='true' index='14'>
      <Description>The percentage of households resident in the geographic area that include at least one dependent child.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='housingUnitSizeDistribution' originalName='housingUnitSizeDistribution' assignable='true' index='15'>
      <Description>The statistic distribution of the housing units located in the geographic area that are part of a single physical structure.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='housingUnitsOwnerOccupiedPercentage' originalName='housingUnitsOwnerOccupiedPercentage' assignable='true' index='16'>
      <Description>The percentage of housing units located in the geographic area that are owned by one of their residents.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='housingUnitsSingleUnitDetachedPercentage' originalName='housingUnitsSingleUnitDetachedPercentage' assignable='true' index='17'>
      <Description>The percentage of housing units located in the geographic area that are designed to accommodate a single household and are not physically attached to any other housing unit.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='noCollegeDegreePercentage' originalName='noCollegeDegreePercentage' assignable='true' index='9'>
      <Description>The percentage of adults resident in the geographic area that have a university level academic qualification other than a degree.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='noHighSchoolDiplomaPercentage' originalName='noHighSchoolDiplomaPercentage' assignable='true' index='18'>
      <Description>The percentage of adults resident in the geographic area that have no second level / high school academic qualifications</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='populationDensityCode' originalName='populationDensityCode' assignable='true' index='24'>
      <Description>The classification of places by their density of human population. 
 
e.g: City area 
 
e.g: Not populated 
 
e.g: Rural area</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.PopulationDensityCategoryCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='professionalEmploymentPercentage' originalName='professionalEmploymentPercentage' assignable='true' index='25'>
      <Description>The percentage of adult residents whose occupation is classified professional, for example, lawyers and doctors.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='professionalWhiteCollarPercentage' originalName='professionalWhiteCollarPercentage' assignable='true' index='19'>
      <Description>The percentage of the workforce resident in the geographic area that are employed in professional occupations.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='purchasingPowerCode' originalName='purchasingPowerCode' assignable='true' index='0'>
      <Description>Code indicating the rating of the relative spending power of the inhabitants of a particular area represented by place, as for example, the purchasing power of inner city Paris residents. 
Typically, this type of information is purchased from an information broker or other external source. 

e.g: Affluent 

e.g: Government assistance 

e.g: Low income 

e.g: Upper middle income</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.PurchasingPowerCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='sociologicalStructure' originalName='sociologicalStructure' assignable='true' index='26'>
      <Description>The predominant socio-economic level of residents.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='suburbanPercentage' originalName='suburbanPercentage' assignable='true' index='20'>
      <Description>The percentage of the geographic area that is classified as suburban.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='unmarriedHouseholdsPercentage' originalName='unmarriedHouseholdsPercentage' assignable='true' index='21'>
      <Description>The percentage of households resident in the geographic area that do not include a married couple.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='urbanPercentage' originalName='urbanPercentage' assignable='true' index='22'>
      <Description>The percentage of the geographic area that is classified as urban.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='whiteCollarPercentage' originalName='whiteCollarPercentage' assignable='true' index='23'>
      <Description>The percentage of the workforce resident in the geographic area that are employed in non-manual office-based occupations.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='mainLanguageCode' assignable='true' index='32' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='medianIncomeAmount' assignable='true' index='28' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='medianMonthlyRentAmount' assignable='true' index='29' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='medianPropertyValueAmount' assignable='true' index='30' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='populationDensityMeasurement' assignable='true' index='31' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.EconomicRiskFactorScore' originalName='EconomicRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to economic risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.EquityRiskFactorScore' originalName='EquityRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.FinancialRiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to equity risk.</Description>
    <RelationshipProperty isSynthetic='true' name='equityriskfactorassetassociation' originalName='equity risk factor asset association' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.FinancialAsset.FinancialAsset</TypeName>
      <RelationshipProperty isSynthetic='true' name='EquityRiskFactorScoreForequityriskfactorassetassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.FinancialRiskFactorScore' originalName='FinancialRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to financial risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.HealthInstitutionEvaluation' originalName='HealthInstitutionEvaluation' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>This concept provides details on the evaluation conducted by a Health Institution or a Medical Unit.</Description>
    <AttributeProperty isSynthetic='true' name='evaluationScore' originalName='evaluationScore' assignable='true' index='1'>
      <Description>The resulting score of the evaluation.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='healthInstitutionEvaluationDescription' originalName='healthInstitutionEvaluationDescription' assignable='true' index='0'>
      <Description>A description of the evaluation conducted by the health institution.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='evaluationDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.InterestRateRiskFactorScore' originalName='InterestRateRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.FinancialRiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to interest rate risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.LiquidityRiskFactorScore' originalName='LiquidityRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.FinancialRiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to liquidity risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.LoyaltyScore' originalName='LoyaltyScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A rating of the tendency of a  party to remain loyal to a company, indicating the likelihood that the party may or may not purchase from another company. 
 
e.g: High loyalty score to the Insurance company for policyholder Marc Durand.</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>The tendency of a party to remain loyal to a company, indicating the likelihood that a party may or may not purchase from another company. 
 
e.g: High 
 
e.g: Low 
 
e.g: Medium</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.LoyaltyRatingCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.MarketRiskFactorScore' originalName='MarketRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to market risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.MeritRating' originalName='MeritRating' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A rating of an insured with respect to its claims history. It serves as a basis for making coverage premium adjustments. 
 
e.g: Bonus-Malus</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.OperationalRiskFactorScore' originalName='OperationalRiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to operational risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.PaymentPerformanceScore' originalName='PaymentPerformanceScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A rating of a party for the way it fulfill its payment obligations towards the modeled organization, based on the party's payment history.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.PlaceRiskScore' originalName='PlaceRiskScore' superclassName='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' isAbstract='false'>
    <Description>Assessment results from an assessment of specific risks for a place. 
Note: The link to place is supported by the relationship place assessment.</Description>
    <RelationshipProperty isSynthetic='true' name='probabilityforactivityresponsibility' originalName='probability for activity responsibility' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Event.LossEvent</TypeName>
      <RelationshipProperty isSynthetic='true' name='PlaceRiskScoreForprobabilityforactivityresponsibility' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.PricingAttitude' originalName='PricingAttitude' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A representation of the pricing attitude, such as consumer attitude or provider attitude. 
 
e.g: Doctor Luigi has an extensive defensive medicine attitude (provider attitude). 
 
e.g: John Doe is highly price-sensitive (consumer attitude).</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>The representation of the consumer attitude or orientation of a party. 
 
e.g: High price-sensitivity 
 
e.g: Low price-sensitivity</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.AttitudeRatingCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.ProfitabilityScore' originalName='ProfitabilityScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A measure of the relative profitability of a person, organization, or market segment.  This can also be used to allocate a profitability index to a marketable product or product group. 
 
e.g: The profitability of the Execulife Universal Life product. 
 
e.g: The profitability of the Newly Married with No Children market segment.</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>The assessment of the relative profitability of a person, organization, market segment, marketable product or product group. 
 
e.g: 15% net gain 
 
e.g: 27% net loss 
 
e.g: High 
 
e.g: Loss 
 
e.g: Low 
 
e.g: Marginal</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.ProfitabilityRatingCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.PropensityScore' originalName='PropensityScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>An assessed likelihood or probability of a party taking a particular course of action. Such a score is typically derived from a mathematical model of consumer behavior and is used to support Customer Relationship Management processes.

 The following are typical types of propensity scores:

An Acquisition score indicates the probability of purchasing a particular product or group of products. 

A Cross-sell score indicates the probability of purchasing products not currently held with a particular provider, for example buying home contents insurance from an insurance company with which term life insurance is already held. 

An Up-sell score indicates the probability of upgrading a currently held product, for example, increasing the sum assured (face amount) under a life policy. 

A Retention score indicates the probability of a customer terminating their relationship with the modeled organization in whole or in part, for example surrendering an endowment policy. 
 
e.g: The propensity of Jane Browning to purchase a retirement annuity. 
 
e.g: The propensity of new home-buyers to purchase mortgage term life insurance.</Description>
    <AttributeProperty isSynthetic='true' name='predictiveModelCode' originalName='predictiveModelCode' assignable='true' index='0'>
      <Description>Predictive model used to perform the evaluation of the propensity scores. 
 
e.g: Attrition 
 
e.g: Cross sell (Life to Non-life) 
 
e.g: Cross sell (Non life to Health) 
 
e.g: Customer retention 
 
e.g: Up sell (Fire house coverage to full house coverage)

 e.g: Winback</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.PredictiveModelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToBuyPercentage' originalName='propensityToBuyPercentage' assignable='true' index='1'>
      <Description>The probability that a party will buy when a proposition is made. 
 
e.g: 40%</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToCancelPercentage' originalName='propensityToCancelPercentage' assignable='true' index='2'>
      <Description>The probability that a party will terminate any insurance policy before its renewal. 
 
e.g: 15%</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToClaimCode' originalName='propensityToClaimCode' assignable='true' index='3'>
      <Description>Code indicating the frequency at which a party will make claims against any of the party's insurance policy. 
 
e.g: annually</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToEnquirePercentage' originalName='propensityToEnquirePercentage' assignable='true' index='4'>
      <Description>The probability that a party will approach a company on the party's own initiative. 
 
e.g: 10%</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToLapsePercentage' originalName='propensityToLapsePercentage' assignable='true' index='5'>
      <Description>The probability that a party will allow any insurance policy to lapse at their next renewal. 
 
e.g: 10%</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToRespondPercentage' originalName='propensityToRespondPercentage' assignable='true' index='6'>
      <Description>The probability that a party will respond when contacted as part of a campaign. 
 
e.g: 80%</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='propensityToUpgradeCode' originalName='propensityToUpgradeCode' assignable='true' index='7'>
      <Description>Code indicating the frequency at which a party will upgrade any insurance policy. 
 
e.g: annually</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RelationshipStage' originalName='RelationshipStage' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A point in the cycle of a party's customer relationship with the modeled organization based on a customer life-cycle model.
 
e.g: Courtesy: Courteous treatment of a business partner. 
 
e.g: Reciprocity: Granting reciprocity to a reinsurer for reinsurance requirements. 
 
e.g: Rui Ferreira needs Intensive care.</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>The stage of the relationship as selected from the stages defined within the Customer Relationship Management (CRM) model being used. 
 
e.g: Account Management. 
 
e.g: Divorce. 
 
e.g: Get to know. 
 
e.g: Intensive Care. 
 
e.g: Targeting. 
 
e.g: Welcoming. 

e.g: Winback</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.RelationshipStageRatingCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RiskFactorScore' originalName='RiskFactorScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>The rating of characteristics that have an impact on the likelihood of loss to occur. 
The rating of factors that contribute to risk.</Description>
    <AttributeProperty isSynthetic='true' name='riskPercentage' originalName='riskPercentage' assignable='true' index='0'>
      <Description>Consolidated rating for this risk factor score expressed as a percentage.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='estimatedriskfactor' originalName='estimated risk factor' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.RiskAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='RiskFactorScoreForestimatedriskfactor' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.RoadVehicleScore' originalName='RoadVehicleScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>The assessment result resulting from the assessment of a particular characteristic, or a set of characteristics, of a road vehicle. 
 
e.g: The assessment of the usage of the car of John Doe produces results : recorded mileage : 25.000 km, annual mileage : 15.000 km , daily mileage : 41 km.</Description>
    <RelationshipProperty isSynthetic='true' name='annualDistanceDrivenMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='estimatedDailyDistanceDrivenMeasurement' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='recordedDistanceDrivenMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.SatisfactionScore' originalName='SatisfactionScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A rating of a customer's satisfaction with the overall modeled organization or with specific insurance policies or marketable products. 
 
e.g: Mary Smith is satisfied.</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>The assessment of a party's overall satisfaction with the financial services company or a product or product group. 
 
e.g: Not satisfied. 
 
e.g: Very satisfied.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.SatisfactionRatingCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.ShipScore' originalName='ShipScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>The assessment result resulting from the assessment of a particular characteristic, or a set of characteristics, of a ship.</Description>
    <RelationshipProperty isSynthetic='true' name='annualNauticalMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='dailyNauticalMeasurement' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='recordedNauticalDistanceCoveredMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.StructureScore' originalName='StructureScore' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>The assessment result resulting from the assessment of a structure. A particular characteristic pertaining to the structure, or a set of  characteristics, is evaluated and expressed as percentages or discrete values. 
 
e.g: The assessment of the compliance of a building to fire protection criteria.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.AssessmentandCondition.ScoreSubtypes.Supervision' originalName='Supervision' superclassName='org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Score' isAbstract='false'>
    <Description>A rating of the need for special attention that would be required for an agreement.  For example, the need to look out for large cash transactions in a deposit account agreement.</Description>
    <AttributeProperty isSynthetic='true' name='ratingCode' originalName='ratingCode' assignable='true' index='0'>
      <Description>A rating of the need for special attention that would be required for an agreement. 
 
e.g: High need to look out for large cash transactions in a deposit account agreement.</Description>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentandConditionCodeLists.SupervisionRatingCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.AccountingCategory' originalName='AccountingCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies an accounting category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ActivityCategory' originalName='ActivityCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies an activity category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.AssessmentResultCategory' originalName='AssessmentResultCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies an assessment result category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.AssessmentScenarioCategory' originalName='AssessmentScenarioCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies an assessment scenario category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.AssetCategory' originalName='AssetCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies an asset category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.CatastropheCategory' originalName='CatastropheCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>A cataclysmic, disastrous incident, a violent usually destructive natural occurrence.
By extension, can be any natural or man-made incident, including terrorism, which results in extraordinary levels of mass casualties, damage, or disruption severely affecting the population, infrastructure, environment, economy, national morale, and/or government functions.</Description>
    <AttributeProperty isSynthetic='true' name='officialDeclarationSource' originalName='officialDeclarationSource' assignable='true' index='1'>
      <Description>Official source responsible for the declaration of the catastrophe.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='officialDeclaredIndicator' originalName='officialDeclaredIndicator' assignable='true' index='0'>
      <Description>Official declaration of the catastrophe by an appropriate source.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='CatastropheCategoryOnPlace' originalName='CatastropheCategory On Place' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='CatastropheCategoryForCatastropheCategoryOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='officialDeclarationDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.Category' originalName='Category' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>Category is used to create simple or complex orderings at a high level and is orthogonal to the model (it's associated to InformationModelObject, the common super-type for everything).

Between Category and CategoryScheme, you can "tag" an object (or series of objects) as "high risk," or "marketable" (for example).

A class in the model can belong to multiple categories and can change category over time.</Description>
    <AttributeProperty isSynthetic='true' name='categoryDescription' originalName='categoryDescription' assignable='true' index='1'>
      <Description>A free-text statement used to explain the meaning of the category.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='categoryName' originalName='categoryName' assignable='true' index='0'>
      <Description>The word or phrase that identifies (but not uniquely) the category.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='maximumCount' originalName='maximumCount' assignable='true' index='2'>
      <Description>The maximum number of members at any point in time.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='availablePeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='categoryofscheme' originalName='category of scheme' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.CategoryScheme</TypeName>
      <RelationshipProperty isSynthetic='true' name='CategoryForcategoryofscheme' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='refreshDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='subcategorization' originalName='subcategorization' assignable='true' index='5' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.CategoryScheme</TypeName>
      <RelationshipProperty isSynthetic='true' name='CategoryForsubcategorization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.CategoryMembership' originalName='CategoryMembership' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept establishes a link between any concept in the model and a related category.</Description>
    <RelationshipProperty isSynthetic='true' name='CategoryMembershipOnCategory' originalName='CategoryMembership On Category' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.Category</TypeName>
      <RelationshipProperty isSynthetic='true' name='CategoryMembershipForCategoryMembershipOnCategory' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CategoryMembershipOnInformationModelObject' originalName='CategoryMembership On InformationModelObject' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.InformationModelObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='CategoryMembershipForCategoryMembershipOnInformationModelObject' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.CategoryScheme' originalName='CategoryScheme' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The Category Scheme mechanism allows a hierarchical representation of categories to for multiple layers of description of insurance objects.

In other words, a category can be further partitioned into several subcategories according to different criteria, each of which is represented by a category scheme. 

A member of the parent category may belong to multiple subcategories of different category schemes. e.g., Client status.</Description>
    <AttributeProperty isSynthetic='true' name='categoryDescription' originalName='categoryDescription' assignable='true' index='1'>
      <Description>A free-text statement used to explain the meaning of the category scheme.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='categorySchemeName' originalName='categorySchemeName' assignable='true' index='0'>
      <Description>The word or phrase that identifies (but not uniquely) the category scheme.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='exhaustiveIndicator' originalName='exhaustiveIndicator' assignable='true' index='2'>
      <Description>Indicates whether the subcategories exhaustively partition the scope of the category scheme (the parent category or the type used as scope of categorization). When a category scheme is defined as exhaustive, every member of the scope must belong to at least one subcategory of the category scheme.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='overlappingIndicator' originalName='overlappingIndicator' assignable='true' index='3'>
      <Description>Indicates whether a category can belong to more than one subcategory of the category scheme. When a category scheme is defined as overlapping, it can belong to more than one of the scheme's sub-categories.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ClaimGroupCategory' originalName='ClaimGroupCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept allows to define groups of claims.
The purpose is often to have a global vision of linked claims (and follow a total cost for the group).</Description>
    <RelationshipProperty isSynthetic='true' name='claimGroupCostAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ClaimSizeCategory' originalName='ClaimSizeCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a claim size category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ClassOfClaimCategory' originalName='ClassOfClaimCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a class of claim category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ConditionCategory' originalName='ConditionCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a condition category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.CreditRatingCategory' originalName='CreditRatingCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a credit rating category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.CriminalEventCategory' originalName='CriminalEventCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>An event considered an intentional breaking of the law (e.g.,burglary, car-jacking, sabotage, theft, vandalism).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.DocumentCategory' originalName='DocumentCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a category of document (ex: General conditions)</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.EmploymentCategory' originalName='EmploymentCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies an employment category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.FundCategory' originalName='FundCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a fund category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.LossEventCategory' originalName='LossEventCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a loss event category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.MarketSegment' originalName='MarketSegment' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a market segment category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.PartyMatchingEngineCategory' originalName='PartyMatchingEngineCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a party matching engine category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.PopulationCategory' originalName='PopulationCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept states a group of persons, in case there is a need to define a population itself.
Use PopulationProfile to define an insured population and qualify its profile (see PopulationProfile).</Description>
    <AttributeProperty isSynthetic='true' name='populationNature' originalName='populationNature' assignable='true' index='0'>
      <Description>This enables to define a codification for the population category.

e.g. socio-professional, geographic, national, etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PopulationCategoryOnCountry' originalName='PopulationCategory On Country' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Country</TypeName>
      <RelationshipProperty isSynthetic='true' name='PopulationCategoryForPopulationCategoryOnCountry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ProductGroup' originalName='ProductGroup' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a product group category.</Description>
    <AttributeProperty isSynthetic='true' name='lineOfBusiness' originalName='lineOfBusiness' assignable='true' index='0'>
      <Description>This free form attribute describes the line of business this product group is designed for.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.RoleCategory' originalName='RoleCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>A RoleCategory allows a finer grained delineation of roles to recognize the difference between the broad types of Roles that exist.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Category.ServiceProviderCategory' originalName='ServiceProviderCategory' superclassName='org.acord.aim.Category.Category' isAbstract='false'>
    <Description>This concept specifies a service provider category.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.Claim' originalName='Claim' superclassName='org.acord.aim.Claim.ClaimBase' isAbstract='false'>
    <Description>A claim is a demand by a party to obtain money or enforcement of a right or benefit.

A claim can be related to an agreement, a loss event, and/or an assessment.

If a loss event occurs, a claim may be created. One event may generate several claims, if several contracts are impacted.

If an assessment occurs, a claim may be created. For example, a person may have a medical assessment (e.g. dental examination) that leads to a claim.

Claims can be associated with other claims, each of them being related to an agreement and possibly many claim coverages.</Description>
    <AttributeProperty isSynthetic='true' name='claimDecisionReasonDescription' originalName='claimDecisionReasonDescription' assignable='true' index='3'>
      <Description>This is the reason describing the claim decision when assessing this claim.

e.g: A decision may be taken to grant coverage to a loyal customer, even if the coverage did not exist.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimIdentifier' originalName='claimIdentifier' assignable='true' index='1'>
      <Description>The unique identifier assigned to the claim. This is commonly known as the "claim number" and may include prefixes which identify a claims office, or suffixes that break occurrences down into separate claims, layers, or sub files.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimStatusCode' originalName='claimStatusCode' assignable='true' index='0'>
      <Description>Gives the status of a Claim.</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.ClaimStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='coveragePercentage' originalName='coveragePercentage' assignable='true' index='5'>
      <Description>Indicates whether or not, and to which extent, the insurance policies of the claimant cover the loss incurred in the claim. The information about the claim and its circumstances will be validated against the insurance policy and product specification information to verify whether the claim is covered or not and to which extent: not covered (0%), fully covered (100%) or partially covered (any other%). e.g: Value of the house at time of providing coverage was set at 200T Euro. At time of loss, the value appears to be 250T Euro. The coverage percentage is set to 80%. e.g: 60% (where the house is only covered for 60% of its value)</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='insuredResponsibilityPercentage' originalName='insuredResponsibilityPercentage' assignable='true' index='2'>
      <Description>Indicates the responsibility percentage of the insured party with regards to the claim. This is also known as the percentage of fault as related to responsibility concerning claim settlement.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='overlappingCoverageIndicator' originalName='overlappingCoverageIndicator' assignable='true' index='4'>
      <Description>Indicates that the claimed losses are covered by more than one insurance policy.

If this indicator is set to true, there should be a related claim associated with this claim.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimassessmentactivity' originalName='claim assessment activity' assignable='true' index='10' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.AssessmentActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimForclaimassessmentactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimcoveragecomposition' originalName='claim coverage composition' assignable='true' index='7' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimCoverage</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimForclaimcoveragecomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimlossoccurrence' originalName='claim loss occurrence' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.LossOccurrence.LossOccurrence</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimForclaimlossoccurrence' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimrelationship' originalName='claim relationship' assignable='true' index='8' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimForclaimrelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedagreement' originalName='related agreement' assignable='true' index='9' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimForrelatedagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimBase' originalName='ClaimBase' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This abstract super-type contains common attributes shared by all high-level concepts within the claim package.</Description>
    <AttributeProperty isSynthetic='true' name='statusChangeReason' originalName='statusChangeReason' assignable='true' index='0'>
      <Description>This is the reason describing the change in status of the claim, claim coverage, or claim grouping.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimPeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='deductibleAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='indemnityPortionAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='physicalobjectinclaim' originalName='physical object in claim' assignable='true' index='10' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimBaseForphysicalobjectinclaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedclaimnote' originalName='related claim note' assignable='true' index='6' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.ClaimNote</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimBaseForrelatedclaimnote' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedclaimreserve' originalName='related claim reserve' assignable='true' index='9' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimReserveEntryDetail.ClaimReserve</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimBaseForrelatedclaimreserve' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedclaimreserves' originalName='related claim reserves' assignable='true' index='8' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimReserveEntryDetail.ClaimReserve</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimBaseForrelatedclaimreserves' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='replacementClaim' originalName='replacementClaim' assignable='true' index='7' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimBase</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimBaseForreplacementClaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalCostAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimCoverage' originalName='ClaimCoverage' superclassName='org.acord.aim.Claim.ClaimBase' isAbstract='false'>
    <Description>A claim coverage corresponds to a coverage involved in a claim as well as the assessment of coverage and the status of the claim coverage.

e.g. When a claim occurs, the general sequence involves:
(1) associating the claim to the related agreement/insurance policy
(2) determining whether the agreement includes coverage that corresponds to the damage
(3) determining whether the damage is covered by the applicable coverage in a manner that will result in benefits being paid by the insurer (e.g.the damage may be covered, but falls below the applicable deductible amount)
(4) managing the applicable coverage as a "claim coverage" to which amounts can be managed involving limits and/or deductibles, as well as amounts paid or reserved and to which a status may be applied.</Description>
    <AttributeProperty isSynthetic='true' name='claimCoverageDecisionReasonDescription' originalName='claimCoverageDecisionReasonDescription' assignable='true' index='2'>
      <Description>This is the reason describing the claim coverage decision.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimCoverageDecisionTypeCode' originalName='claimCoverageDecisionTypeCode' assignable='true' index='1'>
      <Description>Indicates the coverage decision involving coverage for a specific claim coverage (e.g. covered, denied). This has an over-arching significance with regards to coverage, not the status of the claim coverage.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ClaimDecisionCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimCoverageStatusCode' originalName='claimCoverageStatusCode' assignable='true' index='0'>
      <Description>Gives the status of a ClaimCoverage.</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.ClaimStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='coinsuranceApplicableIndicator' originalName='coinsuranceApplicableIndicator' assignable='true' index='3'>
      <Description>Flag which indicates if coinsurance is applicable for the damage.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='deductibleApplicableIndicator' originalName='deductibleApplicableIndicator' assignable='true' index='5'>
      <Description>This attribute determines if the deductible is applicable. It depends on the product types and the level of liability.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceApplicableIndicator' originalName='reinsuranceApplicableIndicator' assignable='true' index='4'>
      <Description>Flag which indicates if reinsurance is applicable for damage</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimcoverageelement' originalName='claim coverage element' assignable='true' index='8' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimElement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimCoverageForclaimcoverageelement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialbreakdowncomposition' originalName='financial breakdown composition' assignable='true' index='7' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyOut</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimCoverageForfinancialbreakdowncomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusModificationDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimElement' originalName='ClaimElement' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept represents a claim coverage element.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimGrouping' originalName='ClaimGrouping' superclassName='org.acord.aim.Claim.ClaimBase' isAbstract='false'>
    <Description>A logical grouping of claim components. A claim grouping can be decomposed directly in elementary claims or in further claim folders. 
 
e.g: The claim folder gathering all the claims resulting from an earthquake in Greece on July 25th 2001.</Description>
    <AttributeProperty isSynthetic='true' name='claimGroupingName' originalName='claimGroupingName' assignable='true' index='0'>
      <Description>The name given to the claim grouping (e.g. Northridge Earthquake Claims).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='incurredButNotReportedIndicator' originalName='incurredButNotReportedIndicator' assignable='true' index='1'>
      <Description>Indicates that the claim grouping is a provision for a loss that has incurred but no specific claims have been reported to the insurance company.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimgrouping' originalName='claim grouping' assignable='true' index='2' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimBase</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimGroupingForclaimgrouping' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimgroupinglossevent' originalName='claim grouping loss event' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Event.LossEvent</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimGroupingForclaimgroupinglossevent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.BeneficiaryTypeCodeList' originalName='BeneficiaryTypeCodeList' restricts='java.lang.String'>
    <Description>Beneficiary Type</Description>
    <Enumerand isSynthetic='true' name='Insurer' generator='Insurer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Broker' generator='Broker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Agent' generator='Agent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.ClaimOfferStatusCodeList' originalName='ClaimOfferStatusCodeList' restricts='java.lang.String'>
    <Description>Allowed life cycle states for a claim offer.</Description>
    <Enumerand isSynthetic='true' name='Accepted' generator='Accepted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Granted' generator='Granted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nullified' generator='Nullified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Offered' generator='Offered'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Obsolete' generator='Obsolete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Settled' generator='Settled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Requested' generator='Requested'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.ClaimOfferStatusReasonCodeList' originalName='ClaimOfferStatusReasonCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of claim offers according to their status reason.</Description>
    <Enumerand isSynthetic='true' name='DisputedValuation' generator='Disputed Valuation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BillingInformationNotAccepted' generator='Billing Information Not Accepted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RecommendedRepairShopWasClosed' generator='Recommended Repair Shop Was Closed'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.ClaimSettlementMethodCodeList' originalName='ClaimSettlementMethodCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of claim offers according to their settlement method.</Description>
    <Enumerand isSynthetic='true' name='CashPayment' generator='Cash Payment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DamageRepair' generator='Damage Repair'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhysicalObjectReplacement' generator='Physical Object Replacement'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.ClaimStatusCodeList' originalName='ClaimStatusCodeList' restricts='java.lang.String'>
    <Description>Possible life cycle states for claim folder.</Description>
    <Enumerand isSynthetic='true' name='Abandoned' generator='Abandoned'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Open' generator='Open'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nullified' generator='Nullified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RejectedCoverageNotProvided' generator='Rejected Coverage Not Provided'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderEvaluation' generator='Under Evaluation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Settled' generator='Settled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderNegotiation' generator='Under Negotiation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Closed' generator='Closed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoverageConfirmed' generator='Coverage Confirmed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoverageEvaluation' generator='Coverage Evaluation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Granted' generator='Granted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Notified' generator='Notified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InDispute' generator='In Dispute'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Denied' generator='Denied'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pending' generator='Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PremiumPaymentsonthecoveragearesuspended' generator='Premium Payments on the coverage are suspended'>
      <Description>Reinsurance payments may still be due</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Discontinued' generator='Discontinued'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CompromisedSettled' generator='Compromised/Settled'>
      <Description>Partial benefits have been provided under a compromise or settlement agreement.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Disallowed' generator='Disallowed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaidinFullStatus' generator='Paid-in Full Status'>
      <Description>All benefits based on coverage terms have been paid for this claim instance.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Reopened' generator='Reopened'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inactive' generator='Inactive'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.FinancialBenefitStatusCodeList' originalName='FinancialBenefitStatusCodeList' restricts='java.lang.String'>
    <Description>Financial Benefit status</Description>
    <Enumerand isSynthetic='true' name='Canceled' generator='Canceled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pending' generator='Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Approved' generator='Approved'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tobepaid' generator='To be paid'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paid' generator='Paid'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Claim.ClaimCodeLists.RecoveryStatusCodeList' originalName='RecoveryStatusCodeList' restricts='java.lang.String'>
    <Description>Recovery Status</Description>
    <Enumerand isSynthetic='true' name='Canceled' generator='Canceled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Done' generator='Done'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ToBeDone' generator='To Be Done'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Contested' generator='Contested'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimElementSubtypes.ClaimCoverageFranchise' originalName='ClaimCoverageFranchise' superclassName='org.acord.aim.Claim.ClaimElement' isAbstract='false'>
    <Description>This object handles all information related to the coverage franchise from the perspective of the claim with a relationship to the corresponding coverage franchise on the agreement.</Description>
    <RelationshipProperty isSynthetic='true' name='claimcoveragefranchise' originalName='claim coverage franchise' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementElementSubtypes.AgreementCoverageFranchise</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimCoverageFranchiseForclaimcoveragefranchise' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimElementSubtypes.ClaimCoverageLimit' originalName='ClaimCoverageLimit' superclassName='org.acord.aim.Claim.ClaimElement' isAbstract='false'>
    <Description>This object handles all information related to the coverage limit from the perspective of the claim with a relationship to the corresponding coverage limit on the agreement.</Description>
    <AttributeProperty isSynthetic='true' name='claimLimitAppliesToCode' originalName='claimLimitAppliesToCode' assignable='true' index='0'>
      <Description>A code identifying the concept to which the limit applies.

e.g. Per Accident, Per Vehicle</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LimitAppliesToCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimLimitNumber' originalName='claimLimitNumber' assignable='true' index='1'>
      <Description>This is the limit number to be applied for the claim</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementlimit' originalName='agreement limit' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementElementSubtypes.CoverageLimit</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimCoverageLimitForagreementlimit' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimLimitAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimElementSubtypes.ClaimDeductible' originalName='ClaimDeductible' superclassName='org.acord.aim.Claim.ClaimElement' isAbstract='false'>
    <Description>This object handles all information related to the coverage deductible from the perspective of the claim with a relationship to the corresponding coverage deductible on the agreement.</Description>
    <AttributeProperty isSynthetic='true' name='claimDeductibleToApplyPercentage' originalName='claimDeductibleToApplyPercentage' assignable='true' index='1'>
      <Description>This is the claim deductible percentage to be applied following either a decision either the contractual information</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='deductibleType' originalName='deductibleType' assignable='true' index='0'>
      <Description>Type of deductible :
 - amount
 - percentage
 - percentage with a maximum amount</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimdeductible' originalName='claim deductible' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementElementSubtypes.CoverageDeductible</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimDeductibleForclaimdeductible' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimDeductibleMaximumToApplyAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimDeductibleMinimumToApplyAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimDeductibleToApplyAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimRemainingDeductibleAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimElementSubtypes.ClaimWaitingPeriodDeductible' originalName='ClaimWaitingPeriodDeductible' superclassName='org.acord.aim.Claim.ClaimElement' isAbstract='false'>
    <Description>This object handles all information related to the coverage deductible waiting period from the perspective of the claim with a relationship to the corresponding coverage deductible waiting period on the agreement.</Description>
    <RelationshipProperty isSynthetic='true' name='claimwaitingperioddeductible' originalName='claim waiting period deductible' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementElementSubtypes.CoverageWaitingPeriodDeductible</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimWaitingPeriodDeductibleForclaimwaitingperioddeductible' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='waitingPeriodDuration' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.AnnuityInstallmentBenefit' originalName='AnnuityInstallmentBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>An annuity benefit is related to life contracts and retirement contracts. Regular payments (monthly, quarterly or other frequency) are done until a certain date.</Description>
    <RelationshipProperty isSynthetic='true' name='annuityinstallmentplan' originalName='annuity installment plan' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.AnnuityInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='AnnuityInstallmentBenefitForannuityinstallmentplan' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.AnnuityReversionBenefit' originalName='AnnuityReversionBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>An annuity reversion benefit is related to life contracts and retirement contracts. Reversion means that the annuity benefit will be paid from a new contract.</Description>
    <RelationshipProperty isSynthetic='true' name='annuityinstallmentreversionpaymentplan' originalName='annuity installment reversion payment plan' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.AnnuityInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='AnnuityReversionBenefitForannuityinstallmentreversionpaymentplan' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.CapitalBenefit' originalName='CapitalBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>The purpose of a capital benefit is to indemnify a party having a claim.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' originalName='ClaimFinancialBenefit' superclassName='org.acord.aim.Finance.FinancialProvision' isAbstract='true'>
    <Description>A claim financial benefit corresponds to the financial compensation for the related prejudice. This compensation may be a service, financial compensation or both.</Description>
    <AttributeProperty isSynthetic='true' name='beneficiaryDesignationCode' originalName='beneficiaryDesignationCode' assignable='true' index='2'>
      <Description>Beneficiary Designation</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.BeneficiaryDesignationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='benefitType' originalName='benefitType' assignable='true' index='0'>
      <Description>First, final, first and final, subsequent, other</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimFinancialBenefitStatusCode' originalName='claimFinancialBenefitStatusCode' assignable='true' index='1'>
      <Description>FinancialBenefit status.</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.FinancialBenefitStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='beneficiarydesignation' originalName='beneficiary designation' assignable='true' index='9' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.PartyRoleInClaimSubtypes.BenefitBeneficiary</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimFinancialBenefitForbeneficiarydesignation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='benefitGrossAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='benefitNetAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='deductibleAppliedAmount' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialBenefitAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialbenefitoffered' originalName='financial benefit offered' assignable='true' index='10' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimOffer.ClaimOffer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimFinancialBenefitForfinancialbenefitoffered' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='triggerDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.ExpensesBenefit' originalName='ExpensesBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>Similar to FeesBenefit, these benefits are paid to experts for services performed.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.FeesBenefit' originalName='FeesBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>Benefits paid to experts for their work.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.ReceivedRecoveryBenefit' originalName='ReceivedRecoveryBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>This is a benefit paid to an alternate insurance company when a recovery has been received.</Description>
    <RelationshipProperty isSynthetic='true' name='recoverybenefitrecoverypaid' originalName='recovery benefit recovery paid' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimRecovery.ReceivedRecovery</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReceivedRecoveryBenefitForrecoverybenefitrecoverypaid' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.ReinvestmentBenefit' originalName='ReinvestmentBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>Reinvestment benefits are usually done for life contracts and usually for death cases, when a beneficiary wants to reinvest its benefit partially or totally on a new or an existing contract.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimFinancialBenefit.WaiverOfPremiumBenefit' originalName='WaiverOfPremiumBenefit' superclassName='org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit' isAbstract='false'>
    <Description>The purpose of this benefit is to pay a premium in case of loss of income where a waiver of premium rider was attached.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimOffer.ClaimOffer' originalName='ClaimOffer' superclassName='org.acord.aim.Claim.ClaimBase' isAbstract='false'>
    <Description>An offer made by a financial services company to a claimant or third party in the context of a claim. Sometimes, alternative offers are made so that the claimant has different options to settle the claim. Each of these options is represented by a different claim offer. A claim offer could also be the set of benefits requested by the claimant in the context of this claim. 
 
e.g: The claim offer for Ramona Celeste's automobile accident is a compensation of EUR 1,000 for the damage to the car. 
 
e.g: The claim offer from Hulpe Re reinsurance company to Mia Insurance Company resulting from Ramona Celeste's original claim.</Description>
    <AttributeProperty isSynthetic='true' name='beneficiaryDesignationCode' originalName='beneficiaryDesignationCode' assignable='true' index='4'>
      <Description>Designation of beneficiary</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.BeneficiaryDesignationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='benefitType' originalName='benefitType' assignable='true' index='5'>
      <Description>First, final, first and final, subsequent, other</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimOfferStatusCode' originalName='claimOfferStatusCode' assignable='true' index='0'>
      <Description>The current status of the claim offer within the life-cycle model.
 
e.g: Accepted 
 
e.g: Draft 
 
e.g: Granted 
 
e.g: Nullified 
 
e.g: Obsolete 
 
e.g: Offered 
 
e.g: Rejected 
 
e.g: Requested 
 
e.g: Settled</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.ClaimOfferStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimOfferStatusReasonCode' originalName='claimOfferStatusReasonCode' assignable='true' index='1'>
      <Description>The reason explaining why there was a status change. 
 
e.g: Billing information not accepted (for status: rejected following requested) 
 
e.g: Disputed valuation (for status: rejected) 
 
e.g: Recommended repair shop was closed. (for status obsolete where an alternative claim offer gets requested)

e.g: Recommended repair shop was closed. (for status obsolete where an alternative claim offer gets requested)

e.g: Recommended repair shop was closed.</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.ClaimOfferStatusReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='settlementMethodCode' originalName='settlementMethodCode' assignable='true' index='3'>
      <Description>Identifies the method to use for settling the benefit offered in the claim offer. 
 
e.g: Cash payment 
 
e.g: Repair of damage 
 
e.g: Replacement of damaged car</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.ClaimSettlementMethodCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='unitCount' originalName='unitCount' assignable='true' index='2'>
      <Description>Quantity of goods or services requested by claimant or offered by the claimee. 

The quantity can also be expressed as a number of days for services rendered. 

The quantity is derived either by providing physical object(s) in case the quantity relates to a number of activity occurrences or a number of days from an activity occurrence condition cause of claim in case the quantity relates to a number of days claimed for a condition.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='alreadyPaidAmount' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='alternativeclaimoffer' originalName='alternative claim offer' assignable='true' index='16' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimOffer.ClaimOffer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForalternativeclaimoffer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='appliedcoveragelimittooffer' originalName='applied coverage limit to offer' assignable='true' index='13' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementElementSubtypes.CoverageLimit</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForappliedcoveragelimittooffer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='associatedclaimoffering' originalName='associated claim offering' assignable='true' index='12' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForassociatedclaimoffering' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimBenefitDefinitionCreationDate' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimcoveragerelatedoffering' originalName='claim coverage related offering' assignable='true' index='14' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimCoverage</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForclaimcoveragerelatedoffering' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claiminitiator' originalName='claim initiator' assignable='true' index='19' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForclaiminitiator' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimoffercomposition' originalName='claim offer composition' assignable='true' index='17' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimOffer.ClaimOffer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForclaimoffercomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimofferingforspecificdamage' originalName='claim offering for specific damage' assignable='true' index='15' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForclaimofferingforspecificdamage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimofferrecovery' originalName='claim offer recovery' assignable='true' index='18' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimOffer.ClaimOffer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimOfferForclaimofferrecovery' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='offerLimitDate' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='triggerDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='validFromDate' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='validToDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimRecovery.ClaimRecovery' originalName='ClaimRecovery' superclassName='org.acord.aim.Finance.FinancialProvision' isAbstract='false'>
    <Description>This concept is the super-type of all types of recoveries that may be handled within a claim.
The specializations are:
- SubmittedRecovery
- ReceivedRecovery</Description>
    <AttributeProperty isSynthetic='true' name='adversaryAgreementNumber' originalName='adversaryAgreementNumber' assignable='true' index='1'>
      <Description>Adversary contract number provided by the third party via either the claim accident document or any other mail</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='adversaryClaimNumber' originalName='adversaryClaimNumber' assignable='true' index='2'>
      <Description>This is the claim number handled and managed by the adversary insurance company.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='adversaryLiabilityPercentage' originalName='adversaryLiabilityPercentage' assignable='true' index='4'>
      <Description>Adversary liability percentage</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='receivedRecoveryStatusCode' originalName='receivedRecoveryStatusCode' assignable='true' index='3'>
      <Description>Received recovery status</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.RecoveryStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='recoveryType' originalName='recoveryType' assignable='true' index='0'>
      <Description>The recovery type indicates if it is a convention or if it is a common law recovery</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimpayor' originalName='claim payor' assignable='true' index='9' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimPayor</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimRecoveryForclaimpayor' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='establishedclaimcoveragerecovery' originalName='established claim coverage recovery' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimCoverage</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimRecoveryForestablishedclaimcoveragerecovery' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='establisheddamagerecovery' originalName='established damage recovery ' assignable='true' index='8' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.DamageCondition</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimRecoveryForestablisheddamagerecovery' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='establishedrecoveryforclaim' originalName='established recovery for claim' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimRecoveryForestablishedrecoveryforclaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='recoveryStatusDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimRecovery.ReceivedRecovery' originalName='ReceivedRecovery' superclassName='org.acord.aim.Claim.ClaimRecovery.ClaimRecovery' isAbstract='false'>
    <Description>This concept materializes a received recovery, which will in most of the cases generate a benefit and a settlement process.</Description>
    <AttributeProperty isSynthetic='true' name='companyName' originalName='companyName' assignable='true' index='0'>
      <Description>Insurance company name issuing a recovery</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='receptionDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimRecovery.SubmittedRecovery' originalName='SubmittedRecovery' superclassName='org.acord.aim.Claim.ClaimRecovery.ClaimRecovery' isAbstract='false'>
    <Description>This concept materializes a submitted recovery, which will in most cases generate a money process. The amount, which will be received, will be deducted from the claim cost.</Description>
    <RelationshipProperty isSynthetic='true' name='submissionDate' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimReserveEntryDetail.ClaimReserve' originalName='ClaimReserve' superclassName='org.acord.aim.Finance.AccountSubtypes.ReserveEntryDetail' isAbstract='false'>
    <Description>This concept is the super-type of all reserves attached to a claim.
Reserves can be modified through the claim's life cycle and are kept for history.</Description>
    <AttributeProperty isSynthetic='true' name='followUpType' originalName='followUpType' assignable='true' index='0'>
      <Description>States the type of the concept concerned by the followUp
Examples are: Claim, Damage ...</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lastReserveModificationDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='outstandingReserveAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reserveInitialAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimReserveEntryDetail.DamageReserve' originalName='DamageReserve' superclassName='org.acord.aim.Claim.ClaimReserveEntryDetail.ClaimReserve' isAbstract='false'>
    <Description>This object is the reserve related to a Damage. 
Reserve types usually are:
- reserve for benefit
- reserve for recovery</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimSubtypes.InsuranceClaim' originalName='InsuranceClaim' superclassName='org.acord.aim.Claim.Claim' isAbstract='false'>
    <Description>An insurance claim describes the demand for money, services or goods from one party (Claimant) to Insurance Provider under terms and conditions which have been defined in a financial services agreement.

e.g: Claim from Victor Nosal to DEF Insurance Company for fire damage to his house.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimSubtypes.ReinsuranceClaim' originalName='ReinsuranceClaim' superclassName='org.acord.aim.Claim.Claim' isAbstract='false'>
    <Description>The identification of a claim as the result of another claim. In the context of a reinsurance agreement, it identifies the reinsurance claim that results from a primary claim.

e.g: Links primary claim to the reinsurance claim from DEF Insurance Company to Baltimore Reinsurance Company.</Description>
    <RelationshipProperty isSynthetic='true' name='relatedreinsuranceclaim' originalName='related reinsurance claim' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimBase</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceClaimForrelatedreinsuranceclaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.ClaimSubtypes.SubrogationClaim' originalName='SubrogationClaim' superclassName='org.acord.aim.Claim.Claim' isAbstract='false'>
    <Description>Subrogation claims include all claims where the demand is made based on rights subrogated by the claimant.

This includes :
- subrogation claim against opponent third party insurer : where the claim is made against the insurer of the opponent third party.
- subrogation claim against opponent third party : where the claim is made against the opponent third party.
- uninsured loss claim against opponent third party insurer: where the demand is made based on the rights of the claimant against the opponent third party and his insurer, and where the modeled organization acts as claim representative of the claimant.


e.g: Identifies the subrogation claim from Mighty Insurance Company to Brian Madison for compensation for property damage incurred to a car insured and paid for by Mighty Insurance Company.

e.g: MIA's insurance company agrees to pay the claim of Tom Howell for a car accident of which Beth Frewer was responsible. MIA submits a claim to Beth Frewer's insurer to recoup the money. This second claim is subrogation for the first one.</Description>
    <RelationshipProperty isSynthetic='true' name='claimsubrogation' originalName='claim subrogation' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Claim.ClaimSubtypes.InsuranceClaim</TypeName>
      <RelationshipProperty isSynthetic='true' name='SubrogationClaimForclaimsubrogation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.LossOccurrence.LossNotification' originalName='LossNotification' superclassName='org.acord.aim.DocumentandCommunication.Communication' isAbstract='false'>
    <Description>A loss notification is the starting point of a claim procedure. A client or another person (family, etc.) declares a loss event. This will be used in order to store all details of a loss event. It is related to a loss event object and the person declaring the loss.</Description>
    <AttributeProperty isSynthetic='true' name='lossNotificationMethod' originalName='lossNotificationMethod' assignable='true' index='0'>
      <Description>This field allows to store the type of notice of loss (verbal declaration, letter, other)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lossNotificationPreferredMediaCode' originalName='lossNotificationPreferredMediaCode' assignable='true' index='1'>
      <Description>The media used to perform the notice of loss</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PreferredCommunicationCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='associatedagreement' originalName='associated agreement' assignable='true' index='7' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossNotificationForassociatedagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lossDeclarationDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lossNotificationCompletionDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lossNotificationReceptionDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='notificationforlossoccurrence' originalName='notification for loss occurrence' assignable='true' index='5' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.LossOccurrence.LossOccurrence</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossNotificationFornotificationforlossoccurrence' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='partyresponsiblyforclaimdeclaration' originalName='party responsibly for claim declaration' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimDeclarer</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossNotificationForpartyresponsiblyforclaimdeclaration' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.LossOccurrence.LossOccurrence' originalName='LossOccurrence' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>An loss occurrence is the base of one or several claims. The death of a person might impact several contracts even if it is a single event. The loss occurrence is qualified by a date, a location, a type, a potential cause, eventual circumstances.</Description>
    <AttributeProperty isSynthetic='true' name='accidentIndicator' originalName='accidentIndicator' assignable='true' index='2'>
      <Description>Indicates whether the event is an accident, which could not have been predicted and is due to an external cause.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lossDescription' originalName='lossDescription' assignable='true' index='5'>
      <Description>Description of the circumstances of the loss occurrence.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='policeReportIndicator' originalName='policeReportIndicator' assignable='true' index='1'>
      <Description>This attribute indicates a police report was filed.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='thirdPartyInvolvedIndicator' originalName='thirdPartyInvolvedIndicator' assignable='true' index='0'>
      <Description>This indicates that a third party is involved and identified</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='trafficAccidentIndicator' originalName='trafficAccidentIndicator' assignable='true' index='3'>
      <Description>Indicates whether the event is a traffic accident. This cause may affect the way the benefit is calculated.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='workAccidentIndicator' originalName='workAccidentIndicator' assignable='true' index='4'>
      <Description>Indicates whether the accident has taken place during work time or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='associatedperil' originalName='associated peril' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.CommonClasses.Peril</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossOccurrenceForassociatedperil' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='causinglosseventassociation' originalName='causing loss event association' assignable='true' index='8' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Event.LossEvent</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossOccurrenceForcausinglosseventassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lossOccurrenceDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='LossOccurrenceOnPlace' originalName='LossOccurrence On Place' assignable='true' index='9' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossOccurrenceForLossOccurrenceOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.LossOccurrence.Testimony' originalName='Testimony' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This is the description of the testimony done by one or several witnesses</Description>
    <AttributeProperty isSynthetic='true' name='admissibilityIndicator' originalName='admissibilityIndicator' assignable='true' index='1'>
      <Description>Identifies if the testimony is admissible.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='testimonyDescription' originalName='testimonyDescription' assignable='true' index='0'>
      <Description>Description of the testimony</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='testimonyDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='testimonyprovidedbywitness' originalName='testimony provided by witness' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.LossOccurrence.LossOccurrence</TypeName>
      <RelationshipProperty isSynthetic='true' name='TestimonyFortestimonyprovidedbywitness' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='witnesstestimonry' originalName='witness testimonry' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.PartyRoleInClaimSubtypes.Witness</TypeName>
      <RelationshipProperty isSynthetic='true' name='TestimonyForwitnesstestimonry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.BenefitBeneficiary' originalName='BenefitBeneficiary' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>States one beneficiary of the benefit</Description>
    <AttributeProperty isSynthetic='true' name='beneficiaryRelationWithLossAdjustmentSubjectCode' originalName='beneficiaryRelationWithLossAdjustmentSubjectCode' assignable='true' index='2'>
      <Description>A description of the relation between the insured party and the subject of the loss adjustment.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.OwnershipCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='benefitBeneficiaryTypeCode' originalName='benefitBeneficiaryTypeCode' assignable='true' index='1'>
      <Description>Type of beneficiary</Description>
      <TypeName>org.acord.aim.Claim.ClaimCodeLists.BeneficiaryTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='telephoneContactAvailability' originalName='telephoneContactAvailability' assignable='true' index='3'>
      <Description>Information about the beneficiary contact availability.
Example of use: precision on the best time to phone the beneficiary.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vipIndicator' originalName='vipIndicator' assignable='true' index='0'>
      <Description>States whether the beneficiary is considered a Very Important Person</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimAdjuster' originalName='ClaimAdjuster' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party who handles a claim for an insurance company or syndicate. An adjuster's actions include: collating details, validating cover, resolving disputes and agreeing where appropriate to settle claims at a fair price. The adjuster has got authority limits set either by contracts, by seniority or by class of business. 
There are three types of claim adjuster: 
- Employee of the insurance company. 
- External parties authorized by the insurer to adjust claims on its behalf. 
- Third parties adjusting claims on behalf of the claimant. 
 
e.g: Douglas Greene, as adjuster in a reimbursement claim fire damage.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Claimant' originalName='Claimant' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>The party seeking financial restitution under the agreement (e.g. contract).
SOURCE: Barron's

A party who submits a claim for an incurred loss. 

e.g: Michael Gregory, as claimant of a reimbursement claim fire damage.</Description>
    <AttributeProperty isSynthetic='true' name='claimantConfirmationIndicator' originalName='claimantConfirmationIndicator' assignable='true' index='0'>
      <Description>Indicates whether the claimant is accepted as a beneficiary of the insurance policy for which he filed a claim.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimantConfirmationDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimDeclarer' originalName='ClaimDeclarer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>The party who declares a claim in the context of a claim declaration or disclosure. It may be accomplished via telephone, text, in-person, mail, etc. It might be the insured (most common case), an insured relative or someone else.

Like an applicant for insurance who declares the historical claims in which he is the claimee. Or an insurance company that declares a claim to a reinsurer in the context of reinsurance.

e.g: Garage du coin declaring its oil-leakage claim from 1999 when applying for a new commercial liability insurance.

e.g: John Doe applying for car insurance, declaring his car claim for his past accident with his Buick in 1998.</Description>
    <AttributeProperty isSynthetic='true' name='insuredRelationshipCode' originalName='insuredRelationshipCode' assignable='true' index='0'>
      <Description>The declaring party relationship with the insured</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.RelationDescriptionCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimDriver' originalName='ClaimDriver' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>This concept will be used to manage driver information if the driver (on insured side) at claim is not the driver declared on the contract.</Description>
    <AttributeProperty isSynthetic='true' name='youngDriverIndicator' originalName='youngDriverIndicator' assignable='true' index='0'>
      <Description>Indicates if the driver is considered as a young driver (less than two years of driving experience).</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Claimee' originalName='Claimee' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>The person or organization receiving an insurance claim.
 
e.g: Acme Insurance Company, as claimee in a reimbursement claim fire damage.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimExpert' originalName='ClaimExpert' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party used by an insurance company to assess the condition and value of damaged physical objects, based on their expert knowledge and experience. 
 
e.g: John Smith, as an expert to evaluate the damage of a car.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimLegalExpert' originalName='ClaimLegalExpert' superclassName='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimExpert' isAbstract='false'>
    <Description>A party that provides legal advice on matters concerning the claim.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimPayor' originalName='ClaimPayor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party responsible for paying claims.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimRecorder' originalName='ClaimRecorder' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>The party to whom a loss/claim is reported.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.ClaimRepresentative' originalName='ClaimRepresentative' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A third party who represents the claimant or a third party associated with the claim. The claim representative can be a sales agent, a broker, a lawyer or anyone else that has some form of agreement with the claimant or the third party. 
 
e.g: Inter-Co Co. as claimant representative in a reimbursement claim for fire damage</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Defendant' originalName='Defendant' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party in a legal action from whom the plaintiff seeks releases because of damage that is claimed to have been caused by the defendant.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Inpatient' originalName='Inpatient' superclassName='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Patient' isAbstract='false'>
    <Description>A patient who is formally admitted (or hospitalized) to an institution for treatment and/or care and stays for a minimum of one night in the hospital or other institution providing inpatient care.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.InternalMedicalApprover' originalName='InternalMedicalApprover' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>This concept defines the Approver of the hospitalization.</Description>
    <AttributeProperty isSynthetic='true' name='internalMedicalApproverIdentifier' originalName='internalMedicalApproverIdentifier' assignable='true' index='0'>
      <Description>The internal medical approver identification number.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.LossAdjuster' originalName='LossAdjuster' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>This concept states one's role as loss adjuster.</Description>
    <RelationshipProperty isSynthetic='true' name='LossAdjusterServicesLossAdjusterRelationship' originalName='LossAdjuster Services LossAdjusterRelationship' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.LossAdjusterRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossAdjusterForLossAdjusterServicesLossAdjusterRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.LossNotificationAuthority' originalName='LossNotificationAuthority' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party, other than any party servicing the claim (e.g. agent, insurer, etc.) to whom the loss is officially reported (e.g. police department, fire department, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.OpponentThirdParty' originalName='OpponentThirdParty' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party who is the opponent to the claimant in the claim, such as the driver of the other car in a loss event. 
 
e.g: John Van Doe, driving an Alfa Romeo has an accident with Jane Ihaa, driving a motorcycle. John is insured with Acme and is filing in a claim. Jane is the opponent third party.</Description>
    <AttributeProperty isSynthetic='true' name='agreementNumber' originalName='agreementNumber' assignable='true' index='1'>
      <Description>The number used by the insurer of the third party to uniquely identify the insurance policy covering the third party for the claim.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='insurerName' originalName='insurerName' assignable='true' index='0'>
      <Description>The name of the insurance company with whom the third party is insured for the damage related to the claim.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='liabilityPercentage' originalName='liabilityPercentage' assignable='true' index='2'>
      <Description>Third party liability percentage</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Outpatient' originalName='Outpatient' superclassName='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Patient' isAbstract='false'>
    <Description>Patient who is not formally admitted to the facility (physician's private office, hospital outpatient center or ambulatory-care center) and does not stay overnight. 
See also Inpatient (per contrast).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Patient' originalName='Patient' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A person in contact with the health system seeking attention for a health condition.</Description>
    <AttributeProperty isSynthetic='true' name='homeboundIndicator' originalName='homeboundIndicator' assignable='true' index='0'>
      <Description>Indicates whether the patient is homebound.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lastDischargeFacilityType' originalName='lastDischargeFacilityType' assignable='true' index='1'>
      <Description>Indicates the type of health care facility from which the patient was most recently discharged.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.HealthCareFacilityTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Plaintiff' originalName='Plaintiff' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party who asserts a claim against another party in a specific legal action.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Victim' originalName='Victim' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>A party affected by any kind of loss, condition or event that results in the submission of a claim.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Claim.PartyRoleInClaimSubtypes.Witness' originalName='Witness' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' isAbstract='false'>
    <Description>The party that witnessed an event.

e.g. The person who witnessed an accident that resulted in a claim.

e.g. The person who witnessed the signing of a document.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.InformationModelObject' originalName='InformationModelObject' isAbstract='true'>
    <Description>This concept is a generalizing concept for ALL concepts in the Information Model.  By having a common super-type, the Information Model can now use techniques like Categorization (via the Category sub-package and concept) and can help support the common interfaces used in the Component Model. 

Conceptually, InformationModelObject represents a thing or a concept that is meaningful to the industry.</Description>
    <AttributeProperty isSynthetic='true' name='basicDataCompleteCode' originalName='basicDataCompleteCode' assignable='true' index='0'>
      <Description>A code indicating the degree to which data for the object in question is considered complete. Having this attribute at this level makes all objects in the model capable of noting their level of completeness.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.DataCompleteCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeName' originalName='typeName' assignable='true' index='1'>
      <Description>Indicates the name of the type the object belongs to. The "typeName" can be used to reduce inheritance structures for things that have the same attributes (to the organization) but different names. For example, instead of creating sub-types for every vehicle manufacturer, you can use typeName as a simple String to differentiate them. It's important to differentiate between typeName and Category. The former is a very simple means of identifying the class, while the latter is used to group classes of the same (or different) types.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='creationDateTime' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.DateTime</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.CommonClasses.AssignedIdentifier' originalName='AssignedIdentifier' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents a party or system assignment of an identifier to a given concept for identification purposes.</Description>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='0'>
      <Description>The identifier assigned by the party acting as the assignor.

For example, if the insurer assigns vehicles a numbering scheme (e.g. vehicle #1, vehicle #2, etc.) this property accounts for "1", "2", etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='AssignedIdentifierIdentifiesInformationModelObject' originalName='AssignedIdentifier Identifies InformationModelObject' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.InformationModelObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssignedIdentifierForAssignedIdentifierIdentifiesInformationModelObject' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AssignedIdentifierRecognizesAssigningPartyRole' originalName='AssignedIdentifier Recognizes Assigning PartyRole' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssignedIdentifierForAssignedIdentifierRecognizesAssigningPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='assignorCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.CommonClasses.Peril' originalName='Peril' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents a peril (e.g. hazard such as "fire" or "theft"). The recursive link allows one peril to have a relationship with another peril (e.g. the peril of "theft" could have a relationship with the peril of "theft with violence" and also "theft without violence").</Description>
    <AttributeProperty isSynthetic='true' name='perilDescription' originalName='perilDescription' assignable='true' index='0'>
      <Description>Describes the generating event.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='perilName' originalName='perilName' assignable='true' index='1'>
      <Description>Name of the event type</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='perilcomposition' originalName='peril composition' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.CommonClasses.Peril</TypeName>
      <RelationshipProperty isSynthetic='true' name='PerilForperilcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.CommonClasses.Specification' originalName='Specification' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept is defined as the super type for all specification concepts (e.g. blueprints / designs).</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A free-text statement used to explain the meaning of the specification.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='kindOfElementName' originalName='kindOfElementName' assignable='true' index='3'>
      <Description>A name that is unique used to define the kind of element this specification is describing.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>The word or phrase used to identify (but not uniquely) the specification.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='shortName' originalName='shortName' assignable='true' index='4'>
      <Description>This attribute can be used as an alias resulting from the different hierarchy level names or organization of the sub-components of the product definition.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='version' originalName='version' assignable='true' index='2'>
      <Description>Identifies the version of a specification.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='SpecificationIdentifiesDesigningPartyRole' originalName='Specification Identifies Designing PartyRole' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='SpecificationForSpecificationIdentifiesDesigningPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.AgreementHolderRejectionReasonCodeList' originalName='AgreementHolderRejectionReasonCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Policyholders according to their rejection reason.</Description>
    <Enumerand isSynthetic='true' name='DifferentAgreement' generator='Different Agreement'>
      <Description>Identifies a Policyholder with rejection reason 'Decided for different financial services agreement'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DifferentInsurer' generator='Different Insurer'>
      <Description>Identifies a Policyholder with rejection reason 'Decided for different financial services provider (insurer)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unspecified' generator='Unspecified'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.AnnuityPremiumTypeCodeList' originalName='AnnuityPremiumTypeCodeList' restricts='java.lang.String'>
    <Description>Annuity Premium Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Single' generator='Single'>
      <Description>Only one payment is allowed</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Flexible' generator='Flexible'>
      <Description>Payments of differing amount are allowed. If an annuity is a single premium that allows subsequent payments, it should e identified as flexible.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fixed' generator='Fixed'>
      <Description>Regular scheduled payments are required</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.BankAccountTypeCodeList' originalName='BankAccountTypeCodeList' restricts='java.lang.String'>
    <Description>Bank Account Type</Description>
    <Enumerand isSynthetic='false' name='Checking' generator='Checking'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Savings' generator='Savings'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.BenefitDistributionCalculationCodeList' originalName='BenefitDistributionCalculationCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Beneficiaries according to their benefit distribution calculation.</Description>
    <Enumerand isSynthetic='true' name='Balance' generator='Balance'>
      <Description>Identifies a Beneficiary with benefit distribution calculation 'Balance'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EqualParts' generator='Equal Parts'>
      <Description>Identifies a Beneficiary with benefit distribution calculation 'Equal parts'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FlatAmount' generator='Flat Amount'>
      <Description>Identifies a Beneficiary with benefit distribution calculation 'Flat amount'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PercentageOfBalance' generator='Percentage Of Balance'>
      <Description>Identifies a Beneficiary with benefit distribution calculation 'Percentage of balance'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PercentageOfTotal' generator='Percentage Of Total'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.BillingNatureCodeList' originalName='BillingNatureCodeList' restricts='java.lang.String'>
    <Description>A code list that identifies the nature of the billing (policy bill, account bill).</Description>
    <Enumerand isSynthetic='true' name='AccountBill' generator='Account Bill'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PolicyBill' generator='Policy Bill'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.BinaryContentTypeCodeList' originalName='BinaryContentTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification for content of binary data.</Description>
    <Enumerand isSynthetic='true' name='Audio' generator='Audio'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Document' generator='Document'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Geospatial' generator='Geospatial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Multimedia' generator='Multimedia'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Picture' generator='Picture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Raw' generator='Raw'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Video' generator='Video'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='XML' generator='XML'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.BuildingDesignStyleCodeList' originalName='BuildingDesignStyleCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structures according to their design style.</Description>
    <Enumerand isSynthetic='true' name='Duplex' generator='Duplex'>
      <Description>Identifies a Structure with design style 'Duplex'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighRiseMultipleUnits' generator='High Rise Multiple Units'>
      <Description>Identifies a Structure with design style 'High rise multiple units'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LowRiseMultipleUnits' generator='Low Rise Multiple Units'>
      <Description>Identifies a Structure with design style 'Low rise multiple units'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SingleFamilyDetachedFourSquare' generator='Single Family Detached Four Square'>
      <Description>Identifies a Structure with design style 'Single family detached four square'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SingleFamilyDetachedRanch' generator='Single Family Detached Ranch'>
      <Description>Identifies a Structure with design style 'Single family detached ranch'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SingleFamilyRowHome' generator='Single Family Row Home'>
      <Description>Identifies a Structure with design style 'Single family row home'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.ClaimDecisionCodeList' originalName='ClaimDecisionCodeList' restricts='java.lang.String'>
    <Description>Enables to qualify the insurance company's decision towards the claim (or a given claim coverage or a given damage).</Description>
    <Enumerand isSynthetic='true' name='Accepted' generator='Accepted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Denied' generator='Denied'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inprogress' generator='In progress'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.ColourCodeList' originalName='ColourCodeList' restricts='java.lang.String'>
    <Description>This list defines colors.</Description>
    <Enumerand isSynthetic='true' name='Red' generator='Red'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Green' generator='Green'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Yellow' generator='Yellow'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Blue' generator='Blue'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Black' generator='Black'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='White' generator='White'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Brown' generator='Brown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.CommonOptionsCodeList' originalName='CommonOptionsCodeList' restricts='java.lang.String'>
    <Description>Common Options</Description>
    <Enumerand isSynthetic='true' name='Included' generator='Included'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Excluded' generator='Excluded'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Reinstated' generator='Reinstated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.CommunicationMediumCodeList' originalName='CommunicationMediumCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of ContactPreferences according to their preferred medium.</Description>
    <Enumerand isSynthetic='true' name='ClaimForm' generator='Claim Form'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Email' generator='Email'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FaceToFace' generator='Face To Face'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fax' generator='Fax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Internet' generator='Internet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mail' generator='Mail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SMS' generator='SMS'>
      <Description>Short message service.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Telephone' generator='Telephone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelephoneDirect' generator='Telephone Direct'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WAP' generator='WAP'>
      <Description>Wireless access protocol - such as a WAP-enabled phone.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.ComplexDataTypeCodeList' originalName='ComplexDataTypeCodeList' restricts='java.lang.String'>
    <Description>This list defines complex data types.</Description>
    <Enumerand isSynthetic='true' name='Integer' generator='Integer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CurrencyAmount' generator='Currency Amount'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ModFactor' generator='Mod Factor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Percentage' generator='Percentage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FormattedText' generator='Formatted Text'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.CreditCardTypeCodeList' originalName='CreditCardTypeCodeList' restricts='java.lang.String'>
    <Description>Credit Card Type</Description>
    <Enumerand isSynthetic='true' name='AmericanExpress' generator='American Express'>
      <Description>American Express</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BankCard' generator='Bank Card'>
      <Description>Bank Card</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DinersClub' generator='Diner&apos;s Club'>
      <Description>Diner's Club</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Discover' generator='Discover'>
      <Description>Discover</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MasterCard' generator='Master Card'>
      <Description>Master Card</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>Other</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
      <Description>Unknown</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Visa' generator='Visa'>
      <Description>Visa</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.DataCompleteCodeList' originalName='DataCompleteCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the degree to which data for the object in question is considered complete.</Description>
    <Enumerand isSynthetic='true' name='Full' generator='Full'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Partial' generator='Partial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReadOnly' generator='Read Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Removed' generator='Removed'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.DeductibleAppliesToCodeList' originalName='DeductibleAppliesToCodeList' restricts='java.lang.String'>
    <Description>Identifies the concept to which the deductible applies.</Description>
    <Enumerand isSynthetic='true' name='AnnualAggregate' generator='Annual Aggregate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EachAccident' generator='Each Accident'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EachLoss' generator='Each Loss'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EachOccurrence' generator='Each Occurrence'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.DeductibleTypeCodeList' originalName='DeductibleTypeCodeList' restricts='java.lang.String'>
    <Description>A code list comprised of deductible types.</Description>
    <Enumerand isSynthetic='true' name='Flat' generator='Flat'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Graduated' generator='Graduated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Percent' generator='Percent'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.DepositNatureCodeList' originalName='DepositNatureCodeList' restricts='java.lang.String'>
    <Description>Enables to specify a reinsurer's deposit nature.</Description>
    <Enumerand isSynthetic='true' name='Cash' generator='Cash'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stock' generator='Stock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.EducationCertificateLevelCodeList' originalName='EducationCertificateLevelCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of EducationCertificates according to their level.</Description>
    <Enumerand isSynthetic='true' name='ProfessionalCertification' generator='Professional Certification'>
      <Description>Identifies an education certificate with grade 'black belt'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mba' generator='Mba'>
      <Description>Identifies an education certificate at level 'Mba'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.EducationCertificateTitleCodeList' originalName='EducationCertificateTitleCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of EducationCertificates according to their title.</Description>
    <Enumerand isSynthetic='true' name='BSc' generator='BSc'>
      <Description>Bachelor of Science</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CLU' generator='CLU'>
      <Description>Chartered Life Underwriter</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FCII' generator='FCII'>
      <Description>Fellow of the Chartered Insurance Institute</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhD' generator='PhD'>
      <Description>Doctor of Philosophy</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.EducationGradeCodeList' originalName='EducationGradeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of EducationCertificates according to their grade.</Description>
    <Enumerand isSynthetic='true' name='MagnaCumLaude' generator='Magna Cum Laude'>
      <Description>Identifies an education certificate with grade 'magna cum laude'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Honours' generator='Honours'>
      <Description>Identifies an education certificate with grade 'honors'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BlackBelt' generator='Black Belt'>
      <Description>Identifies an education certificate with grade 'black belt'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pass' generator='Pass'>
      <Description>Identifies an education certificate with grade 'pass'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrownBelt' generator='Brown Belt'>
      <Description>Identifies an education certificate with grade 'brown belt'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.EmploymentTypeCodeList' originalName='EmploymentTypeCodeList' restricts='java.lang.String'>
    <Description>The Employment Type Code List - currently used to store general descriptions of employment types (e.g., Accountant), which is used in Person and CompanyContributionBreakdown. This is not to be confused with the Employment class, because while the code list is used within that class, this code list does not represent employment; just a type of employment.

For example, John Doe can be employed as an Accountant at ACME Accounting, Inc. John has a BusinessRelationship to ACME (Employment), and has a role of Employee. The employment type describes the kind of employee he is (i.e., Accountant)."</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AbrasivesIndustryForemanSupervisingOnly' generator='Abrasives Industry, Foreman (Supervising Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdvertisingAgencyStaffNotFreeLance' generator='Advertising (Agency Staff, Not Free Lance)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokerCommodityFutureOptionMediumLargeSize' generator='Broker, Commodity/Future/Option,Medium/Large-Size'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokersProduceBrokerNotVisitingMarketHandlingGoods' generator='Brokers, Produce Broker, Not Visiting Market&amp;Handling Goods'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokersRealEstateBrokerPrincipalOwnerWorkingFT' generator='Brokers, Real Estate Broker, Principal/Owner, Working F/T'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokerStockBondNotCommoditiesFloorSelfEmployed' generator='Broker, Stock/Bond (Not Commodities) Floor Self-Employed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokerStockBondNotCommoditiesFloorTrader' generator='Broker, Stock/Bond (Not Commodities) Floor Trader'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokerStockBondNotCommoditiesOfficeDuties' generator='Broker, Stock/Bond (Not Commodities) Office Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokersMortgageBrokerOfficeDutiesOnly' generator='Brokers, Mortgage Broker, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokersProduceBrokerOthers' generator='Brokers, Produce Broker, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokersRealEstateBrokerOthersWorkingFullTime' generator='Brokers, Real Estate Broker, Others Working Full-Time'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgricultureFarmOrchardRanchHiredHand' generator='Agriculture (Farm/Orchard/Ranch) Hired Hand'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BroomAndBrushFactoriesAllOthers' generator='Broom And Brush Factories, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BroomBrushFactoriesSuperintendentsAndForemen' generator='Broom/Brush Factories, Superintendents And Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BroomBrushFactoryAssemblerTierTrimmerSkilled' generator='Broom/Brush Factory, Assembler/Tier/Trimmer/Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BufferMetal' generator='Buffer, Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingConstructionCivilEngineer' generator='Building &amp; Construction, Civil Engineer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingConstructionEstimatorNotAtBuilding' generator='Building &amp; Construction, Estimator Not At Building'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingAndConstructionArchitects' generator='Building And Construction, Architects'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingAndConstructionOtherSkilledWorkers' generator='Building And Construction, Other Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingAndConstructionProjectManagers' generator='Building And Construction, Project Managers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingMaintenanceBuildingCleanerElevatorInstaller' generator='Building Maintenance, Building Cleaner/Elevator Installer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingMaintenanceSuperSupervisingOnly' generator='Building Maintenance, Super (Supervising Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingMoverWreckerSuperintendentForemenManager' generator='Building Mover/Wrecker, Superintendent/Foremen/Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingConstructionContractorSuperNotAtSite' generator='Building/Construction, Contractor/Super Not At Site'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingConstructionContractorSuperintendentSite' generator='Building/Construction, Contractor/Superintendent Site'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingConstructionElectriciansAndPlumbers' generator='Building/Construction, Electricians And Plumbers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusDrivers' generator='Bus Drivers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessMachineSalesServiceManagerSales' generator='Business Machine Sales &amp; Service, Manager &amp; Sales'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessMachineSalesServiceServicemenAllOther' generator='Business Machine Sales/Service, Servicemen/All Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessOwnersSmallAdministrativeMinimalDuties' generator='Business Owners;Small, Administrative, Minimal Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessOwnersSmallSomeTravelOrRetailSales' generator='Business Owners;Small, Some Travel &amp;/Or Retail Sales'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessOwnersSmallSupervisingBlueCollarEmployee' generator='Business Owners;Small, Supervising Blue Collar Employee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ButchersOthers' generator='Butchers, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ButchersProprietorAndRetailStore' generator='Butchers, Proprietor And Retail Store'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ButlersNotLivingOnPremises' generator='Butlers, Not Living On Premises'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ButtonManufactureForemen' generator='Button Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ButtonManufactureOthers' generator='Button Manufacture, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ButtonManufactureSuperintendents' generator='Button Manufacture, Superintendents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuyerDepartmentStoreOfficeDutiesOnly' generator='Buyer Department Store, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuyersDepartmentStoreOthers' generator='Buyers Department Store, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirConditioningEngineerSuperintendingInspector' generator='Air Conditioning, Engineer (Superintending/Inspector)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuyersCottonGrainPoultryTobaccoWool' generator='Buyers, Cotton, Grain, Poultry, Tobacco, Wool'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuyersOreLivestockLumberFur' generator='Buyers, Ore, Livestock, Lumber, Fur'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CabinetMakers' generator='Cabinet Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CalciumCarbideCyanamideManufactureAllOtherEmp' generator='Calcium Carbide/Cyanamide Manufacture, All Other Emp'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CalciumCarbideCyanamideManufactureForemenPackers' generator='Calcium Carbide/Cyanamide Manufacture, Foremen/Packers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CameraManufactureAssemblerFinisherLensGrinders' generator='Camera Manufacture, Assembler/Finisher/Lens Grinders'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CameraManufactureEngineerSuperintendentForemen' generator='Camera Manufacture, Engineer/Superintendent/Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CameraManufactureOthers' generator='Camera Manufacture, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CampsParkYearRoundProprietorManagerDirector' generator='Camps/Park (Year Round), Proprietor/Manager/Director'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanManufacturingOthers' generator='Can Manufacturing, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirConditioningInstallerRepairerServicemen' generator='Air Conditioning, Installer/Repairer/Servicemen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanManufacturingSuperintendentsForemen' generator='Can Manufacturing, Superintendents, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanalWorkerDockmasterSuperintendentInspector' generator='Canal Worker, Dockmaster/Superintendent/Inspector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanalWorkersBridgeLockOrBuoyTenders' generator='Canal Workers, Bridge, Lock Or Buoy Tenders'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanningPicklingPreservingFactoriesForemen' generator='Canning/Pickling/Preserving Factories, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanningPicklingPreservingFactoryAllOthers' generator='Canning/Pickling/Preserving Factory, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CanningPicklingPreservingFactorySuperintendents' generator='Canning/Pickling/Preserving Factory, Superintendents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cantors' generator='Cantors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CarbonElectrodeGraphiteManufactureForemen' generator='Carbon Electrode/Graphite Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CarbonElectrodeGraphiteManufactureSuperintendent' generator='Carbon Electrode/Graphite Manufacture, Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CardiacSurgeons' generator='Cardiac Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirConditioningEngineerOfficeConsultDutiesOnly' generator='Air Conditioning,Engineer(Office&amp;Consult Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cardiologists' generator='Cardiologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CaretakerNotOnPremisesPrivateHouseGrounds' generator='Caretaker (Not On Premises) Private House &amp; Grounds'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Carpenters' generator='Carpenters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CarpetInstallers' generator='Carpet Installers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CattleDealersHandlingLivestock' generator='Cattle Dealers, Handling Livestock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CattleDealersNotHandlingLivestock' generator='Cattle Dealers, Not Handling Livestock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CementLimeAndGypsumManufactureForemen' generator='Cement, Lime And Gypsum Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CementLimeGypsumManufactureSuperintendent' generator='Cement/Lime/Gypsum Manufacture, Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CemeteriesAllOthers' generator='Cemeteries, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CemeteriesSuperintendentClerkNoManualLabor' generator='Cemeteries, Superintendent &amp; Clerk, No Manual Labor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirDrillOperators' generator='Air Drill Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CharcoalManufactureOpenPitProcessForemen' generator='Charcoal Manufacture Open Pit Process, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CharcoalManufactureOpenPitProprietorSuperintendent' generator='Charcoal Manufacture Open Pit, Proprietor/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemicalIndustryChemistLabDutySuperintendent' generator='Chemical Industry, Chemist(Lab Duty)/Superintendent'>
      <Description>May also be classified as -- 44 OLI_EMPTYPE_ASSAYERS</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemicalIndustryChemistsOfficeDutiesOnly' generator='Chemical Industry, Chemists (Office Duties Only)'>
      <Description>May also be classified as -- 44 OLI_EMPTYPE_ASSAYERS 

May also be classified as -- 487 OLI_EMPTYPE_METALURGIST</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemicalIndustryForemenChemistInProcessWork' generator='Chemical Industry, Foremen/Chemist In Process Work'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemicalIndustryOtherSkilledWorkers' generator='Chemical Industry, Other Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemistAssayerMetallurgistEngagedInProcessWork' generator='Chemist/Assayer/Metallurgist, Engaged In Process Work'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemistAssayerMetallurgistOfficeDutiesOnly' generator='Chemist/Assayer/Metallurgist--Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChemistAssayerMetallurgistLabDuties' generator='Chemist/Assayer/Metallurgist--Lab Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChimneyCleanersOrSweeps' generator='Chimney Cleaners Or Sweeps'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirTrafficControllers' generator='Air Traffic Controllers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chiropodists' generator='Chiropodists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chiropractors' generator='Chiropractors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CityMarshalsProcessServingArmed' generator='City Marshals Process Serving, Armed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CityMarshalsProcessServingUnarmed' generator='City Marshals Process Serving, Unarmed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CityMarshalsOfficeAndCourtDutiesOnly' generator='City Marshals, Office And Court Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClaimAdjustersInsuranceFireOrMarine' generator='Claim Adjusters, Insurance, Fire Or Marine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClaimAdjustersInsuranceNotFireOrMarine' generator='Claim Adjusters, Insurance, Not Fire Or Marine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Clergymen' generator='Clergymen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClockManufacturingOrRepairAllOthers' generator='Clock Manufacturing Or Repair, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportPersonnelBaggageHandlerPorterFreight' generator='Airport Personnel, Baggage Handler/Porter/Freight'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClockManufacturingRepairUsingHandToolsOnly' generator='Clock Manufacturing/Repair, Using Hand Tools Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClothingManufactureFactoryShopStoreCustom' generator='Clothing Manufacture (Factory Shop/Store), Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClothingManufactureFactoryShopStoreProprietor' generator='Clothing Manufacture (Factory Shop/Store), Proprietor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClothingManufactureFactoryShopStoreOtherWorkers' generator='Clothing Manufacture (Factory/Shop/Store), Other Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoalAndWoodYardsForemen' generator='Coal And Wood Yards, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoalWoodYardManagerProprietorSuperintendent' generator='Coal/Wood Yard, Manager/Proprietor/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cobblers' generator='Cobblers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ColdStorageOthers' generator='Cold Storage, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ColdStorageProprietorsOrManagers' generator='Cold Storage, Proprietors Or Managers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CollectorsAccountsAllOthers' generator='Collectors, Accounts, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AbrasivesIndustrySuperintendentOnly' generator='Abrasives Industry, Superintendent Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportPersonnelDispatchersOnLine' generator='Airport Personnel, Dispatchers On Line'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CollectorsAccountsOfficeOnly' generator='Collectors, Accounts, Office Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommissaryClerks' generator='Commissary Clerks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Comptroller' generator='Comptroller'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComputerIndustryNotAtHomeAnalystKeypunch' generator='Computer Industry--Not At Home, Analyst, Keypunch'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComputerIndustryNotAtHomeDeliverymenHeavyEquipment' generator='Computer Industry--Not At Home, Deliverymen-Heavy Equipment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComputerIndustryNotWorkingAtHomeDeliverymen' generator='Computer Industry--Not Working At Home, Deliverymen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComputerIndustryNotWorkingAtHomeSalesmen' generator='Computer Industry--Not Working At Home, Salesmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConfectionerCandyCakeLocalDelivery' generator='Confectioner (Candy/Cake), Local Delivery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConfectionerCandyCakePackerCheckerWrapper' generator='Confectioner (Candy/Cake), Packer/Checker/Wrapper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConfectionerCandyCakeSuperintendentForemen' generator='Confectioner (Candy/Cake), Superintendent/Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportPersonnelDispatchersOfficeOperations' generator='Airport Personnel, Dispatchers(Office), Operations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConsultantsOfficeDutiesOnly' generator='Consultants, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorCook' generator='Restaurant 1st Class 2nd Liquor, Cook'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CopyistOfficeDutiesOnly' generator='Copyist (Office Duties Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorkManufactureForemenAndInspectors' generator='Cork Manufacture, Foremen And Inspectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorkManufactureOthers' generator='Cork Manufacture, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorkManufactureSkilledWorkers' generator='Cork Manufacture, Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Coroners' generator='Coroners'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateExecutive' generator='Corporate Executive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CreditMenOfficeDuties' generator='Credit Men--(Office Duties)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportPersonnelInstrumentInstallers' generator='Airport Personnel, Instrument Installers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrematoriesAttendants' generator='Crematories, Attendants'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrematoriesProprietorsManagementDutiesOnly' generator='Crematories, Proprietors (Management Duties Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CriticalCareMDS' generator='Critical Care MD&apos;S'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CuratorsLibraryMuseumOrArtGallery' generator='Curators, Library, Museum Or Art Gallery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Custodians' generator='Custodians'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DairyProductManufactureMilkDepotCreameryOthers' generator='Dairy Product Manufacture, Milk Depot/Creamery, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DairyProductManufactureMilkDepotCreamerySkilledEmployees' generator='Dairy Product Manufacture, Milk Depot/Creamery, Skilled Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DanceTeacherFullTimeStudioOtherThanResidence' generator='Dance Teacher (Full Time,Studio Other Than Residence)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DayCareOwnerEmployeeNonResidTeachingLicensed' generator='Day Care Owner/Employee,Non-Resid Teaching, Licensed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DecoratorInteriorOtherIncludingPaperHanger' generator='Decorator/Interior, Other,Including Paper Hanger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportPersonnelManagerOfficeSupervisionDuties' generator='Airport Personnel, Manager, Office&amp;Supervision Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DecoratorsInteriorConsultingDutiesOnly' generator='Decorators, Interior, Consulting Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DecoratorsInteriorWindowAndDisplay' generator='Decorators, Interior, Window And Display'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DentalHygienistOfficeAssistNotNursesDentistry' generator='Dental Hygienist,Office Assist(Not Nurses),Dentistry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DentalLabWorkerTechnicianNurseDentistry' generator='Dental Lab Worker, Technician, Nurse, Dentistry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dermatologists' generator='Dermatologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DesignersInterior' generator='Designers, Interior'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DiamondCuttersPolishersAndSetters' generator='Diamond Cutters, Polishers And Setters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DieMakersNoGrinding' generator='Die Makers (No Grinding)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DockWorkerMarineSuperintendentOfficeClerks' generator='Dock Worker (Marine), Superintendent/Office Clerks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DoctorsOfMedicine' generator='Doctors Of Medicine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Allergist' generator='Allergist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DogCatchers' generator='Dog Catchers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DogKennelsGroomersAwayFromHome' generator='Dog Kennels, Groomers (Away From Home)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KennelsProprietorsBreedersTrainers' generator='Kennels, Proprietors, Breeders, Trainers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Doormen' generator='Doormen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DraftsmenOfficeAwayFromHomeOnly' generator='Draftsmen (Office Away From Home Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrawbridgeTendersInTowers' generator='Drawbridge Tenders, In Towers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrawbridgeTendersOthers' generator='Drawbridge Tenders, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrillPressOperators' generator='Drill Press Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DriverTaxiIncludingProprietorOfSmallTaxiCompany' generator='Driver, Taxi,Including Proprietor Of Small Taxi Company'>
      <Description>May also be classified as -- 736 OLI_EMPTYPE_TAXICABDRIVER</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DriverTruckNonhazardousLightTruckingLocal' generator='Driver, Truck-Non-hazardous:  Light Trucking, Local'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DriversAmbulancesAmbulanceDrivers' generator='Drivers, Ambulances/Ambulance Drivers'>
      <Description>Unclassified Ambulance Driver</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrugAndToiletPreparationsManufacturingOthers' generator='Drug And Toilet Preparations Manufacturing, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrugStoreClerks' generator='Drug Store, Clerks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrugToiletPreparationManufacturingForemenSuperintendent' generator='Drug/Toilet Preparation Manufacturing, Foremen/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DrugToiletPreparationManufacturingSkilledWorker' generator='Drug/Toilet Preparation Manufacturing,Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DryCleaningAndDyeingForemen' generator='Dry Cleaning And Dyeing, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DryCleaningAndDyeingOthers' generator='Dry Cleaning And Dyeing, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DryCleaningDyeingClerkCounterDutyManager' generator='Dry Cleaning/Dyeing, Clerk(Counter Duty/Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DyeDyeIntermediateManufacturingSuperintendentChemists' generator='Dye/Dye Intermediate Manufacturing, Superintendent/Chemists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Anesthesiologists' generator='Anesthesiologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DyeDyeIntermediateManufacturingChemistProcess' generator='Dye/Dye Intermediate Manufacturing, Chemist Process'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EarNoseAndThroatMDS' generator='Ear Nose And Throat MD&apos;S'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Economists' generator='Economists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EditorsMagazineAndNewspaperOfficeDutiesOnly' generator='Editors, Magazine And Newspaper, Office Duties Only'>
      <Description>May also be classified as -- 513 OLI_EMPTYPE_NEWSOFFICE</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EfficiencyExpertIndustrialEngineerFactoryPlant' generator='Efficiency Expert/Industrial Engineer, Factory/Plant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EfficiencyExpertIndustrialEngineerOfficeDuties' generator='Efficiency Expert/Industrial Engineer, Office Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EggHandlersOrTesters' generator='Egg Handlers Or Testers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryPowerHouseSubStationsAllOther' generator='Electrical Industry-Power House/Sub-Stations, All Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryApparatusManufactureForemen' generator='Electrical Industry--Apparatus Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryBatteryManufactureAllOthers' generator='Electrical Industry--Battery Manufacture, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AnesthetistOtherThanPhysician' generator='Anesthetist--Other Than Physician'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryBatteryManufactureForemen' generator='Electrical Industry--Battery Manufacture,Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryBatteryManufactureSuperintendent' generator='Electrical Industry--Battery Manufacture/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryElectricalApparatusManufacturer' generator='Electrical Industry--Electrical Apparatus Manufacturer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryElectricalApparatusAllOther' generator='Electrical Industry--Electrical Apparatus, All Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryGeneralEngineerConsultDesign' generator='Electrical Industry--General Engineer: Consult/Design'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryGeneralInstallerRepairmen' generator='Electrical Industry--General, Installer/Repairmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryGeneralMeterReaders' generator='Electrical Industry--General, Meter Readers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryGeneralElectricalContractor' generator='Electrical Industry--General,Electrical Contractor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryGeneralElectricalEngineers' generator='Electrical Industry--General,Electrical Engineers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AntiqueDealerPurchaseRepairCollectDelivery' generator='Antique Dealer, Purchase/Repair/Collect/Delivery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryOverheadLineTunnelForemen' generator='Electrical Industry--Overhead Line/Tunnel Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryOverheadTunnelLinemenSplicer' generator='Electrical Industry--Overhead/Tunnel Linemen/Splicer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryOverheadTunnelPoleSetters' generator='Electrical Industry--Overhead/Tunnel Pole Setters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryOverheadTunnelTowerErectors' generator='Electrical Industry--Overhead/Tunnel Tower Erectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryOverheadTunnelTransformer' generator='Electrical Industry--Overhead/Tunnel Transformer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricalIndustryPowerHousesSubStationSuperintendent' generator='Electrical Industry--Power Houses/Sub-Station Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electrologists' generator='Electrologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electroplaters' generator='Electroplaters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electrotypers' generator='Electrotypers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElevatorOperatorPassengerOperatorStarters' generator='Elevator Operator, Passenger Operator/Starters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AntiqueDealersSalesOnly' generator='Antique Dealers, Sales Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElevatorOperatorsFreightOperators' generator='Elevator Operators, Freight Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmbalmerAssistant' generator='Embalmer/Assistant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmergencyRoomPhysicians' generator='Emergency Room Physicians'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EnamelFactoryTinwareSanitaryWareAllOthers' generator='Enamel Factory/Tinware/Sanitary Ware, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EnamelFactoryTinwareSanitaryWareForemen' generator='Enamel Factory/Tinware/Sanitary Ware, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EnamelFactoryTinwareSanitaryWareSuperintendent' generator='Enamel Factory/Tinware/Sanitary Ware, Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Endocrinologist' generator='Endocrinologist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Endodontists' generator='Endodontists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EngineerRegisteredProfessionalNonHazardous' generator='Engineer (Registered Professional) Non-Hazardous'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EngineerRegisteredProfessionalOfficeConsultant' generator='Engineer (Registered Professional) Office/Consultant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AccountantsCertifiedPublicAccountants' generator='Accountants, Certified Public Accountants'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Appraisers' generator='Appraisers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EngineerStationaryNonHazardousIndustries' generator='Engineer, Stationary--Non-Hazardous Industries'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EngineersOfficeDutiesAndConsultingDutiesOnly' generator='Engineers,Office Duties And Consulting Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EngraversCelluloidGlassMetalPlatePhotoengraver' generator='Engravers, Celluloid Glass/Metal/Plate Photoengraver'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EngraversMonument' generator='Engravers, Monument'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Enterologists' generator='Enterologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EntomologistsEthnologists' generator='Entomologists, Ethnologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Epidemiologists' generator='Epidemiologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExecutiveCorporateOfficePrimarily35Employee' generator='Executive/Corporate, Office Primarily, 35+ Employee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExecutiveCorporateOtherExecutivePrimarilyOffice' generator='Executive/Corporate, Other Executive, Primarily Office'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpeditersOfficeAndStoreSystemsOnly' generator='Expediters, Office And Store Systems Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Arbitrager' generator='Arbitrager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpeditersOthers' generator='Expediters, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExplosivesManufactureSuperintendentChemist' generator='Explosives Manufacture, Superintendent/Chemist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Exterminators' generator='Exterminators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FactoryWorkerNonHazardousIndustrySkilledWorker' generator='Factory Worker Non-Hazardous Industry, Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FactoryWorkerNonHazardousSkilledWorkerHeavy' generator='Factory Worker Non-Hazardous, Skilled Worker, Heavy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FactoryWorkerNonHazardousUnskilledWorkerLight' generator='Factory Worker Non-Hazardous, Unskilled Worker, Light'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilyPractitioners' generator='Family Practitioners'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarmerGeneralFarmDairyFruitNurseryGarden' generator='Farmer (General Farm/Dairy/Fruit/Nursery/Garden)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarmerGeneralDairyFruitYearRoundAllOthers' generator='Farmer(General/Dairy/Fruit) Year Round, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarmerGeneralDairyFruitYearRoundProprietor' generator='Farmer(General/Dairy/Fruit)Year Round,Proprietor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FeltWorkers' generator='Felt Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FilmManufactureForemenSupervisingDutiesOnly' generator='Film Manufacture, Foremen(Supervising Duties Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FilmManufactureSkilledWorkers' generator='Film Manufacture, Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireDepartmentChiefMarshalSuperintendent' generator='Fire Department Chief/Marshal/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirearmInspectorRepairerNotTestingSalesmen' generator='Firearm, Inspector/Repairer(Not Testing) Salesmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FishingIndustryHatcheriesOthers' generator='Fishing Industry Hatcheries, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FishingIndustryHatcheriesSuperintendents' generator='Fishing Industry Hatcheries, Superintendents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FloorFinishersAndSanders' generator='Floor Finishers And Sanders'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FloorwalkerInStore' generator='Floorwalker (In Store)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtGlassAssemblersNoErectingOrSetting' generator='Art Glass, Assemblers (No Erecting Or Setting)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FloristsArtificialFlowerMakers' generator='Florists, Artificial Flower Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FloristsGreenhouseAndLightDelivery' generator='Florists, Greenhouse And Light Delivery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FloristsStoreDutiesOnly' generator='Florists, Store Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FreightHandlerForemenSuperintendentSupervising' generator='Freight Handler, Foremen/Superintendent (Supervising)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FreightHandlersAllOthers' generator='Freight Handlers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fumigators' generator='Fumigators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralIndustryDirectorProprietor' generator='Funeral Industry, Director, Proprietor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralIndustryOthers' generator='Funeral Industry, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryManufactureOfFurGoodsForemen' generator='Fur Industry Manufacture Of Fur Goods, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtGlassErectorsOrSetters' generator='Art Glass, Erectors Or Setters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryManufactureOfFurGoodsOthers' generator='Fur Industry Manufacture Of Fur Goods, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryManufactureOfFurGoodsSkilledWorker' generator='Fur Industry Manufacture Of Fur Goods, Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryPreparationOfSkinsForemen' generator='Fur Industry Preparation Of Skins, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryPreparationOfSkinsOthers' generator='Fur Industry Preparation Of Skins, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryRetailWholesaleDealerStoreSales' generator='Fur Industry Retail/Wholesale Dealer, Store Sales'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryRetailWholesaleDealerRepairingAlter' generator='Fur Industry Retail/Wholesale Dealer/Repairing/Alter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryRetailWholesaleDealerSalesTravel' generator='Fur Industry Retail/Wholesale Dealer/Sales (Travel)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurIndustryFurBearingAnimalRaisers' generator='Fur Industry, Fur-Bearing Animal Raisers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurnitureMoverIncludingMachinerySafeMovers' generator='Furniture Mover (Including Machinery/Safe Movers)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurnitureWoodworkingFactoriesAllOthers' generator='Furniture/Woodworking Factories, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtificialFlowerMakers' generator='Artificial Flower Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurnitureWoodworkingFactoriesOfficeDutiesOnly' generator='Furniture/Woodworking Factories, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurnitureWoodworkingFactoriesUpholsterers' generator='Furniture/Woodworking Factories, Upholsterers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FurnitureWoodworkingFactoryForemenSuperintendent' generator='Furniture/Woodworking Factory, Foremen/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GalvanizersAndTinnersNotRoofers' generator='Galvanizers And Tinners (Not Roofers)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GamblingIndustryLegalCardDealerCroupierDice' generator='Gambling Industry (Legal), Card Dealer/Croupier/Dice'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GamblingIndustryWhereLegalizedOperatedInLaw' generator='Gambling Industry (Where Legalized/Operated In Law)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GarbageDisposalPlantIncineratorChemistsSupervision' generator='Garbage Disposal Plant/Incinerator, Chemists (Supervision)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GarbageDisposalPlantIncineratorSkilledWorkers' generator='Garbage Disposal Plant/Incinerator, Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GarbageAshCollectionScavengingForemenSupervision' generator='Garbage/Ash Collection/Scavenging, Foremen (Supervision)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GardenerLandscaperYearRoundRegularlyEmployed' generator='Gardener/Landscaper (Year Round,Regularly Employed)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtificialGasSeeGasManufacture' generator='Artificial Gas--See Gas Manufacture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureAcetyleneCoalForemenSupervising' generator='Gas Manufacture Acetylene/Coal Foremen (Supervising)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureAcetyleneCoalChemistNoLabDuties' generator='Gas Manufacture Acetylene/Coal, Chemist (No Lab Duties)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureCokeOvenArtificialGasChemists' generator='Gas Manufacture Coke Oven/Artificial Gas--Chemists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureCokeOvenArtificialsBurnerCharge' generator='Gas Manufacture Coke Oven/Artificials--Burner/Charge'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureCompressedLiquifiedForemenCellme' generator='Gas Manufacture Compressed/Liquified, Foremen/Cellme'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureCompressedLiquifiedChemistNoLab' generator='Gas Manufacture Compressed/Liquified,Chemist(No Lab)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GasManufactureCompressedLiquifiedRackmenTrucker' generator='Gas Manufacture Compressed/Liquified--Rackmen/Trucker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gastroenterologists' generator='Gastroenterologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralDentistryDentists' generator='General Dentistry, Dentists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralPractitioners' generator='General Practitioners'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtificialLimbManufDealerNotMakerOrRepairer' generator='Artificial Limb Manuf, Dealer (Not Maker Or Repairer)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralSurgeons' generator='General Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeologistWorkingInUsCanadaOnlyFieldWork' generator='Geologist, Working In Us/Canada Only, Field Work'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeologistWorkingInUsCanadaOnlyOfficeConsult' generator='Geologist, Working In Us/Canada Only, Office/Consult'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GlassIndustryForemen' generator='Glass Industry, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GlassIndustryOtherSkilledWorkers' generator='Glass Industry, Other Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GlassIndustrySuperintendentsSupervisingOnly' generator='Glass Industry, Superintendents (Supervising Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Glaziers' generator='Glaziers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GoldsmithsBeatersAndRefiners' generator='Goldsmiths, Beaters And Refiners'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GolfYearRoundIndustryOnlyProprietorManagers' generator='Golf (Year Round Industry Only), Proprietor/Managers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GolfYearRoundInstructorProfessionalResident' generator='Golf--(Year Round) Instructor/Professional (Resident)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtificialLimbManufactureMakersOrRepairers' generator='Artificial Limb Manufacture, Makers Or Repairers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GolfYearRoundCaddieMasterStarterCaretaker' generator='Golf--(Year Round), Caddie Master/Starter/Caretaker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GolfYearRoundProprietorManagersDrivingRange' generator='Golf--(Year Round), Proprietor/Managers,Driving Range'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentServiceStateMunicipal' generator='Government Service-State/Municipal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrainMillElevatorForemenSkilledWorkers' generator='Grain Mill/Elevator, Foremen, Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrainMillGrainElevatorSuperintendentInspector' generator='Grain Mill/Grain Elevator, Superintendent/Inspector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrainMillsGrainElevatorsAllOtherEmployees' generator='Grain Mills, Grain Elevators, All Other Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GraphicDesigners' generator='Graphic Designers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GraveDiggers' generator='Grave Diggers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrinderBufferPolisherMetalSuperintendentForemen' generator='Grinder/Buffer/Polisher Metal, Superintendent/Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrindersBuffersAndPolishersMetalAllOthers' generator='Grinders, Buffers, And Polishers Metal, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtistCommercialNotFreelance' generator='Artist, Commercial, Not Freelance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GuidesOtherSightseeingEmployedAllYear' generator='Guides, Other Sightseeing--Employed All Year'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gunsmiths' generator='Gunsmiths'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gynecologists' generator='Gynecologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HairGoodManufactureBleacherCurlerDyerSpinner' generator='Hair Good Manufacture, Bleacher/Curler/Dyer/Spinner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HairGoodsManufactureAllOthers' generator='Hair Goods Manufacture, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HairGoodsManufactureForemenSupervisingOnly' generator='Hair Goods Manufacture, Foremen (Supervising Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HandSurgeons' generator='Hand Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HarborMasters' generator='Harbor Masters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HatManufacturingAllOthers' generator='Hat Manufacturing, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HatManufacturingMillineryDealers' generator='Hat Manufacturing, Millinery Dealers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AccountantsOthers' generator='Accountants, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AsbestosMillConcentratingMillSkilledWorker' generator='Asbestos Mill (&amp; Concentrating Mill), Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HatManufacturingSuperintendingDutiesOnly' generator='Hat Manufacturing, Superintending Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HealthOfficialsFieldDutiesNoHazardousActivity' generator='Health Officials, Field Duties(No Hazardous Activity'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HeatingApparatusCoalOilGasElectricDealer' generator='Heating Apparatus (Coal/Oil/Gas/Electric), Dealer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HeatingApparatusCoalOilGasElectricInstaller' generator='Heating Apparatus (Coal/Oil/Gas/Electric), Installer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hematologists' generator='Hematologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HospitalAsylumSanitariumEMTAmbulanceDriverNa' generator='Hospital/Asylum/Sanitarium, EMT/Ambulance Driver/Na'>
      <Description>One who is employed by Hospital/Asylum/Sanitarium as an EMT/Ambulance Driver</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HospitalAsylumSanitariumManagerSuperintendent' generator='Hospital/Asylum/Sanitarium, Manager, Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HospitalAsylumSanitariumAllNonProfessionalUnskilled' generator='Hospital/Asylum/Sanitarium,All Non-Professional/Unskilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HospitalsAsylumsAndSanitariumsAdministrators' generator='Hospitals, Asylums, And Sanitariums, Administrators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotelMotelInnProprietorManagerCashierClerk' generator='Hotel/Motel/Inn, Proprietor, Manager, Cashier, Clerk'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AsbestosMillConcentratingMillSupervisors' generator='Asbestos Mill (&amp; Concentrating Mill), Supervisors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotelsMotelsInnsAllOthers' generator='Hotels, Motels, Inns, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HouseholdAppliancesDealersAndSalesmen' generator='Household Appliances, Dealers And Salesmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HouseholdAppliancesInstallersAndRepairmen' generator='Household Appliances, Installers And Repairmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HumaneSocietyAgents' generator='Humane Society Agents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HydraulicPressOperators' generator='Hydraulic Press Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hypnotherapists' generator='Hypnotherapists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IceIndustryYearRoundAllOtherEmployees' generator='Ice Industry (Year-Round), All Other Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IceIndustryYearRoundForemenStationaryEngineer' generator='Ice Industry (Year-Round), Foremen/Stationary Engineer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IceIndustryYearRoundManagerProprietorsSuperintendent' generator='Ice Industry(Year-Round)Manager/Proprietors/Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ImportExport' generator='Import/Export'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AsphaltRefiningForemanSuperviseOnlyInspector' generator='Asphalt Refining, Foreman (Supervise Only), Inspector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IndustrialRehabExecutive' generator='Industrial Rehab Executive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InfectiousDiseaseSpecialists' generator='Infectious Disease Specialists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsecticideManufDisinfectantFumigantsAllOther' generator='Insecticide Manuf(Disinfectant/Fumigants), All Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsecticideManufactureDisinfectantFumigants' generator='Insecticide Manufacture (Disinfectant/Fumigants)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsecticideMfgDisinfectantFumigantsLabChemist' generator='Insecticide Mfg (Disinfectant/Fumigants) Lab Chemist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsuranceIndustry' generator='Insurance Industry--'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsuranceIndustryAdjusterAgentBrokerSolicitor' generator='Insurance Industry-Adjuster, Agent, Broker, Solicitor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Internists' generator='Internists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InterpretersFullTimeOnly' generator='Interpreters-Full Time Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InvestmentBanker' generator='Investment Banker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AsphaltRefiningOthers' generator='Asphalt Refining, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IrrigationWorkerSuperintendentWaterMasters' generator='Irrigation Worker, Superintendent/Water Masters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JanitorsRegularFullTimeJanitorPortersNoOutside' generator='Janitors--Regular/Full Time Janitor/Porters,No Outside'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JanitorsRegularFullTimeBuildingSuperintendent' generator='Janitors--Regular/Full Time, Building Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JewelryIndustryNotAtResidenceOthers' generator='Jewelry Industry--Not At Residence, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JewelryIndustryNotAtResidenceProprietorMgr' generator='Jewelry Industry--Not At Residence, Proprietor, Mgr'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JewelryIndustryNotResidenceMakerRepairerHand' generator='Jewelry Industry--Not Residence, Maker/Repairer Hand'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JudgeCourthouseOfficialNotInChargeOfPrisoner' generator='Judge/Courthouse Official, Not In Charge Of Prisoner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JunkDealerProprietorSuperintendingDutiesOnly' generator='Junk Dealer, Proprietor/Superintending Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JusticesOfThePeace' generator='Justices Of The Peace'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KennelsGroomers' generator='Kennels, Groomers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AssayersNotWorkingInMine' generator='Assayers (Not Working In Mine)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KennelsManagersOrOperatorsSupervisingOnly' generator='Kennels, Managers Or Operators (Supervising Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KennelsVeterinariansHouseholdPets' generator='Kennels, Veterinarians, Household Pets'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KennelsVeterinariansLargeAnimals' generator='Kennels, Veterinarians, Large Animals'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KenoWriters' generator='Keno Writers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LabTechOtherRnHospitalAsylumSanitarium' generator='Lab Tech, Other Rn, Hospital, Asylum, &amp; Sanitarium'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LaborUnionUnionOfficialOfficeDutiesOnly' generator='Labor Union, Union Official, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Laborers' generator='Laborers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LandscapeArchitectsWithArchitectureDegree' generator='Landscape Architects, With Architecture Degree'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LaundriesSupervisoryDutiesOnly' generator='Laundries, Supervisory Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lawyers' generator='Lawyers'>
      <Description>One whose profession is to conduct lawsuits for clients or to advise as to legal rights and obligations in other matters (Passed the bar)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Assessors' generator='Assessors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LensGrindersPolishersOrCutters' generator='Lens Grinders, Polishers, Or Cutters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Librarian' generator='Librarian'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LighthouseKeepersLandDutiesOnly' generator='Lighthouse Keepers, Land Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LinoleumInstallers' generator='Linoleum Installers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LinoleumOilclothManufactureStoneDresserLaborer' generator='Linoleum/Oilcloth Manufacture, Stone Dresser/Laborer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LinoleumOilclothManufactureSupervisoryOnly' generator='Linoleum/Oilcloth Manufacture, Supervisory Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Linotypers' generator='Linotypers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustryBreweryDistilleryWineriesSupervision' generator='Liquor Industry Brewery/Distillery/Wineries, Supervision'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustryBreweryDistilleryWineryAllOther' generator='Liquor Industry Brewery/Distillery/Winery, All Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustryBreweryDistilleryWineryForemen' generator='Liquor Industry Brewery/Distillery/Winery, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Attorneys' generator='Attorneys'>
      <Description>One who is legally appointed to transact business on another's behalf; specifically : a legal agent qualified to act for suitors and defendants in legal proceedings</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustryDistributionSaleWarehouseStore' generator='Liquor Industry Distribution/Sale Warehouse/Store'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustryDistributionSalesOthersLightDel' generator='Liquor Industry Distribution/Sales, Others Light Del'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustryDistributionSalesSolicitorCollector' generator='Liquor Industry Distribution/Sales, Solicitor/Collector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquorIndustrySalesPackageStoreNoLiquorConsumed' generator='Liquor Industry Sales/Package Store, No Liquor Consumed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiteraryAgents' generator='Literary Agents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LithographersAllOthers' generator='Lithographers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LithographersOfficeDutiesOnlyAndArtists' generator='Lithographers, Office Duties Only And Artists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lobbyists' generator='Lobbyists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Locksmiths' generator='Locksmiths'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LumberIndustryLoggingProprietorManagerClerk' generator='Lumber Industry Logging/Proprietor/Manager/Clerk'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AuctioneersLivestock' generator='Auctioneers, Livestock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LumberIndustryWoodProcessingFactoriesForemen' generator='Lumber Industry Wood Processing Factories, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LumberIndustryYardForemenGraderInspectorSales' generator='Lumber Industry Yard, Foremen/Grader/Inspector/Sales'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MachineShopWorkersMillwrights' generator='Machine Shop Workers, Millwrights'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ManicuristsInShops' generator='Manicurists (In Shops)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarineIndustryHarborMasters' generator='Marine Industry, Harbor Masters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MatchFactoriesForemen' generator='Match Factories, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MatchFactoriesSupervisoryDutiesOnly' generator='Match Factories, Supervisory Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MattressAndPillowFactoriesAllOthers' generator='Mattress And Pillow Factories, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MattressAndPillowFactoriesForemen' generator='Mattress And Pillow Factories, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AuctioneersOthers' generator='Auctioneers, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MattressPillowFactoriesSupervisoryDutiesOnly' generator='Mattress/Pillow Factories, Supervisory Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MessengerArmedOrUsingMotorcycle' generator='Messenger--Armed Or Using Motorcycle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MessengersBanksUnarmed' generator='Messengers--Banks, Unarmed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalIndustryTradesNotOtherwiseClassifiedSkilled' generator='Metal Industry/Trades--Not Otherwise Classified, Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalIndustryTradeNotOtherClassifiedForemen' generator='Metal Industry/Trade--Not Other Classified, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalIndustryTradeNotOtherwiseClassifiedOffice' generator='Metal Industry/Trade-Not Otherwise Classified, Office'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalIndustryTradesNotOtherwiseClassifiedEngineer' generator='Metal Industry/Trades--Not Otherwise Classified, Engineer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetallurgistsOfficeDutiesOnly' generator='Metallurgists--Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Meteorologists' generator='Meteorologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MeterReaders' generator='Meter Readers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Audiologists' generator='Audiologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MicaMillsSkilledWorkers' generator='Mica Mills, Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MicaMillsSupervisoryDuties' generator='Mica Mills, Supervisory Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MidwivesIndividConsiderationConsultHomeOffice' generator='Midwives--Individ Consideration, Consult Home Office'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Millwrights' generator='Millwrights'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Minister' generator='Minister'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiningQuarryDressingConcentratingSurfaceOperator' generator='Mining/Quarry/Dressing/Concentrating Surface Operator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiningQuarryingSurfaceOperatorOfficeDutyOnly' generator='Mining/Quarrying Surface Operator, Office Duty Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiningQuarryingOreSurfaceOperatorOtherSkilled' generator='Mining/Quarrying/Ore-Surface Operator, Other Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiningQuarryingOreConcentratingSurfaceOperators' generator='Mining/Quarrying/Ore/Concentrating Surface Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MonumentIndustryCarversEngraversSetters' generator='Monument Industry, Carvers, Engravers, Setters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ActuariesASAOrFSA' generator='Actuaries, ASA Or FSA'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Auditor' generator='Auditor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotionPictureTheaterIndustryDirectorProducers' generator='Motion Picture/Theater Industry, Director/Producers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotionPictureTheaterManagementPersonnelOffice' generator='Motion Picture/Theater, Management Personnel, Office'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotionPictureTheaterProjectionistInTheaterBo' generator='Motion Picture/Theater, Projectionist In Theater,Bo'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotionPictureTheaterTheaterManagerProprietors' generator='Motion Picture/Theater, Theater Manager/Proprietors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Movers' generator='Movers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MusicianSoleOccupationConcertTheaterSymphony' generator='Musician (Sole Occupation),Concert/Theater/ Symphony'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Neonatologists' generator='Neonatologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nephrologists' generator='Nephrologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NeuroSurgeons' generator='Neuro Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Neurologists' generator='Neurologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryDealerOwnerSalesNewVehicles' generator='Automobile Industry Dealer/Owner, Sales,-New Vehicles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewsAndMagazineDealersLightDelivery' generator='News And Magazine Dealers, Light Delivery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewsMagazineDealerNewsstandInsideDuties' generator='News/Magazine Dealer, Newsstand Inside Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewspapersDelivery' generator='Newspapers, Delivery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewspapersEditorsOfficeClerks' generator='Newspapers, Editors, Office Clerks'>
      <Description>May also be classified as -- 263 OLI_EMPTYPE_EDITOR</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewspapersHelpers' generator='Newspapers, Helpers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewspapersReportersPhotographersNoFlying' generator='Newspapers, Reporters, Photographers (No Flying)'>
      <Description>May also be classified as -- 649 OLI_EMPTYPE_REPORTERNEWS</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NuclearMedicine' generator='Nuclear Medicine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ObGyn' generator='Ob-Gyn'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Obstetricians' generator='Obstetricians'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OccupationalTherapists' generator='Occupational Therapists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryManufacturingAssemblerMachinist' generator='Automobile Industry Manufacturing,Assembler/Machinist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OfficeClerkTypistStenographerGeneralOfficeHelp' generator='Office Clerk (Typist,Stenographer,General Office Help)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OfficeMachineOperatorsOfficeDutiesOnly' generator='Office Machine Operators (Office Duties Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilVegetableMillRefineryAllProcessesSkilled' generator='Oil (Vegetable) Mill/Refinery All Processes, Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilVegetableMillRefinerySuperintendentChemist' generator='Oil (Vegetable) Mill/Refinery Superintendent/Chemist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilVegetableMillRefineryUnskilledWorkers' generator='Oil(Vegetable)Mill/Refinery, Unskilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilNaturalGasIndustryFireProtectionDeptInspector' generator='Oil/Natural Gas Industry Fire Protection Dept/Inspector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilNaturalGasIndustryGeneralBossChemistProcess' generator='Oil/Natural Gas Industry General, Boss/Chemist Process'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilNaturalGasIndustryGeneralOtherSkilledWork' generator='Oil/Natural Gas Industry General, Other Skilled Work'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilNaturalGasIndustryGeneralChemistInLab' generator='Oil/Natural Gas Industry General/Chemist In Lab'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OilersNonHazardousIndustries' generator='Oilers, Non-Hazardous Industries'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryDealerSalesmenNewVehicle' generator='Automobile Industry Dealer/Salesmen New Vehicle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Oncologists' generator='Oncologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OphthalmicSurgeons' generator='Ophthalmic Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ophthalmologists' generator='Ophthalmologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OpticianOculistSellingAndFiningDutiesOnly' generator='Optician, Oculist, Selling And Fining Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OpticiansOculists' generator='Opticians, Oculists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OptometristsNoSellingDuties' generator='Optometrists (No Selling Duties)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OralSurgeons' generator='Oral Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Orthodontists' generator='Orthodontists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OrthopedicSurgeons' generator='Orthopedic Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Orthopedists' generator='Orthopedists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryDealerSalesmenUsedVehicles' generator='Automobile Industry Dealer/Salesmen, Used Vehicles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OrthotistsProsthetistsSalesFitters' generator='Orthotists, Prosthetists; Sales, Fitters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Osteopaths' generator='Osteopaths'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtolaryngolicSurgeons' generator='Otolaryngolic Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Otolaryngologists' generator='Otolaryngologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaintVarnishLacquerManufactureForemenSkilledWorker' generator='Paint/Varnish/Lacquer Manufacture, Foremen, Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaintVarnishLacquerManufactureUnskilledWorkers' generator='Paint/Varnish/Lacquer Manufacture, Unskilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaintVarnishManufactureSupervisoryDutiesOnly' generator='Paint/Varnish/Manufacture, Supervisory Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherShopPainterManufacturer' generator='Painter/Lacquerer/Varnisher Shop Painter, Manufacturer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherSignPainterOutside' generator='Painter/Lacquerer/Varnisher Sign Painter, Outside'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherSignPainterShopOnly' generator='Painter/Lacquerer/Varnisher Sign Painter, Shop Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryGarageFillingServiceManager' generator='Automobile Industry Garage/Filling&amp;Service, Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherSignPainterStructural' generator='Painter/Lacquerer/Varnisher Sign Painter, Structural'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherBridgeRailroad' generator='Painter/Lacquerer/Varnisher, Bridge &amp; Railroad'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherHighwayDirectLineSi' generator='Painter/Lacquerer/Varnisher, Highway-Direct Line/Si'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherHousePainters' generator='Painter/Lacquerer/Varnisher, House Painters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PainterLacquererVarnisherShipPainterHullInterest' generator='Painter/Lacquerer/Varnisher, Ship Painter (Hull/Interest)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaperHangers' generator='Paper Hangers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaperPulpIndustriesSuperintendentsAndForemen' generator='Paper/Pulp Industries, Superintendents And Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paralegal' generator='Paralegal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ParksCityStateNationalAdministrationEmployees' generator='Parks (City/State/National) Administration Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ParksCityStateNationalMaintenanceOperating' generator='Parks (City/State/National) Maintenance &amp; Operating'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryGarageFillingandServiceOtherDuties' generator='Automobile Industry Garage/Filling and Service,Other Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ParksCityStateNationalSuperintendentSupervisor' generator='Parks (City/State/National), Superintendent-Supervisor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pastor' generator='Pastor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pathologists' generator='Pathologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PatternModelMakersMetalWoodPaperWax' generator='Pattern/Model Makers (Metal, Wood, Paper, Wax)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pawnbrokers' generator='Pawnbrokers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymasters' generator='Paymasters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pediatricians' generator='Pediatricians'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pedodontists' generator='Pedodontists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Perfusionists' generator='Perfusionists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Periodontists' generator='Periodontists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryManufacturingSupervisoryOnly' generator='Automobile Industry Manufacturing, (Supervisory Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PersonnelRecruiter' generator='Personnel Recruiter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PharmacistRegisteredClinicalHospitalResearch' generator='Pharmacist, Registered--Clinical,Hospital,Research'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PharmacistsRegisteredDrugStore' generator='Pharmacists, Registered - Drug Store'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhotographerCameramenNewspaperNewsreelMotionPicture' generator='Photographer/Cameramen, Newspaper/Newsreel/Motion Picture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhotographerCameramenXRayTechnicians' generator='Photographer/Cameramen, X-Ray Technicians'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhotographersAndCameramenCommercialStudio' generator='Photographers And Cameramen, Commercial (Studio)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhotostatOperators' generator='Photostat Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Physiatrists' generator='Physiatrists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhysicianRehabilitationMedicine' generator='Physician - Rehabilitation Medicine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryManufacturingForeman' generator='Automobile Industry Manufacturing, Foreman'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhysiciansAssistants' generator='Physician&apos;s Assistants'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Physicists' generator='Physicists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Physiotherapists' generator='Physiotherapists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PianoRepairersOrTuners' generator='Piano Repairers Or Tuners'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PileDriverOperators' generator='Pile Driver Operators'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PipefittersNonHazardousIndustries' generator='Pipefitters--Non-Hazardous Industries'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plasterers' generator='Plasterers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticIndustryArticleManufactureSkilledWorker' generator='Plastic Industry Article Manufacture, Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticIndustryArticlesManufUnskilledWorkers' generator='Plastic Industry Articles Manuf, Unskilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticIndustryPlasticForemenNitratingDept' generator='Plastic Industry Plastic Foremen: Nitrating Dept'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileIndustryTestersShop' generator='Automobile Industry Testers, Shop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticIndustryPlasticManufactureForemenSupervisory' generator='Plastic Industry Plastic Manufacture Foremen/Supervisory'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticIndustryPlasticManufactureBakerCoolerm' generator='Plastic Industry Plastic Manufacture, Baker/ Coolerm'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticSurgeons' generator='Plastic Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticsIndustryArticlesManufactureForemen' generator='Plastics Industry Articles Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticsIndustryPlasticManufactureOthers' generator='Plastics Industry Plastic Manufacture, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlaterElectroplaterGalvanizerTinners' generator='Plater (Electroplater/Galvanizer/Tinners)'>
      <Description>May also be classified as -- 287 OLI_EMPTYPE_ELECTRPLATER or 353 OLI_EMPTYPE_GALVANIZER</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plumbers' generator='Plumbers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Podiatrists' generator='Podiatrists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoliceLawEnforcementOfficerAllOtherEmployees' generator='Police/Law Enforcement Officer All Other Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoliceLawEnforcementOfficerProbationTruantOfficer' generator='Police/Law Enforcement Officer Probation/Truant Officer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ActuaryOthers' generator='Actuary, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AwningIndustryErectorHangerInstaller' generator='Awning Industry, Erector, Hanger, Installer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoliceLawEnforcementOfficerArmed' generator='Police/Law Enforcement Officer, Armed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoliceLawEnforcementOfficerUnarmed' generator='Police/Law Enforcement Officer, Unarmed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoliceLawEnforcementOfficerWardens' generator='Police/Law Enforcement Officer, Wardens'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PotteryChinaEarthenwareGlazedBrickAllOthers' generator='Pottery (China/Earthenware/Glazed Brick), All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PotteryChinaEarthenwareGlazedBrickDecorating' generator='Pottery (China/Earthenware/Glazed Brick), Decorating'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PotteryChinaEarthenwareGlazedBrickForemen' generator='Pottery China/Earthenware/Glazed Brick,Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PotteryChinaEarthenwareGlazedBrickInspectors' generator='Pottery China/Earthenware/Glazed Brick,Inspectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoultryDealerDresserRaiserOrBreeder' generator='Poultry--Dealer, Dresser, Raiser Or Breeder'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PowerShovelOperatorFiremenNonHazardousUsually' generator='Power Shovel Operator/Firemen, Non-Hazardous, Usually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PracticalNurseHospitalsAsylumsNdSanitariums' generator='Practical Nurse, Hospitals, Asylums, Nd Sanitariums'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AwningIndustryMaker' generator='Awning Industry, Maker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Priest' generator='Priest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrimaryCareMDS' generator='Primary Care MD&apos;S'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrintingAndPublishingAllOthers' generator='Printing And Publishing, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrintingAndPublishingOfficeDutiesOnly' generator='Printing And Publishing, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Proctologists' generator='Proctologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Proofreaders' generator='Proofreaders'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Prosthodontists' generator='Prosthodontists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Psychiatrists' generator='Psychiatrists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Psychologists' generator='Psychologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PublicityAgentOrManagers' generator='Publicity Agent Or Managers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bacteriologists' generator='Bacteriologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pulmonologists' generator='Pulmonologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PurchasingAgent' generator='Purchasing Agent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rabbi' generator='Rabbi'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionBroadcastControlMaintenanceEngineer' generator='Radio/Television Broadcast Control: Maintenance Engineer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionBroadcastTransmitOperatorEngineer' generator='Radio/Television Broadcast Transmit: Operator/Engineer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionBroadcastingControlChiefEngineer' generator='Radio/Television Broadcasting Control: Chief Engineer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionBroadcastingTransmitSupervisors' generator='Radio/Television Broadcasting Transmit: Supervisors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionIndustryBroadcastingStudioAnnouncer' generator='Radio/Television Industry Broadcasting Studio: Announcer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionIndustryManufactureProprietors' generator='Radio/Television Industry Manufacture, Proprietors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionIndustrySalesRepairingAllOther' generator='Radio/Television Industry Sales/Repairing, All Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BailiffsCourtDuties' generator='Bailiffs, Court Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionIndustrySalesRepairingClerical' generator='Radio/Television Industry Sales/Repairing, Clerical'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionManufacturingAllOthers' generator='Radio/Television Manufacturing, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadioTelevisionManufacturingSupervisorForemen' generator='Radio/Television Manufacturing, Supervisor/Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Radiologists' generator='Radiologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadiumOreReductionRefiningChemistLabWorkers' generator='Radium Ore Reduction &amp; Refining, Chemist/Lab Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadiumOreReductionRefiningWatchDialPainters' generator='Radium Ore Reduction &amp; Refining, Watch/Dial Painters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RailroadsExecutivesAndOfficeWorkers' generator='Railroads, Executives And Office Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RealEstateDeveloper' generator='Real Estate Developer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RealEstateSalesperson' generator='Real Estate Salesperson'>
      <Description>Unclassified Real Estate sales, may not be licensed</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReceivingOrShippingClerksAllOthers' generator='Receiving Or Shipping Clerks, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BakeriesShopsAndFactoriesAllOthers' generator='Bakeries (Shops And Factories), All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReceivingOrShippingClerksLightGoodsOnly' generator='Receiving Or Shipping Clerks, Light Goods Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RefrigeratorManufactureChargingPurifyingRefrigerants' generator='Refrigerator Manufacture, Charging/Purifying Refrigerants'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RegisteredNursesDoctorsOfficeOnly' generator='Registered Nurses, Doctor&apos;s Office Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RegisteredNursesHospitalsAsylumsSanitariums' generator='Registered Nurses, Hospitals, Asylums, &amp; Sanitariums'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RegisteredNursesPrivateDuty' generator='Registered Nurses, Private Duty'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenderingPlantAnimalFishChemistLabAssistant' generator='Rendering Plant (Animal/Fish)--Chemist/Lab Assistant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenderingPlantAnimalFishNotSlaughterPacking' generator='Rendering Plant (Animal/Fish)--Not Slaughter/Packing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenderingPlantAnimalsFishAllOthers' generator='Rendering Plant (Animals/Fish)--All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReportersCourtReporter' generator='Reporters, Court Reporter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReportersNewspaper' generator='Reporters, Newspaper'>
      <Description>May also be classified as -- 515 OLI_EMPTYPE_NEWSREPORTER</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BakeryShopFactorySuperintendentForemenManager' generator='Bakery (Shop/Factory), Superintendent/Foremen/Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RestaurantMainlyLiquorProprietorsNotBarTending' generator='Restaurant Mainly Liquor,Proprietors, Not Bar Tending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RestaurantMostlyLiquorSalesAllOthers' generator='Restaurant Mostly Liquor Sales, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorProprietorTendBar' generator='Restaurant 1st Class 2nd Liquor Proprietor/Tend Bar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorSaleProprietorMan' generator='Restaurant 1st Class 2nd Liquor Sale Proprietor/Man'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorSaleTendingBar' generator='Restaurant 1st Class 2nd Liquor Sale Tending Bar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorSaleWaitersKitchen' generator='Restaurant 1st Class 2nd Liquor Sale Waiters/Kitchen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorSaleHeadWaiterMatred' generator='Restaurant 1st Class 2nd Liquor Sale, Head Waiter/Matre&apos;d'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorSalePropSupervising' generator='Restaurant 1st Class 2nd Liquor Sale,Prop,Supervising'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Restaurant1stClass2ndLiquorHeadChefSupervising' generator='Restaurant 1st Class 2nd Liquor,Head Chef, Supervising'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RetailOutletStoreClerksUsually' generator='Retail Outlet--Store Clerks, Usually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BankArmoredCarGuardOtherArmedPersonnelCollector' generator='Bank, Armored Car Guard/Other Armed Personnel, Collector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RetinalSurgeons' generator='Retinal Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rheumatologist' generator='Rheumatologist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RiggersAllOthers' generator='Riggers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RiggersMotionPictureStudiosSignErectors' generator='Riggers, Motion Picture Studios, Sign Erectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RockWoolAllOthers' generator='Rock Wool, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RockWoolInsulatingBuildingManufacturingForemen' generator='Rock Wool,Insulating Building, Manufacturing-Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RoofingMaterialManufactureAsphaltAsbestosForemen' generator='Roofing Material Manufacture Asphalt/Asbestos, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RoofingMaterialManufactureAsphaltAsbestosOther' generator='Roofing Material Manufacture Asphalt/Asbestos, Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RubberProductsManufactureSuperintendentChemist' generator='Rubber Products Manufacture, Superintendent/Chemist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RubberRubberProductManufactureAllOthers' generator='Rubber/Rubber Product Manufacture, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BanksMessengersUnarmed' generator='Banks, Messengers (Unarmed)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RubberRubberProductManufactureForemen' generator='Rubber/Rubber Product Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SafeAndMachineryMovers' generator='Safe And Machinery Movers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SafetyEngineersNonHazardousIndustries' generator='Safety Engineers-Non-Hazardous Industries'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalesmenOfficeOutsideSolicitingNoDelivering' generator='Salesmen, Office &amp; Outside Soliciting, No Delivering'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalesmenFullTimeDeliveringByLightTruckVan' generator='Salesmen--Full Time--Delivering By Light Truck/Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalesmenFullTimeInstallingRepairingServicing' generator='Salesmen--Full Time--Installing/Repairing/Servicing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalesmenFullTimeSolicitingDeliveryByAutoOnly' generator='Salesmen--Full Time-Soliciting/Delivery By Auto Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SandblasterBuildingCleanerGlassPotteryStone' generator='Sandblaster, Building Cleaner/Glass/Pottery/Stone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolPrincipalSuperintendentsAdministrativeOffice' generator='School, Principal/Superintendents/Administrative Office'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SeamstressesAndDressmakersInShop' generator='Seamstresses And Dressmakers, In Shop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BanksOfficers' generator='Banks, Officers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SewerSewageDisposalCesspoolWorkerInspectorForman' generator='Sewer/Sewage Disposal/Cesspool Worker Inspector, Forman'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SewerSewageDisposalCesspoolWorkersOthers' generator='Sewer/Sewage Disposal/Cesspool Workers, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SewingMachineOperatorsAndRepairmen' generator='Sewing Machine Operators And Repairmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sextons' generator='Sextons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SheetMetalWorkersTinsmithsOthers' generator='Sheet Metal Workers, Tinsmiths, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SheetMetalWorkersTinsmithsShopWorkOnly' generator='Sheet Metal Workers, Tinsmiths, Shop Work Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShoeManufactureRepairFactoryWorkerAllSkilled' generator='Shoe Manufacture/Repair Factory Worker, All Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShoeManufactureRepairFactoryUnskilledEmployees' generator='Shoe Manufacture/Repair Factory, Unskilled Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShoeManufactureRepairNonFactoryShoemakerRepair' generator='Shoe Manufacture/Repair Non-Factory, Shoemaker/Repair'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BanksTellersClerks' generator='Banks, Tellers, Clerks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SignBillboardErectorBuilderBenchWorkOnly' generator='Sign/Billboard Erector/Builder, Bench Work Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SignBillboardErectorsOrBuildersAllOthers' generator='Sign/Billboard Erectors Or Builders, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SilverPolishers' generator='Silver Polishers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Silversmiths' generator='Silversmiths'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SlotMachineLegalCollectorDistributorRepairer' generator='Slot Machine (Legal), Collector/Distributor/Repairer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SoapAndDetergentManufactureAllOthers' generator='Soap And Detergent Manufacture, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SoapDetergentManufactureWorkmenAbrasiveGrinding' generator='Soap/Detergent Manufacture, Workmen,Abrasive Grinding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SocialWorkersAllOthers' generator='Social Workers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SocialWorkersOfficeDutiesOnly' generator='Social Workers, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolderMakers' generator='Solder Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Acupuncturists' generator='Acupuncturists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BarbersProprietorsAndJourneymen' generator='Barbers, Proprietors And Journeymen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolderersNonHazardousIndustriesUsually' generator='Solderers, Non-Hazardous Industries, Usually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpeechTherapists' generator='Speech Therapists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpiceGrindersAndPackers' generator='Spice Grinders And Packers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsProOwnerManagerCoachScoutNonPart' generator='Sports (Pro)Owner/Manager/Coach/Scout (Non-Part)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsAthleticInstructorDirectorSchoolCollege' generator='Sports Athletic Instructor/Director, School/College'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsBeachPoolBilliardBowlingAlleyAttendants' generator='Sports Beach/Pool/Billiard/Bowling Alley, Attendants'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsBeachPoolBilliardBowlingProprietorManager' generator='Sports Beach/Pool/Billiard/Bowling Proprietor/Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsDanceHallSkatingProprietorManagerFulltime' generator='Sports Dance Hall/Skating, Proprietor/Manager, Fulltime'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsRacingAutomobileMechanicsNoDriving' generator='Sports Racing Automobile:  Mechanics, No Driving'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsRacingHorseAndDogParimutuelClerks' generator='Sports Racing Horse And Dog:  Parimutuel Clerks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BeautyParlorsAwayFromHome' generator='Beauty Parlors, Away From Home'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsRacingHorseDogStarterJudgeStewardOffice' generator='Sports Racing Horse/Dog: Starter/Judge/Steward/Office'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsRidingSchoolProprietorManagerSupervision' generator='Sports Riding School, Proprietor/Manager (Supervision)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsRidingSchoolsInstructors' generator='Sports Riding Schools, Instructors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StartersTaxicabElevator' generator='Starters, Taxicab, Elevator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StationaryEngineerFiremenNonHazardousIndustry' generator='Stationary Engineer/Firemen, Non-Hazardous Industry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Statistician' generator='Statistician'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SteamfitterNonhazardousIndustriesUsually' generator='Steamfitter--Non-hazardous Industries, Usually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stenographers' generator='Stenographers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StockAndBondBrokersOrSalespeople' generator='Stock And Bond Brokers Or Salespeople'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StockClerkKeeperChaserLightGoodsOnly' generator='Stock Clerk/Keeper/Chaser, Light Goods Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BeverageManufactureNonAlcoholicSkilledWorker' generator='Beverage Manufacture Non-Alcoholic, Skilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StockClerksKeepersOrChasersAllOthers' generator='Stock Clerks, Keepers Or Chasers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StockyardSlaughterPackingHouseSuperintendent' generator='Stockyard/Slaughter/Packing House Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StockyardSlaughterPackingHouseCommissionMen' generator='Stockyard/Slaughter/Packing House, Commission Men'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StoneIndustryOtherStoneAllOthers' generator='Stone Industry Other Stone, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StoneIndustryOtherStoneForemen' generator='Stone Industry Other Stone, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StreetCleaningAllOthersIncludingDrivers' generator='Street Cleaning, All Others Including Drivers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StreetCleaningForemenInspectors' generator='Street Cleaning, Foremen (Inspectors)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SugarRefineryStarchAndCornProductsForemen' generator='Sugar Refinery (Starch And Corn Products), Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SugarRefineryStarchCornProductSuperintendent' generator='Sugar Refinery (Starch/Corn Product), Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SugarRefineryStarchCornProductsAllOthers' generator='Sugar Refinery (Starch/Corn Products), All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BeverageManufactureNonAlcoholicSuperintendent' generator='Beverage Manufacture Non-Alcoholic, Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SugarRefineryStarchCornKilnCleanerUnskilled' generator='Sugar Refinery (Starch/Corn), Kiln Cleaner/ Unskilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurveyorsNonhazardousIndustriesUsually' generator='Surveyors, Non-hazardous Industries, Usually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TailorWorkingAwayFromHomeNotPressingCleaning' generator='Tailor (Working Away From Home), Not Pressing/Cleaning'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TailorsWorkingAwayFromHomeGeneralDuties' generator='Tailors (Working Away From Home), General Duties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TalcIndustryMillsAllOtherWorkers' generator='Talc Industry Mills, All Other Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TalcIndustryMillsForemenSkilledWorkers' generator='Talc Industry Mills, Foremen, Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TaxicabDrivers' generator='Taxicab Drivers'>
      <Description>May also be classified as -- 249 OLI_EMPTYPE_DRIVERTAXI</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Taxidermists' generator='Taxidermists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TeacherSchoolCollegeFulltimeEmployment' generator='Teacher, School/College (Fulltime Employment)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TeacherSchoolCollegeParttimeEmployment' generator='Teacher, School/College (Part-time Employment)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BeverageManufactureNonAlcoholicUnskilledWorker' generator='Beverage Manufacture Non-Alcoholic, Unskilled Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TeacherSchoolCollegeFTAgriAnimalHusbandry' generator='Teacher,School/College (F/T)-Agri/Animal Husbandry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelegraphAndTelephoneInsideWorkersAllOthers' generator='Telegraph And Telephone Inside Workers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelegraphTelephoneInsideWorkerInspectorInstaller' generator='Telegraph/Telephone Inside Worker/Inspector/Installer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelegraphTelephoneInsideWorkerOperatorExchange' generator='Telegraph/Telephone Inside Worker/Operator/Exchange'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelegraphTelephoneInsideWorkerRepairmen' generator='Telegraph/Telephone Inside Worker/Repairmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelegraphTelephoneOutsideLineConstructMaintenance' generator='Telegraph/Telephone Outside Line Construct/Maintenance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TentMakers' generator='Tent Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TextileIndustryInspectorsGradersSorters' generator='Textile Industry, Inspectors, Graders, Sorters'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TextileIndustryOtherSkilledWorkers' generator='Textile Industry, Other Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BicycleIndustryAllOthers' generator='Bicycle Industry, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TextileIndustrySuperintendentsAndForeman' generator='Textile Industry, Superintendents And Foreman'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ThoracicSurgeons' generator='Thoracic Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TicketAgentsOfficeDutiesOnly' generator='Ticket Agents (Office Duties Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TileLayersSettersPipersOrDrainsOrRoofers' generator='Tile Layers/Setters, Pipers Or Drains Or Roofers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Timekeepers' generator='Timekeepers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TinsmithsOthers' generator='Tinsmiths, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TinsmithsShopWorkOnly' generator='Tinsmiths, Shop Work Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TobaccoManufactureAuctioneerBuyerInspectors' generator='Tobacco Manufacture, Auctioneer/Buyer/Inspectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BicycleIndustryDealerSalesNoAssemblyOrRepair' generator='Bicycle Industry, Dealer, Sales-No Assembly Or Repair'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TobaccoManufactureOtherSkilledWorkers' generator='Tobacco Manufacture, Other Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TollCollectors' generator='Toll Collectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Topographers' generator='Topographers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TourDirectorsOrConductors' generator='Tour Directors Or Conductors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrafficManagersOfficeDutiesOnly' generator='Traffic Managers (Office Duties Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TravelAgencyAgents' generator='Travel Agency, Agents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TravelAgencyProprietors' generator='Travel Agency, Proprietors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TreeWorkersFumigatorsAndSprayers' generator='Tree Workers, Fumigators And Sprayers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TreeWorkersSurgeonsAndTrimmers' generator='Tree Workers, Surgeons And Trimmers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurpentineIndustryAllOthers' generator='Turpentine Industry, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BillPoster' generator='Bill Poster'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TurpentineIndustrySuperintendents' generator='Turpentine Industry, Superintendents'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Typists' generator='Typists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UmbrellaMakersOrRepairers' generator='Umbrella Makers Or Repairers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralIndustryUndertakersAssistantsAndEmbalmers' generator='Funeral Industry, Undertakers, Assistants And Embalmers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UndertakersOthers' generator='Undertakers, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UndertakersProprietorsNotEmbalming' generator='Undertakers, Proprietors (Not Embalming)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnemployedRetired' generator='Unemployed, Retired'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Upholsterers' generator='Upholsterers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UrologicalSurgeons' generator='Urological Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Urologists' generator='Urologists'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BiochemistsOfficeDutiesOnly' generator='Biochemists, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VacuumCleanerDealerSalesmenNoRepairingDelivery' generator='Vacuum Cleaner Dealer/Salesmen, No Repairing, Delivery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VacuumCleanerDealersAndSalesmenRepairing' generator='Vacuum Cleaner Dealers And Salesmen, Repairing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VascularSurgeons' generator='Vascular Surgeons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VendingMachineLegalCollectorFillerInstallers' generator='Vending Machine (Legal) Collector/Filler/ Installers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VenetianBlindsInstaller' generator='Venetian Blinds--Installer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VenetianBlindsMakersOrRepairers' generator='Venetian Blinds--Makers Or Repairers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VeterinarianDVMLargeAnimals' generator='Veterinarian (DVM)--Large Animals'>
      <Description>May also be classified as -- 441 OLI_EMPTYPE_KENNELVETLARGE</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VeterinariansDVMSmallAnimals' generator='Veterinarians (DVM)--Small Animals'>
      <Description>May also be classified as -- 442 OLI_EMPTYPE_KENNELVETPET</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VinegarMakers' generator='Vinegar Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ViolinMakersOrRepairers' generator='Violin Makers Or Repairers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BiochemistsOthers' generator='Biochemists, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WallPaperDesigners' generator='Wall Paper, Designers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WallPaperHangersOrPrinters' generator='Wall Paper, Hangers Or Printers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WallPaperMakers' generator='Wall Paper, Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WarehousemenAllOtherWarehouseEmployees' generator='Warehousemen, All Other Warehouse Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WarehousemenCheckerCraterForemenOrPackers' generator='Warehousemen, Checker/Crater/Foremen Or Packers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WarehousemenCheckersNotHandlingGoods' generator='Warehousemen, Checkers, Not Handling Goods'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WashingMachineDealerSalesmenNotDeliveryRepair' generator='Washing Machine, Dealer/Salesmen, Not Delivery/Repair'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WashingMachineDeliveringOrRepairing' generator='Washing Machine, Delivering Or Repairing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WatchWatchCasesMakerRepairerHandToolsOnly' generator='Watch/Watch Cases, Maker/Repairer, Hand Tools Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WatchesOrWatchCasesTestersInFactory' generator='Watches Or Watch Cases, Testers, In Factory'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdjustersFireAndMarine' generator='Adjusters, Fire And Marine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BiologistsOfficeDutiesOnly' generator='Biologists, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WatchesWatchCaseMakerRepairerUsingOtherTool' generator='Watches/Watch Case, Maker/Repairer, Using Other Tool'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Watchmen' generator='Watchmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterMetersInstallersRepairersOrTesters' generator='Water Meters, Installers, Repairers, Or Testers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterMetersReadersOrInspectors' generator='Water Meters, Readers Or Inspectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterWorksAllOthersEmployees' generator='Water Works, All Others Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterWorksFiltermenOrPumpmen' generator='Water Works, Filtermen Or Pumpmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterWorksSuperintendentSuperintendingOnly' generator='Water Works, Superintendent (Superintending Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeatherObservers' generator='Weather Observers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeighersNotOtherwiseClassified' generator='Weighers, Not Otherwise Classified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeighersOfficeDutiesOnly' generator='Weighers, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BiologistsOthers' generator='Biologists, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeldersAndCuttersNoUnusualHazard' generator='Welders And Cutters (No Unusual Hazard)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WelfareWorkersAllOthers' generator='Welfare Workers, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WelfareWorkersOfficeDutiesOnly' generator='Welfare Workers, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WellNotGasOilSaltBorerDiggersNoExplosive' generator='Well (Not Gas/Oil/Salt), Borer/Diggers, No Explosive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WheelwrightsNotUsingMachinery' generator='Wheelwrights, Not Using Machinery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WheelwrightsUsingMachinery' generator='Wheelwrights, Using Machinery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WhiteLeadManufactureAllOthers' generator='White Lead Manufacture, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WhiteLeadManufactureForemen' generator='White Lead Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WhiteLeadManufactureSuperintendentChemist' generator='White Lead Manufacture, Superintendent/Chemist'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WigMakers' generator='Wig Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BlacksmithsNoUnusualHazard' generator='Blacksmiths (No Unusual Hazard)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WindowIndustryCleanerInsideGroundFloorOnly' generator='Window Industry, Cleaner Inside/Ground Floor Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WindowIndustryDresserTrimmerShadeMakerHanger' generator='Window Industry, Dresser/Trimmer, Shade Maker/Hanger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WindowIndustryScreenMakersOrInstallers' generator='Window Industry, Screen Makers Or Installers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WireFenceErectors' generator='Wire Fence Erectors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WireMillWorkerAnnealerDrawerOilerLaborers' generator='Wire Mill Worker, Annealer/Drawer/Oiler/Laborers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WireMillWorkersAllOtherMillEmployees' generator='Wire Mill Workers, All Other Mill Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WirelessAndRadioOperatorsShoreStations' generator='Wireless And Radio Operators, Shore Stations'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WirelessRadioOperatorLighthouseMainlandOnly' generator='Wireless/Radio Operator, Lighthouse--Mainland Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='XRayOperatorsSalesmenTechnicians' generator='X-Ray, Operators, Salesmen, Technicians'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='XRayRepairmenServicemenTesters' generator='X-Ray, Repairmen, Servicemen, Testers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoilerManufactureInstallationMaintenanceInspector' generator='Boiler Manufacture, Installation/Maintenance, Inspector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YarnMakers' generator='Yarn Makers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YeastMakerSuperintendentForemenSupervisingOnly' generator='Yeast Maker, Superintendent/Foremen (Supervising Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YeastMakersProcessWorkers' generator='Yeast Makers, Process Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YeastMakersUnskilledWorkers' generator='Yeast Makers, Unskilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YMCASimilarOrganizationsOfficersDirectors' generator='YMCA/Similar Organizations, Officers, Directors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YMCASimilarOrganizationsPhysicalDirectors' generator='YMCA/Similar Organizations, Physical Directors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ZoosZooDirectorNoContactWithAnimals' generator='Zoos, Zoo Director (No Contact With Animals)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ZoosZooKeeper' generator='Zoos, Zoo Keeper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fireman' generator='Fireman'>
      <Description>A person whose work is to extinguish fires. A member of a Fire Department.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Astronaut' generator='Astronaut'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoilerManufactureInstallationMaintenanceCleaner' generator='Boiler Manufacture/Installation/Maintenance, Cleaner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pilot' generator='Pilot'>
      <Description>A person who is trained to fly airplanes, airships, or hot air balloons.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pyrotechnist' generator='Pyrotechnist'>
      <Description>A person who is skilled in the art of creating and using fireworks</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Detective' generator='Detective'>
      <Description>A person whose work involves investigating and trying to solve crimes, including participation on stake outs for suspected persons.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AnimalTrainer' generator='Animal Trainer'>
      <Description>A person who trains or exhibits animals. Includes Horse Trainer, Dog Trainer, or Tamer.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoalMiner' generator='Coal Miner'>
      <Description>A person who works in a coal mine. Also commonly known as a collier, or pitman.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AbrasivesManufacture' generator='Abrasives Manufacture'>
      <Description>A person working in the manufacture of silica abrasives.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AcidManufacture' generator='Acid Manufacture'>
      <Description>A person working in the manufacture of hydrochloric, hydrocyanic, hydrofluoric, nitric, picric, sulphurous or sulphuric acids.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Aquanics' generator='Aquanics'>
      <Description>Divers involved in deep-water diving for construction, salvage, search and rescue, military or scientific or exploration.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AviationMilitary' generator='Aviation (Military)'>
      <Description>Risk depends on age and type of aircraft flown.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuildingDemolition' generator='Building Demolition'>
      <Description>Involves demolition of buildings and other structures with exposure to the same hazards found in the erection of buildings plus the added danger of unsound structures which may collapse.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoilerManufactureInstallationMaintenanceForemen' generator='Boiler Manufacture/Installation/Maintenance, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Carnivalcircusandfairworker' generator='Carnival, circus and fair worker'>
      <Description>May include daredevil, trapeze or equestrian acts. Also includes general laborers or roustabouts.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeaponryChemicalandbiological' generator='Weaponry, Chemical and biological'>
      <Description>Engaged in research, development, testing, storage, disposal or transportation of various toxic agents.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stuntmen' generator='Stunt men'>
      <Description>Acting performers who may be involved in high-speed driving, leaps and dives and fire/explosive exposure.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExplosivesandMunitions' generator='Explosives and Munitions'>
      <Description>Manufacture, assembling, loading, testing and delivering of explosives and other elements for the preparation of ammunition for firing.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FiremanSmokeJumper' generator='Fireman, Smoke Jumper'>
      <Description>A fireman specializing in extinguishing forest fires.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FiremanOffshoreOilorGaswells' generator='Fireman, Off-shore Oil or Gas wells'>
      <Description>A fireman specializing in extinguishing fires on off-shore wells.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Commercialfisherman' generator='Commercial fisherman'>
      <Description>Commercial fisherman</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ForeignCorrespondentsorJournalists' generator='Foreign Correspondents or Journalists'>
      <Description>Journalist, news crew member or photographer whose assignments include foreign travel.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalIndustry' generator='Metal Industry'>
      <Description>Workers in heavy (iron and steel) and light (magnesium and aluminum) metal industries.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Military' generator='Military'>
      <Description>Those individuals on active duty in the military</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BondBrokersOrSalesmen' generator='Bond Brokers Or Salesmen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nuclearenergyindustry' generator='Nuclear energy industry'>
      <Description>Workers in nuclear reactors, power generating plants, isotope production, research and testing facilities and waste conversion.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Oilandnaturalgasindustry' generator='Oil and natural gas industry'>
      <Description>Workers involved in the exploration, drilling and production of oil and natural gas, at both on and off-shore locations.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Politicalappointments' generator='Political appointments'>
      <Description>Embassy personnel, foreign diplomats and governmental officials.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Professionalathletes' generator='Professional athletes'>
      <Description>Those whose primary avocation is that of a paid athlete.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lumberman' generator='Lumberman'>
      <Description>Boom men, high climbers, rafts men, riggers, river men, top men</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Student' generator='Student'>
      <Description>One who is enrolled or attends classes at a school, college, or university on a full time basis</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Homemaker' generator='Homemaker'>
      <Description>One who manages a household, as one's main daily activity</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ActorActress' generator='Actor/Actress'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomobileRacer' generator='Automobile Racer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bookmaker' generator='Bookmaker'>
      <Description>Gambler - taker of wagers</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BookingAgentsFullTimeWorkingOutOfOffice' generator='Booking Agents (Full-Time &amp; Working Out Of Office)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BridgeWorker' generator='Bridge Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CaissonWorker' generator='Caisson Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dancer' generator='Dancer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DiscJockey' generator='Disc Jockey'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Entertainer' generator='Entertainer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Exerciser' generator='Exerciser'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IronWorker' generator='Iron Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Jockey' generator='Jockey'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lineman' generator='Lineman'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MissileWorker' generator='Missile Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bookkeepers' generator='Bookkeepers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Model' generator='Model'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotorcycleRacer' generator='Motorcycle Racer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProfessionalRacer' generator='Professional Racer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RodeoPerformer' generator='Rodeo Performer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShipHullWorker' generator='Ship Hull Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StableHand' generator='Stable Hand'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Steeplejack' generator='Steeplejack'>
      <Description>One whose work is building smokestacks, towers, or steeples or climbing up the outside of such structures to paint and make repairs</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubwayWorker' generator='Subway Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TowerErector' generator='Tower Erector'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrottingHorseDriver' generator='Trotting Horse Driver'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoraxMillEmployeesNotInMinesSuperintendent' generator='Borax Mill (Employees Not In Mines), Superintendent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TunnelWorker' generator='Tunnel Worker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdjustersInsuranceNotFireOrMarine' generator='Adjusters, Insurance (Not Fire Or Marine)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoraxMillNotInMineAllOtherMillEmployees' generator='Borax Mill (Not In Mine), All Other Mill Employees'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoraxMillNotInMinesSuperintendentForemenMillEmployee' generator='Borax Mill(Not In Mines) Superintendent/Foremen Mill Employee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BotanistsOfficeDutiesOnly' generator='Botanists, Office Duties Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BotanistsOthers' generator='Botanists, Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrickManufactureForemenAndSkilledWorkers' generator='Brick Manufacture, Foremen And Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrickManufactureStackerBrickClayWheelerOtherLaborer' generator='Brick Manufacture, Stacker/Brick&amp;Clay Wheeler/Other Laborer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BricklayerMasonsNoUnusualHazard' generator='Bricklayer/Masons (No Unusual Hazard)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BriquetteManufactureAllOthers' generator='Briquette Manufacture, All Others'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BriquetteManufactureForemen' generator='Briquette Manufacture, Foremen'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrokerCommodityFuturesOptionsIndividualConsultant' generator='Broker, Commodity, Futures, Options--Individual Consultant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Administrator' generator='Administrator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Director' generator='Director'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Agronomist' generator='Agronomist'>
      <Description>Scientists who specialize in agronomy - the science of using plants for food, fuel, feed, and fiber. SOURCE: http://en.wikipedia.org/wiki/Agronomist.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirlinePersonnel' generator='Airline Personnel'>
      <Description>Including (but not limited to) flight attendants and customer service agents.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BanksAdministrative' generator='Banks Administrative'>
      <Description>Does not include management.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AllOtherOfficersAndEmployeeesNotListedAbove' generator='All Other Officers And Employeees Not Listed Above'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuyerGeneral' generator='Buyer (General)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cashier' generator='Cashier'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CrownCorporationEmployee' generator='Crown Corporation Employee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CreditClerk' generator='Credit Clerk'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Craftsman' generator='Craftsman'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChefGeneral' generator='Chef (General)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConsultantsHumanResources' generator='Consultants, Human Resources'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgricultureFarmOrchardRanchForemanOtherSkilledWorkers' generator='Agriculture (Farm/Orchard/Ranch) Foreman/Other Skilled Workers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Physician' generator='Physician'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.EstimateTypeCodeList' originalName='EstimateTypeCodeList' restricts='java.lang.String'>
    <Description>Estimate Type - A list of the various types of estimates that can be provided.</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InitialEstimatedCost' generator='Initial Estimated Cost'>
      <Description>The initial estimated cost.                                                  
Initial estimates are often kept to determine the success of estimating procedures</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InitialEstimatedDuration' generator='Initial Estimated Duration'>
      <Description>The initial estimated duration.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RevisedEstimatedCost' generator='Revised Estimated Cost'>
      <Description>The revised estimated cost.                                                  This should be able to be added multiple times</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RevisedEstimatedDuration' generator='Revised Estimated Duration'>
      <Description>The revised estimated duration.                                                  This should be able to be added multiple times.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.ExchangeTradedCodeList' originalName='ExchangeTradedCodeList' restricts='java.lang.String'>
    <Description>It identifies the Exchange upon which the organization is traded.</Description>
    <Enumerand isSynthetic='true' name='AmericanStockExchange' generator='American Stock Exchange'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Frankfurt' generator='Frankfurt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HongKong' generator='Hong Kong'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='London' generator='London'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NASDAQ' generator='NASDAQ'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewYorkStockExchange' generator='New York Stock Exchange'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sydney' generator='Sydney'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TelAviv' generator='Tel Aviv'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tokyo' generator='Tokyo'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Toronto' generator='Toronto'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Zurich' generator='Zurich'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList' originalName='FinancialMediumTypeCodeList' restricts='java.lang.String'>
    <Description>Payment Form</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cash' generator='Cash'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateCheck' generator='Corporate Check'>
      <Description>Check is drawn from a corporately owned account.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Clearinghouse' generator='Clearinghouse'>
      <Description>Money Settlement via a third Party Clearing firm i.e.. NSCC</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wire' generator='Wire'>
      <Description>Funds are electronically Wired</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fundstofollow' generator='Funds to follow'>
      <Description>The funds will follow, payment method will define whether the funds have been requested by the distributor or must be requested by the carrier.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentfromwithinthisAgreement' generator='Payment from within this Agreement'>
      <Description>Money is moving within the existing policy; I.e. fund to fund transfers.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CreditCard' generator='Credit Card'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DebitCard' generator='Debit Card'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TreasuryCheck' generator='Treasury Check'>
      <Description>Is a check drawn by the US Treasury. It is identified as such on the top of the instrument</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OfficialCheck' generator='Official Check'>
      <Description>The terms "cashier's check," "treasurer's check," and "official check" are often used interchangeably. What you need to look at is whether the check is drawn by a bank on itself (Cashier's Check). If it is, and if it is not captioned "expense check" or "dividend check" or "payroll check" or in any other way that makes it a special-purpose payment, consider it as fitting the definition of cashier's check. The term "official check" is nebulous because it is not a term defined in the UCC and institutions use it to describe a variety of instruments that, in many cases, would be classified as teller's checks or cashier's checks.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TellerCheck' generator='Teller Check'>
      <Description>A check drawn by a depository institution on an account maintained at a second depository institution and signed by a teller at the originating institution. Teller's checks are often used in payment of withdrawal orders.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RetainedAssetAccount' generator='Retained Asset Account'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MoneyOrder' generator='Money Order'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CashiersCheck' generator='Cashier&apos;s Check'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CertifiedCheck' generator='Certified Check'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PersonalCheck' generator='Personal Check'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectronicFundsTransfer' generator='Electronic Funds Transfer'>
      <Description>Carrier initiated transfer of funds using methodologies such as ACH or PAC (pre authorized checking).</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DebitOrder' generator='Debit Order'>
      <Description>An authorized debit to a bank account, initiated by the payee 

Notes: Required to differentiate between various forms of premium collection. The South African banking industry have different fee structures for different transaction types which in some cases can lead to a discount on policy premiums. "Electronic Funds Transfer" (t c = 7) is too general for South African purposes.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StopOrder' generator='Stop Order'>
      <Description>An Internal transfer of funds, whereby the transfer may be by means of a Payroll Deduction or Commission Statement Deduction for an employee or Producer of the company 

Notes: An EFT that has been prearranged and will continue until a stop order is requested.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.FrequencyCodeList' originalName='FrequencyCodeList' restricts='java.lang.String'>
    <Description>A code list representing various types of frequency.</Description>
    <Enumerand isSynthetic='true' name='Irregular' generator='Irregular'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sporadic' generator='Sporadic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Once' generator='Once'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Yearly' generator='Yearly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Continuous' generator='Continuous'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Weekly' generator='Weekly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AnnualorAnnually' generator='Annual or Annually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MonthlyforNinemonths' generator='Monthly for Nine months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Anypaymentmodeisallowed' generator='Any payment mode is allowed'>
      <Description>Used in Product Definitions only</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Random' generator='Random'>
      <Description>Random means "Triggered by a random event".</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every4weeks4weekly' generator='Every 4 weeks (4 weekly)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Monthlyfor10months' generator='Monthly for 10 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Monthlyfor8months' generator='Monthly for 8 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every2months' generator='Every 2 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every4months' generator='Every 4 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every5months' generator='Every 5 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every7months' generator='Every 7 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every8months' generator='Every 8 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SemiAnnualtwiceayear' generator='Semi-Annual (twice a year)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every9months' generator='Every 9 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every10months' generator='Every 10 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every11months' generator='Every 11 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FiscalQuarterlymodeofpayment' generator='Fiscal Quarterly mode of payment'>
      <Description>Assumes fiscal date is based off start date</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Everythreeweeks' generator='Every three weeks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade7timesperyear' generator='Payments made 7 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade11timesperyear' generator='Payments made 11 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade14timesperyear' generator='Payments made 14 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade28timesperyear' generator='Payments made 28 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentmade5timesayear' generator='Payment made 5 times a year'>
      <Description>Policy is paid on a quarterly basis with first payment being paid at beginning of billing cycle, and final payment being paid at end of billing cycle.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='QuarterorQuarterly' generator='Quarter or Quarterly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AnnualCalendar' generator='Annual Calendar'>
      <Description>Payment is paid annually, and is driven off of calendar year as opposed to policy anniversary.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MonthorMonthly' generator='Month or Monthly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lifetime' generator='Lifetime'>
      <Description>Used to define a Lifetime period of time</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SemiMonthlytwiceamonth' generator='Semi-Monthly (twice a month)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeekorWeekly' generator='Week or Weekly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BiWeeklyeverytwoweeks' generator='Bi-Weekly (every two weeks)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DayorDaily' generator='Day or Daily'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SinglePayment' generator='Single Payment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.GenderCodeList' originalName='GenderCodeList' restricts='java.lang.String'>
    <Description>It indicates gender.</Description>
    <Enumerand isSynthetic='true' name='Female' generator='Female'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Male' generator='Male'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.HealthCareFacilityTypeCodeList' originalName='HealthCareFacilityTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of health care facilities according to their type.</Description>
    <Enumerand isSynthetic='true' name='CentreOfExcellence' generator='Centre Of Excellence'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NursingHome' generator='Nursing Home'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TraumaCentre' generator='Trauma Centre'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BirthingCentre' generator='Birthing Centre'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AmbulatoryFacility' generator='Ambulatory Facility'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmergencyCentre' generator='Emergency Centre'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.HomeOwnershipCodeList' originalName='HomeOwnershipCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of households according to their home ownership.</Description>
    <Enumerand isSynthetic='true' name='Rent' generator='Rent'>
      <Description>Identifies a household with home ownership 'rent'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Own' generator='Own'>
      <Description>Identifies a household with home ownership 'own'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.InitialTreatmentCodeList' originalName='InitialTreatmentCodeList' restricts='java.lang.String'>
    <Description>It indicates the initial type of treatment provided to the injured or ill party.</Description>
    <Enumerand isSynthetic='true' name='EmergencyRoom' generator='Emergency Room'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hospitalized24hrs' generator='Hospitalized &gt; 24 hrs'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InHouseTreatment' generator='In House Treatment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MinorbyEmployer' generator='Minor by Employer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MinorbyHospitalClinic' generator='Minor by Hospital/Clinic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NoTreatmentProvided' generator='No Treatment Provided'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.InsurerRejectionReasonCodeList' originalName='InsurerRejectionReasonCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Insurers according to their rejection reason.</Description>
    <Enumerand isSynthetic='true' name='HighRisk' generator='High Risk'>
      <Description>Identifies a Insurer with rejection reason 'High risk'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HistoryOfFraud' generator='History Of Fraud'>
      <Description>Identifies a Insurer with rejection reason 'History of fraud'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unspecified' generator='Unspecified'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.InterestCalculationTypeCodeList' originalName='InterestCalculationTypeCodeList' restricts='java.lang.String'>
    <Description>Interest Calculation Type 
Identifies how the interest is calculated for an interest bearing investment.</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Simple' generator='Simple'>
      <Description>The investment earns simple interest (calculated based on the principal only) at the rate stated.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Compound' generator='Compound'>
      <Description>The investment interest is compounded (calculated based on the principal plus interest).</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.InvestmentObjectiveClassCodeList' originalName='InvestmentObjectiveClassCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Funds according to their investment objective class.</Description>
    <Enumerand isSynthetic='true' name='TechnologySharesInEuroMarket' generator='Technology Shares In Euro Market'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EuroBonds' generator='Euro Bonds'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UsdBonds' generator='Usd Bonds'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SharesInBricMarkets' generator='Shares In Bric Markets'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.InvestmentScopeCodeList' originalName='InvestmentScopeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Funds according to their investment scope.</Description>
    <Enumerand isSynthetic='true' name='Bond' generator='Bond'>
      <Description>Identifies a Fund with investment scope 'Bond'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BondAndShareAndCash' generator='Bond And Share And Cash'>
      <Description>Identifies a Fund with investment scope 'Bond + Share + Cash'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cash' generator='Cash'>
      <Description>Identifies a Fund with investment scope 'Cash'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CashAndBond' generator='Cash And Bond'>
      <Description>Identifies a Fund with investment scope 'Cash + Bond'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mixed' generator='Mixed'>
      <Description>Identifies a Fund with investment scope 'Mixed'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MutualFund' generator='Mutual Fund'>
      <Description>Identifies a Fund with investment scope 'Mutual fund'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Property' generator='Property'>
      <Description>Identifies a Fund with investment scope 'Property'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Share' generator='Share'>
      <Description>Identifies a Fund with investment scope 'Share (equity)'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.LegalEntityCodeList' originalName='LegalEntityCodeList' restricts='java.lang.String'>
    <Description>Society Legal Status</Description>
    <Enumerand isSynthetic='true' name='Association' generator='Association'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CondoAssociation' generator='Condo Association'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CityCommission' generator='City Commission'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CCorporation' generator='C Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CityDepartment' generator='City Department'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoEmployer' generator='Co-Employer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Church' generator='Church'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CloselyHeldCorporation' generator='Closely Held Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporationsMultiple' generator='Corporations (Multiple)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateNonprofitOrganization' generator='Corporate Non-profit Organization'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonOwnership' generator='Common Ownership'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Corporation' generator='Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CondoOwners' generator='Condo Owners'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='County' generator='County'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EstateOf' generator='Estate Of'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FarmCorporation' generator='Farm Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FinancialInstitution' generator='Financial Institution'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fraternity' generator='Fraternity'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentAgency' generator='Government Agency'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentalEntity' generator='Governmental Entity'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralPartnership' generator='General Partnership'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HealthCare' generator='Health Care'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hospital' generator='Hospital'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Individual' generator='Individual'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IndividualsMoreThanOne' generator='Individuals (More Than One)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IndianTribeFirstNation' generator='Indian Tribe / First Nation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JointVenture' generator='Joint Venture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LimitedCorporation' generator='Limited Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LimitedLiabilityCompany' generator='Limited Liability Company'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LimitedPartnership' generator='Limited Partnership'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LaborUnion' generator='Labor Union'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MultipleStatus' generator='Multiple Status'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Municipality' generator='Municipality'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotforProfitOrganization' generator='Not for Profit Organization'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Proprietorship' generator='Proprietorship'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProfessionalCorporation' generator='Professional Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PoliticalSubdivision' generator='Political Subdivision'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Partnership' generator='Partnership'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolBoard' generator='School Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='School' generator='School'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SCorporation' generator='S Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sorority' generator='Sorority'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SoleProprietor' generator='Sole Proprietor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubchapterSCorporation' generator='Subchapter S Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Township' generator='Township'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Trust' generator='Trust'>
      <Description>A trust is an entity established to manage assets for the benefit of a person or group of persons. The trust is managed by one or more persons called 'trustees'. The person or group of persons receiving the benefits generally have no control over the management of the trust.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnincorporatedAssociation' generator='Unincorporated Association'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrivatelyHeldCorporation' generator='Privately Held Corporation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PubliclyHeldCorporation' generator='Publicly Held Corporation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.LimitAppliesToCodeList' originalName='LimitAppliesToCodeList' restricts='java.lang.String'>
    <Description>This list defines the concept to which the limit applies.</Description>
    <Enumerand isSynthetic='true' name='AnnualAggregate' generator='Annual Aggregate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerVehicle' generator='Per Vehicle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerAircraft' generator='Per Aircraft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerAccident' generator='Per Accident'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerLoss' generator='Per Loss'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerOccurrence' generator='Per Occurrence'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerPerson' generator='Per Person'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerPassenger' generator='Per Passenger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PerLocation' generator='Per Location'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.LoanTypeCodeList' originalName='LoanTypeCodeList' restricts='java.lang.String'>
    <Description>Loan Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreferredLoan' generator='Preferred Loan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonLifeRegularLoan' generator='Non-Life Regular Loan'>
      <Description>Would Include annuities, RRSP. Note that the current life fields become regular loan fields. Thus there is no 'regular loan' value in this lookup so that we do not have 2 different ways of representing the same thing. This will be fixed in 3.0.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarginAccount' generator='Margin Account'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AutomaticPremiumLoan' generator='Automatic Premium Loan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Original' generator='Original'>
      <Description>Original mortgage loan on home</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Refinanced' generator='Refinanced'>
      <Description>Refinanced mortgage loan on home 

Notes: Used for annuities</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HomeEquity' generator='Home Equity'>
      <Description>Home Equity loan on home</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.MedicalExamTypeCodeList' originalName='MedicalExamTypeCodeList' restricts='java.lang.String'>
    <Description>Medical Exam Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ParamedicalExam' generator='Paramedical Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LabSlip' generator='Lab Slip'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EyeExam' generator='Eye Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RoutineVisit' generator='Routine Visit'>
      <Description>Routine Physical Exam</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolPhysical' generator='School Physical'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsuranceExam' generator='Insurance Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AnnualPhysicalExam' generator='Annual Physical Exam'>
      <Description>Complete physical exam</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InfertilityWorkup' generator='Infertility Workup'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PregnancyExam' generator='Pregnancy Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChiropracticExam' generator='Chiropractic Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DiagnosticExam' generator='Diagnostic Exam'>
      <Description>Going to a medical examiner for a diagnostic exam.  This is different than a "Consultation" in that a consultation would include such things as a visit to a dietician or visiting a doctor and discussing treatment options.  A Diagnostic Exam includes a medical exam of some sort.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MaritalExam' generator='Marital Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OBGYNExam' generator='OB/GYN Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsExam' generator='Sports Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DepartmentofTransportationExam' generator='Department of Transportation Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmploymentExam' generator='Employment Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FAAExam' generator='FAA Exam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Consultation' generator='Consultation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.MedicalTreatmentDurationTypeCodeList' originalName='MedicalTreatmentDurationTypeCodeList' restricts='java.lang.String'>
    <Description>Medical Treatment Duration Type</Description>
    <Enumerand isSynthetic='true' name='LimitedPeriod' generator='Limited Period'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ForLife' generator='For Life'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OneTime' generator='OneTime'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.OccupancyTypeCodeList' originalName='OccupancyTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies how the structure is inhabited.</Description>
    <Enumerand isSynthetic='true' name='CourseofConstruction' generator='Course of Construction'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Occupied' generator='Occupied'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Owner' generator='Owner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerandTenant' generator='Owner and Tenant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tenant' generator='Tenant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unoccupied' generator='Unoccupied'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Vacant' generator='Vacant'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.OwnershipCodeList' originalName='OwnershipCodeList' restricts='java.lang.String'>
    <Description>It indicates the ownership status of the insured/applicant</Description>
    <Enumerand isSynthetic='true' name='Leased' generator='Leased'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Owned' generator='Owned'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rented' generator='Rented'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList' originalName='PaymentFrequencyCodeList' restricts='java.lang.String'>
    <Description>A code list representing various types of payment frequency.</Description>
    <Enumerand isSynthetic='true' name='AnnualCalendar' generator='Annual Calendar'>
      <Description>Payment is paid annually, and is driven off of calendar year as opposed to policy anniversary.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AnnualorAnnually' generator='Annual or Annually'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Anypaymentmodeisallowed' generator='Any payment mode is allowed'>
      <Description>Used in Product Definitions only</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BiWeeklyeverytwoweeks' generator='Bi-Weekly (every two weeks)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Continuous' generator='Continuous'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DayorDaily' generator='Day or Daily'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every10months' generator='Every 10 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every11months' generator='Every 11 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every2months' generator='Every 2 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every4months' generator='Every 4 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every4weeks4weekly' generator='Every 4 weeks (4 weekly)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every5months' generator='Every 5 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every7months' generator='Every 7 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every8months' generator='Every 8 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Every9months' generator='Every 9 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Everythreeweeks' generator='Every three weeks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FiscalQuarterlymodeofpayment' generator='Fiscal Quarterly mode of payment'>
      <Description>Assumes fiscal date is based off start date</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Irregular' generator='Irregular'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lifetime' generator='Lifetime'>
      <Description>Used to define a Lifetime period of time</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Monthlyfor10months' generator='Monthly for 10 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Monthlyfor8months' generator='Monthly for 8 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MonthlyforNinemonths' generator='Monthly for Nine months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MonthorMonthly' generator='Month or Monthly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Once' generator='Once'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentmade5timesayear' generator='Payment made 5 times a year'>
      <Description>Policy is paid on a quarterly basis with first payment being paid at beginning of billing cycle, and final payment being paid at end of billing cycle.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade11timesperyear' generator='Payments made 11 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade14timesperyear' generator='Payments made 14 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade28timesperyear' generator='Payments made 28 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paymentsmade7timesperyear' generator='Payments made 7 times per year.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='QuarterorQuarterly' generator='Quarter or Quarterly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Random' generator='Random'>
      <Description>Random means "Triggered by a random event".</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SemiAnnualtwiceayear' generator='Semi-Annual (twice a year)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SemiMonthlytwiceamonth' generator='Semi-Monthly (twice a month)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SinglePayment' generator='Single Payment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sporadic' generator='Sporadic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Weekly' generator='Weekly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WeekorWeekly' generator='Week or Weekly'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Yearly' generator='Yearly'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.PreferredCommunicationCodeList' originalName='PreferredCommunicationCodeList' restricts='java.lang.String'>
    <Description>Preferred Communication</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Telephone' generator='Telephone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fax' generator='Fax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EMail' generator='E-Mail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RegularMail' generator='Regular Mail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DontContact' generator='Don&apos;t Contact'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.PremiumSurchargeTypeCodeList' originalName='PremiumSurchargeTypeCodeList' restricts='java.lang.String'>
    <Description>Premium Surcharge Type</Description>
    <Enumerand isSynthetic='true' name='Rate' generator='Rate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Amount' generator='Amount'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.PriceTypeCodeList' originalName='PriceTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of asset prices according to their price type.</Description>
    <Enumerand isSynthetic='true' name='Bid' generator='Bid'>
      <Description>Price at which you can buy the asset.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancellation' generator='Cancellation'>
      <Description>Price at which you can sell the asset when withdrawn.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Creation' generator='Creation'>
      <Description>Price at which you can buy the asset when launched (Initial Public Offering)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mid' generator='Mid'>
      <Description>Average price between the Bid and the Offer. This could be used for transactions such as a fund switch.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Offer' generator='Offer'>
      <Description>Price at which you can sell the asset.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.RelationDescriptionCodeList' originalName='RelationDescriptionCodeList' restricts='java.lang.String'>
    <Description>Relation Description</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsHusband' generator='Familial Risk Relationships - Husband'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsExwife' generator='Familial Risk Relationships - Ex-wife'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialCareAgency' generator='Special Care Agency'>
      <Description>Agency assigned to work with the contact(s) of the deceased client and provide an additional level of service or care. 

Notes: Corresponding Relation RoleCode: 154 - Servicing Agency</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialCareAgent' generator='Special Care Agent'>
      <Description>Agent assigned to work with the contact(s) of the deceased client and provide an additional level of service or care. 

Notes: Corresponding Relation RoleCode: 38 - Servicing Agent</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdoptedDaughter' generator='Adopted Daughter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdoptedSon' generator='Adopted Son'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdoptiveMother' generator='Adoptive Mother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdoptiveFather' generator='Adoptive Father'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsStepMother' generator='Familial Risk Relationships - Step Mother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsStepFather' generator='Familial Risk Relationships - Step Father'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsStepSon' generator='Familial Risk Relationships - Step Son'>
      <Description>- has no blood relations, however parents are married to each other</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsStepDaughter' generator='Familial Risk Relationships - Step Daughter'>
      <Description>has no blood relations, however parents are married to each other</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsStepBrother' generator='Familial Risk Relationships - Step Brother'>
      <Description>have no blood relations, different parents, however parents are married to each other.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsStepSister' generator='Familial Risk Relationships - Step Sister'>
      <Description>have no blood relations, different parents, however parents are married to each other.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsGrandfather' generator='Familial Risk Relationships - Grandfather'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsGrandmother' generator='Familial Risk Relationships - Grandmother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsGrandson' generator='Familial Risk Relationships - Grandson'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsWife' generator='Familial Risk Relationships - Wife'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsGranddaughter' generator='Familial Risk Relationships - Granddaughter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsFatherinlaw' generator='Familial Risk Relationships - Father-in-law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsMotherinlaw' generator='Familial Risk Relationships - Mother-in-law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsSoninlaw' generator='Familial Risk Relationships - Son-in-law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsDaughterinlaw' generator='Familial Risk Relationships - Daughter-in-law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsBrotherinlaw' generator='Familial Risk Relationships - Brother-in-law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsSisterinlaw' generator='Familial Risk Relationships - Sister-in-law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipshaveoneparentincommon' generator='Familial Risk Relationships - have one parent in common'>
      <Description>For example,  same mother, different fathers.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsHalfSister' generator='Familial Risk Relationships - Half Sister'>
      <Description>Have one parent in common.

For example,  same mother, different fathers.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsCousinMalecousinnonEnglish' generator='Familial Risk Relationships - Cousin (Male cousin - non English)'>
      <Description>When used in non-English language context, this implies a male cousin. In English speaking context, no gender is implied. The gender applies to the related object.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsFather' generator='Familial Risk Relationships - Father'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsUncle' generator='Familial Risk Relationships - Uncle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsAunt' generator='Familial Risk Relationships - Aunt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsNephew' generator='Familial Risk Relationships - Nephew'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsNiece' generator='Familial Risk Relationships - Niece'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsGodFather' generator='Other relationship descriptions - God Father'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsGodMother' generator='Other relationship descriptions - God Mother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsSecretary' generator='Other relationship descriptions - Secretary'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsGeneralManager' generator='Other relationship descriptions - General Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsPresident' generator='Other relationship descriptions - President'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsMother' generator='Familial Risk Relationships - Mother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsVicePresident' generator='Other relationship descriptions - Vice President'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsExecutive' generator='Other relationship descriptions - Executive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsAttorney' generator='Other relationship descriptions - Attorney'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsAuditor' generator='Other relationship descriptions - Auditor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsBookkeeper' generator='Other relationship descriptions - Bookkeeper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsConsultant' generator='Other relationship descriptions - Consultant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsChairmanoftheBoard' generator='Other relationship descriptions - Chairman of the Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsChiefExecutiveOfficer' generator='Other relationship descriptions - Chief Executive Officer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsChiefFinancialOfficer' generator='Other relationship descriptions - Chief Financial Officer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsChiefOperatingOfficer' generator='Other relationship descriptions - Chief Operating Officer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsSon' generator='Familial Risk Relationships - Son'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsChiefInformationOfficer' generator='Other relationship descriptions - Chief Information Officer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsTaxAgent' generator='Other relationship descriptions - Tax Agent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsEstateAgent' generator='Other relationship descriptions - Estate Agent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsLegalAgent' generator='Other relationship descriptions - Legal Agent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsGodSon' generator='Other relationship descriptions - God Son'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherrelationshipdescriptionsGodDaughter' generator='Other relationship descriptions - God Daughter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerofCashValue' generator='Owner of Cash Value'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerofDeathBenefit' generator='Owner of Death Benefit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ownerofcashvalueanddeathbenefit' generator='Owner of cash value and death benefit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsDaughter' generator='Familial Risk Relationships - Daughter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fiancémale' generator='Fiancé (male)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonLawWife' generator='Common Law Wife'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonLawHusband' generator='Common Law Husband'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatAuntGrandaunt' generator='Great Aunt (Grandaunt)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatUncleGranduncle' generator='Great Uncle (Granduncle)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrandNephew' generator='Grand Nephew'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrandNiece' generator='Grand Niece'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatGrandson' generator='Great Grandson'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatGranddaughter' generator='Great Granddaughter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatGrandfather' generator='Great Grandfather'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsBrother' generator='Familial Risk Relationships - Brother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatGrandmother' generator='Great Grandmother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FosterSon' generator='Foster Son'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FosterDaughter' generator='Foster Daughter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FosterFather' generator='Foster Father'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FosterMother' generator='Foster Mother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FosterBrother' generator='Foster Brother'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FosterSister' generator='Foster Sister'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Accountant' generator='Accountant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CPA' generator='CPA'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FinancialAdvisor' generator='Financial Advisor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsSister' generator='Familial Risk Relationships - Sister'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stockbroker' generator='Stockbroker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EstatePlanner' generator='Estate Planner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CharitableAdvisor' generator='Charitable Advisor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessInsuranceAdvisor' generator='Business Insurance Advisor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessAccountant' generator='Business Accountant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessCPA' generator='Business CPA'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessAttorney' generator='Business Attorney'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ValuationAnalyst' generator='Valuation Analyst'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoyFriend' generator='Boy Friend'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GirlFriend' generator='Girl Friend'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FamilialRiskRelationshipsExhusband' generator='Familial Risk Relationships - Ex-husband'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fiancéeengagedfemale' generator='Fiancée (engaged female)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Self' generator='Self'>
      <Description>Self. Identifies that information relates back to Party. An example is gathering household insurance information for RISK for the proposed insured, since RISK links back to PARTY. 

Notes: HHFamilyInsurance.RoleCodeDesc states: "Role code describing family members relationship to the proposed insured.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Custodian' generator='Custodian'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CousinFemalecousin' generator='Cousin - Female cousin'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessContactDaytodayContact' generator='Business Contact - Day-to-day Contact'>
      <Description>Day-to-day Contact is the group insurance customer's representative designated as the individual to be contacted for any questions or normal activity requirements around the management of the relationship between the carrier and the customer. The group insurance customer is the employer organization or company, and the Day-to-day contact is generally an individual rather than an organization, but exceptions to that do exist.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessContactBenefitsAdministrator' generator='Business Contact - Benefits Administrator'>
      <Description>Benefits Administrator is the group insurance customer's representative designated as the individual or organization who administers the benefit plan being purchased from the carrier and offered to the employee population.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessContactAccountSpecialist' generator='Business Contact - Account Specialist'>
      <Description>Account Specialist is the carrier employee responsible for administering the group insurance customer's case information. The group insurance customer is the employer organization or company, and their case information includes such items as contacts, situs information, and Experience Groupings.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusinessContactAdministrativeUnit' generator='Business Contact - Administrative Unit'>
      <Description>An organization responsible for the administration of a particular product or some other aspect of a customer relationship.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.SpecificationUseCodeList' originalName='SpecificationUseCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the use of a feature on a manufactured item (e.g. optional, required).</Description>
    <Enumerand isSynthetic='true' name='Optional' generator='Optional'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Required' generator='Required'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.StatusReasonCodeList' originalName='StatusReasonCodeList' restricts='java.lang.String'>
    <Description>Status Reason</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsuredDeath' generator='Insured Death'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PayorDeath' generator='Payor Death'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PayorDisabled' generator='Payor Disabled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComplexAgreementAdditionHistoricalAddition' generator='Complex,Agreement Addition, Historical Addition'>
      <Description>A complex change is used to correct fields that are not correctable through normal change transactions. An "enforce record must exist, be active, and suspended. 
Notes: Further defines OLI_POLSTAT_CTRCTCHANGE (code 31)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HistoricalAddition' generator='Historical Addition'>
      <Description>Identifies a history addition or complex change record originally entered to the file in a pending state and subsequently either released or declined.
Notes: Further defines OLI_POLSTAT_CTRCTCHANGE (code 31)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementAdditionChangeinProgress' generator='Agreement Addition/Change in Progress'>
      <Description>Identify a policy undergoing some kind of change, usually benefit additions.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Noresponsefromapplicant' generator='No response from applicant'>
      <Description>The client did not respond to an offer. There are a specified number of days that the Not Taken status will automatically be applied to the application if there is no communicated response</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Applicantdeclinedoffer' generator='Applicant declined offer'>
      <Description>The applicant communicated the declination of the offer of a policy</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChangeRequestDenied' generator='Change Request Denied'>
      <Description>A requested change is denied by underwriter and client does not accept denial of change 

Notes: Use in conjunction with a status reason of rejected</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Renumbered' generator='Renumbered'>
      <Description>If a case is renumbered, the old case becomes inactive</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Appeal' generator='Appeal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Producernotapprovedtosell' generator='Producer not approved to sell'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GroupExpired' generator='Group Expired'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unapprovedlicensingorappointment' generator='Unapproved licensing or appointment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PVTWSLossofSightorLimbs' generator='PVT WS Loss of Sight or Limbs'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementChangeCausedFreeze' generator='Agreement Change Caused Freeze'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProcessingSystemProblemCausedFreeze' generator='Processing System Problem Caused Freeze'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementHolderServiceFreeze' generator='Agreement Holder Service Freeze'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.SubjectAreaCodeList' originalName='SubjectAreaCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of EducationCertificates according to their subject area.</Description>
    <Enumerand isSynthetic='true' name='InformationTechnology' generator='Information Technology'>
      <Description>Identifies a EducationCertificate with subject area 'Information Technology'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Accountancy' generator='Accountancy'>
      <Description>Identifies an education certificate with subject area 'Accountancy'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Actuarial' generator='Actuarial'>
      <Description>Identifies an education certificate with subject area 'Actuarial'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Insurance' generator='Insurance'>
      <Description>Identifies an education certificate with subject area 'Insurance'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.TaxCalculationCodeList' originalName='TaxCalculationCodeList' restricts='java.lang.String'>
    <Description>A code list of how taxation has been taken into consideration when calculating the values represented by analytical measures.</Description>
    <Enumerand isSynthetic='true' name='Gross' generator='Gross'>
      <Description>Identifies a scenario with tax status 'Gross', specifying that the analytical measures to which the applies represent amounts before the effect of taxation.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Net' generator='Net'>
      <Description>Identifies a with tax status 'Net', specifying that the analytical measures to which the applies represent amounts after the effect of taxation.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.TreatmentTypeCodeList' originalName='TreatmentTypeCodeList' restricts='java.lang.String'>
    <Description>Treatment Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Test' generator='Test'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Convalescencebedrest' generator='Convalescence (bed rest)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chiropractic' generator='Chiropractic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Myotherapy' generator='Myotherapy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Physiotherapy' generator='Physiotherapy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Podiatry' generator='Podiatry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Psychiatric' generator='Psychiatric'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CPAP' generator='CPAP'>
      <Description>Continuous Positive Airway Pressure</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NCPAP' generator='N-CPAP'>
      <Description>N-CPAP</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Surgery' generator='Surgery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsulinPump' generator='Insulin - Pump'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InsulinInjections' generator='Insulin - Injections'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OralMedications' generator='Oral Medications'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Diet' generator='Diet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ImmunosuppressantsTherapy' generator='Immunosuppressants Therapy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Examination' generator='Examination'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Advice' generator='Advice'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Medication' generator='Medication'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rehabilitation' generator='Rehabilitation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hospitalization' generator='Hospitalization'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chemotherapy' generator='Chemotherapy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Radiation' generator='Radiation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList' originalName='ValidityStatusCodeList' restricts='java.lang.String'>
    <Description>Validity Status</Description>
    <Enumerand isSynthetic='true' name='Valid' generator='Valid'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Notvalid' generator='Not valid'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.CommonElements.CommonCodeLists.ValuationMethodCodeList' originalName='ValuationMethodCodeList' restricts='java.lang.String'>
    <Description>A code list identifying the method used to determine the item value</Description>
    <Enumerand isSynthetic='true' name='Appraisal' generator='Appraisal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComparableSale' generator='Comparable Sale'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalesReceipt' generator='Sales Receipt'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount' originalName='CurrencyAmount' isAbstract='false'>
    <Description>A monetary amount including the currency code used.

e.g: $150.00 USD</Description>
    <AttributeProperty isSynthetic='true' name='amount' originalName='amount' assignable='true' index='0'>
      <Description>The amount expressed as a currency value.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='currencyCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.Date' originalName='Date' isAbstract='false'>
    <Description>An indication of a particular day in the Gregorian calendar.</Description>
    <AttributeProperty isSynthetic='true' name='day' originalName='day' assignable='true' index='2'>
      <Description>The day of the month, based on the Gregorian calendar and expressed as an Integer value in the range of 1 through 31.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='month' originalName='month' assignable='true' index='1'>
      <Description>The month of a Gregorian calendar expressed as an Integer value in the range of 1 through 12.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='year' originalName='year' assignable='true' index='0'>
      <Description>The calendar year, based on the Gregorian calendar and expressed as an Integer in the format of CCYY.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='DateType' assignable='true' typeInferred='false'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
      <GetterMethod isSynthetic='false' name='getDateType' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='asDateUsingPattern'>
          </MethodReference>
          <CollectionExpression isSynthetic='false' prefixFunction='joinStringsOf'>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='formatNumber'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='month'>
              </PathExpression>
              <Literal isSynthetic='false' typeName='java.lang.String' literalString='00'>
              </Literal>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='formatNumber'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='day'>
              </PathExpression>
              <Literal isSynthetic='false' typeName='java.lang.String' literalString='00'>
              </Literal>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='formatNumber'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='year'>
              </PathExpression>
              <Literal isSynthetic='false' typeName='java.lang.String' literalString='0000'>
              </Literal>
            </MethodExpression>
          </CollectionExpression>
          <Literal isSynthetic='false' typeName='java.lang.String' literalString='MMddyyyy'>
          </Literal>
        </MethodExpression>
      </GetterMethod>
      <SetterMethod isSynthetic='false' name='setDateType' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <Parameter isSynthetic='false' name='DateType' typeName='com.progress.dataxtend.si.util.Date' unbindable='false'>
        </Parameter>
        <SequenceExpression isSynthetic='false'>
          <SetterExpression isSynthetic='false'>
            <TargetPath isSynthetic='false' pathString='year'>
            </TargetPath>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='year'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='.'>
                <VariablePathRoot isSynthetic='false' variableName='DateType'>
                </VariablePathRoot>
              </PathExpression>
            </MethodExpression>
          </SetterExpression>
          <SetterExpression isSynthetic='false'>
            <TargetPath isSynthetic='false' pathString='month'>
            </TargetPath>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='month'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='.'>
                <VariablePathRoot isSynthetic='false' variableName='DateType'>
                </VariablePathRoot>
              </PathExpression>
            </MethodExpression>
          </SetterExpression>
          <SetterExpression isSynthetic='false'>
            <TargetPath isSynthetic='false' pathString='day'>
            </TargetPath>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='dayOfMonth'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='.'>
                <VariablePathRoot isSynthetic='false' variableName='DateType'>
                </VariablePathRoot>
              </PathExpression>
            </MethodExpression>
          </SetterExpression>
        </SequenceExpression>
      </SetterMethod>
    </CustomProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.DateTime' originalName='DateTime' isAbstract='false'>
    <Description>A specific point in time indicated as a date and/or time.</Description>
    <RelationshipProperty isSynthetic='false' name='date' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='time' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Time</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode' originalName='ExternalCode' isAbstract='false'>
    <Description>Used to indicate a type of enumerated value (i.e. code) that is not managed (i.e. enumerated) in the ACORD Information Model.

The child attribute "code" accommodates the value assigned by the external source.

The child attribute "sourceIdentifier" accommodates the identification of the external source whose value was utilized.</Description>
    <AttributeProperty isSynthetic='true' name='code' originalName='code' assignable='true' index='0'>
      <Description>The code value from the external code list.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='sourceIdentity' originalName='sourceIdentity' assignable='true' index='1'>
      <Description>Used to identify the source of a code list when there is a need to override the source (if any) documented in the Information Model. This allows ACORD to reference a source and allows implementers to define and use their own.

Usage Note: Utilizing a URL is recommended, when available, because of the clarity it provides. This is not a requirement.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.Measurement' originalName='Measurement' isAbstract='false'>
    <Description>A numeric value including units of measure, such as liters, inches, or kilometers. 

An example is 150 km.

SOURCE: http://www.unece.org/cefact/codesfortrade/codes_index.htm</Description>
    <AttributeProperty isSynthetic='true' name='value' originalName='value' assignable='true' index='0'>
      <Description>The measured value expressed as a Decimal.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='unitCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.Time' originalName='Time' isAbstract='false'>
    <Description>An indication of a particular time in a day expressed with a maximum precision of one hundredth of a second.</Description>
    <AttributeProperty isSynthetic='true' name='fraction' originalName='fraction' assignable='true' index='3'>
      <Description>The number representing the hundredths of a second defined as an integer 0 through 999.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='hour' originalName='hour' assignable='true' index='0'>
      <Description>The hour of the day defined as an integer 0 through 23.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='minute' originalName='minute' assignable='true' index='1'>
      <Description>The number representing the minutes defined as an integer 0 through 59.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='second' originalName='second' assignable='true' index='2'>
      <Description>The number representing the seconds defined as an integer 0 through 59.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod' originalName='TimePeriod' isAbstract='false'>
    <Description>A duration of time expressed via distinct start and end points in time.</Description>
    <RelationshipProperty isSynthetic='true' name='endDateTime' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.DateTime</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='startDateTime' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.DateTime</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ActivityPlace' originalName='ActivityPlace' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The concept establishes a relationship between an activity and the place at which the activity occurs.

e.g: The activity of construction occurs at place Convention Center construction site.

e.g: The activity of parking occurs at the paved area next to the Edwards Memorial Stadium.

e.g: The hobby skiing typically occurs (is performed) at the Alps.

e.g: Professional baseball is played at Yankee Stadium.</Description>
    <AttributeProperty isSynthetic='true' name='frequencyCode' originalName='frequencyCode' assignable='true' index='0'>
      <Description>A code indicating the frequency for which the activity occurs at a place.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='itineraryCode' originalName='itineraryCode' assignable='true' index='1'>
      <Description>Indicates the nature of the place with regards to an activity (e.g. origin, destination).</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ItineraryCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='ActivityPlaceOnActivity' originalName='ActivityPlace On Activity' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.Activity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityPlaceForActivityPlaceOnActivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ActivityPlaceOnPlace' originalName='ActivityPlace On Place' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='ActivityPlaceForActivityPlaceOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.Address' originalName='Address' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept represents a means of identifying and locating a resource, such as a place, physical location or email box.  Common addresses include a postal address, email address and even a telephone number.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.CommunicationProfile' originalName='CommunicationProfile' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The specification of the medium used for communicating and the adaptations of the characteristics of this medium to the needs of an individual. This includes language preferences, visual preferences, audio preferences, cognitive preferences and mobility preferences.</Description>
    <AttributeProperty isSynthetic='true' name='priorityLevel' originalName='priorityLevel' assignable='true' index='0'>
      <Description>Indicates the priority of a communication profile when compared with other communication profiles.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='languageCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPoint' originalName='ContactPoint' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>An identification, or partial identification, defining the method and destination of a communication contact with a party role or party. The sub-types relate to specific communication media: postal address, telephone number, and electronic address. General locations (for example, France, The Ardennes, Washington) are excluded and are represented by place.</Description>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>Indicates the status of the contact point.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ContactStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='availablePeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPreference' originalName='ContactPreference' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The characteristics of the way a role or party wants to be contacted. This includes the contact points, preferred communication profile (including language and medium), name and timing preferences, preferred contacting person, and restrictions on the contact frequency. It also defines the usage such as business or private and the purpose, such as billing or mailing.

e.g: Simon can be contacted on Monday and Friday between 5 am and 11 pm (two timing preferences since the periods are not contiguous) preferably by telephone (preferred medium) and in double Dutch (preferred language) at 44 3687 47 48 (contact point preference).</Description>
    <AttributeProperty isSynthetic='true' name='contactInstructions' originalName='contactInstructions' assignable='true' index='0'>
      <Description>The recorded advice which may be helpful when contacting the role player.

e.g: Be aware of the dog when making a house call.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='defaultIndicator' originalName='defaultIndicator' assignable='true' index='6'>
      <Description>An indicator this is the default contact point - there is no preference concerning priority for contact.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='priorityLevel' originalName='priorityLevel' assignable='true' index='1'>
      <Description>The relative priority of the contact preference with respect to the others.

e.g. 1 (Main/primary preference)

e.g. 5 (Low preference)</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='purpose' originalName='purpose' assignable='true' index='5'>
      <Description>A text representation of the purpose for which a party/party role uses a contact preference. Purpose is more a classification, whereas contactUsage describes how a particular contact is used.

NOTE: This attribute is for use when the contact purpose is not enumerated (e.g. refer to the corresponding purposeCode).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='purposeCode' originalName='purposeCode' assignable='true' index='4'>
      <Description>The purpose for which a party/party role uses a contact preference. Purpose is more a classification, whereas contactUsage describes how a particular contact is used.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ContactPreferencePurposeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='redListIndicator' originalName='redListIndicator' assignable='true' index='8'>
      <Description>Specifies if the contact point is in any red lists, such as those that exist in the United States and France. Such red lists prohibit the contact from being used in things like phone books, phone solicitation and mail solicitation. 

e.g., French "red list" for phone book listings 

e.g., United States "Do Not Call List" for phone numbers</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='solicitableIndicator' originalName='solicitableIndicator' assignable='true' index='7'>
      <Description>An indicator as to whether the contact point may be used for solicitation on this contact preference.

This indicator is derived from the purpose of the contact. Purposes that are considered to indicate a solicitable contact preference are 'marketing' and 'advertising'.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='9'>
      <Description>The current status of the contact preference.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ContactPreferenceStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='usageCode' originalName='usageCode' assignable='true' index='3'>
      <Description>The context  in which this contact preference is used, such as business contacts to be made while at work or personal contacts to be made while at home.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ContactPreferenceUsageCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='validationResultCode' originalName='validationResultCode' assignable='true' index='2'>
      <Description>The conclusion of  the most recent validity check.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ValidationResultCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='availablePeriod' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ContactPreferenceOnCommunicationProfile' originalName='ContactPreference On CommunicationProfile' assignable='true' index='15' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.CommunicationProfile</TypeName>
      <RelationshipProperty isSynthetic='true' name='ContactPreferenceForContactPreferenceOnCommunicationProfile' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='ContactPreferenceOnContactPoint' originalName='ContactPreference On ContactPoint' assignable='true' index='12' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <RelationshipProperty isSynthetic='true' name='ContactPreferenceForContactPreferenceOnContactPoint' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ContactPreferenceOnContactRestriction' originalName='ContactPreference On ContactRestriction' assignable='true' index='13' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPreferenceDetails.ContactRestriction</TypeName>
      <RelationshipProperty isSynthetic='true' name='ContactPreferenceForContactPreferenceOnContactRestriction' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ContactPreferenceOnTimingPreference' originalName='ContactPreference On TimingPreference' assignable='true' index='14' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPreferenceDetails.TimingPreference</TypeName>
      <RelationshipProperty isSynthetic='true' name='ContactPreferenceForContactPreferenceOnTimingPreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastValidatedDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PartyRolePlace' originalName='PartyRolePlace' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This relationship provides a mechanism for relating a party role to a place with a qualification as to the nature of the relationship.

e.g: A Service Provider provides services in one or more places.
e.g: An Insured for a commercial insurance policy has operations in one or more places

NOTE: This relationship should not be confused with multiple addresses associated to Parties. Those addresses are found in the link between Party and ContactPoint.</Description>
    <AttributeProperty isSynthetic='true' name='placeQualifier' originalName='placeQualifier' assignable='true' index='0'>
      <Description>This attribute qualifies/describes the relationship between PartyRole and Place.

e.g: Place of service, Place of operations</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRolePlaceOnPartyRole' originalName='PartyRolePlace On PartyRole' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRolePlaceForPartyRolePlaceOnPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRolePlaceOnPlace' originalName='PartyRolePlace On Place' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRolePlaceForPartyRolePlaceOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.Place' originalName='Place' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>A bounded area defined by nature, by one or a series of country elements, by an external authority (such as a government), used to identify a location in space; for example, country, city, continent, postal area or risk area.

e.g. land parcel 5, section 12, lot 3

e.g. coastal waters

e.g. Hawthorne, NY Postal area, ZIP code 10532

e.g. Hurricane risk area

e.g. Manhattan, New York</Description>
    <AttributeProperty isSynthetic='true' name='abbreviation' originalName='abbreviation' assignable='true' index='2'>
      <Description>The standard abbreviation or code for the geographic area. 
 
e.g: NY</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A textual statement used to help identify a place. 
 
e.g: Belgium is a small country located on the European coast of the North Sea, bordered by the Netherlands, Germany, France and Luxembourg.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>General name given to the location in space (Place).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='availablePeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='surfaceAreaMeasurement' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceProximity' originalName='PlaceProximity' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>Proximity describes the geographical relation of one place to another place.

USAGE NOTE: When describing a scenario involving "includes", the type code describes the "from" place in proximity to the "to" place.

In other words, the three attributes essentially complete the following sentence:

fromPlace typeCode toPlace
e.g. USA includes California</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>A text description of the proximity between two places.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='1'>
      <Description>A code indicating the nature of the proximity between two places.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ProximityTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PlaceProximityFromPlace' originalName='PlaceProximity From Place' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='PlaceProximityForPlaceProximityFromPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PlaceProximityToPlace' originalName='PlaceProximity To Place' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='PlaceProximityForPlaceProximityToPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.RatingTerritory' originalName='RatingTerritory' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept establishes a relationship between place and a coverage to account for a rating territory.

NOTE: In some cases, the concept of a rating territory is not necessarily specific to a particular coverage. For example, property coverages may involve determination of a territory (also known as a zone) and one or more of these may be needed to perform a rating calculation - see list below.

- fire protection class
- brush fire zone
- building code effectiveness grade
- renie square</Description>
    <RelationshipProperty isSynthetic='true' name='RatingTerritoryOnCoverageComponent' originalName='RatingTerritory On CoverageComponent' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.AgreementComponentSubtypes.CoverageComponent</TypeName>
      <RelationshipProperty isSynthetic='true' name='RatingTerritoryForRatingTerritoryOnCoverageComponent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='RatingTerritoryOnPlace' originalName='RatingTerritory On Place' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='RatingTerritoryForRatingTerritoryOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='territoryCode' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.GlobalPositionAddress' originalName='GlobalPositionAddress' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress' isAbstract='false'>
    <Description>This concept define coordinates associated to a site (geographical situation).

It can be used to localize an object, a claim zone, etc.

A geographic coordinate system is a coordinate system that enables every location on Earth to be specified in three coordinates, using mainly a spherical coordinate system.

The Earth is not a sphere, but an irregular shape approximating an ellipsoid; the challenge is to define a coordinate system that can accurately state each topographical point as an unambiguous tuple of numbers. [1]

Attributes in this concept may need to be added for things like geodetic systems.

1. SOURCE: http://en.wikipedia.org/wiki/Geographic_coordinate_system</Description>
    <AttributeProperty isSynthetic='true' name='coordinateSystemCode' originalName='coordinateSystemCode' assignable='true' index='0'>
      <Description>Defines the system code used for the coordinates.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.GeographicCoordinateSystemCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='latitude' originalName='latitude' assignable='true' index='1'>
      <Description>Latitude is the angle from a point on the Earth's surface to the equatorial plane, measured from the center of the sphere. Lines joining points of the same latitude are called parallels, which trace concentric circles on the surface of the Earth, parallel to the equator. The north pole is 90° N; the south pole is 90° S. The 0° parallel of latitude is designated the equator, the fundamental plane of all geographic coordinate systems. The equator divides the globe into Northern and Southern Hemispheres. SOURCE: http://en.wikipedia.org/wiki/Geographic_coordinate_system</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='longitude' originalName='longitude' assignable='true' index='2'>
      <Description>The angular distance east or west on the earth's surface, measured by the angle contained between the meridian of a particular place and some prime meridian, as that of Greenwich, England, and expressed either in degrees or by some corresponding difference in time.

SOURCE: http://dictionary.reference.com/browse/longitude</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.IntersectionAddress' originalName='IntersectionAddress' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress' isAbstract='false'>
    <Description>This concept represents an address for the intersection of two or more roads (e.g. streets, avenues, etc.).</Description>
    <RelationshipProperty isSynthetic='true' name='IntersectionAddressOnStreetAddress' originalName='IntersectionAddress On StreetAddress' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.StreetAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='IntersectionAddressForIntersectionAddressOnStreetAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.LegalAddress' originalName='LegalAddress' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress' isAbstract='false'>
    <Description>This provides the legal address or identification of an area of land.

NOTE: This address is also known as a land registry type of identification. There is no expectation postal mail would be delivered via use of this type of address.</Description>
    <RelationshipProperty isSynthetic='true' name='LegalAddressLineOnLegalAddress' originalName='LegalAddressLine On LegalAddress' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.LegalAddressLine</TypeName>
      <RelationshipProperty isSynthetic='true' name='LegalAddressForLegalAddressLineOnLegalAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.LegalAddressLine' originalName='LegalAddressLine' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents one line of a legal address.</Description>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='1'>
      <Description>The unique identifier assigned to the legal address line.

For example, legal address: "Lot 5"
typeCode = "Lot"
identifier = "5"</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='sequence' originalName='sequence' assignable='true' index='2'>
      <Description>This represents the sequence in which multiple instances of a legal address should be constructed.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code indicating the manner in which an area of land is identified.

For example, legal address: "Lot 5"
typeCode = "Lot"
identifier = "5"</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.LegalAddressCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.MmsiNumber' originalName='MmsiNumber' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.TelecommunicationAddress' isAbstract='false'>
    <Description>A telephone-type number known as a Maritime Mobile Service Identity or MMSI.  The MMSI is a nine digit number identifying a VHF set or group of sets. The left hand digits of MMSI indicate the country and type of station.

SOURCE: http://en.wikipedia.org/wiki/Maritime_Mobile_Service_Identity</Description>
    <AttributeProperty isSynthetic='true' name='stationTypeCode' originalName='stationTypeCode' assignable='true' index='0'>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.MMSICodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.NetworkAddress' originalName='NetworkAddress' superclassName='org.acord.aim.ContactandPlace.Address' isAbstract='true'>
    <Description>This concept represents a means of identifying and locating a resource or device on a type of network, such as a telephone network or the internet.</Description>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='0'>
      <Description>A single, formal string representation of the address for the resource.  On a given network type, this identifier provides enough information to be able to locate the associated address point.  For example, on a telephone network, this is the string commonly thought of as the "Phone Number." 

USAGE NOTE: The format of the identifier is driven either by the convention of the implementer or specified in the definition of the sub-class.  E.g. The UniformResourceLocation.identifier has a very specific format.

SOURCE: http://en.wikipedia.org/wiki/Uniform_resource_identifier</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress' originalName='PlaceAddress' superclassName='org.acord.aim.ContactandPlace.Address' isAbstract='false'>
    <Description>This concept represents a type of identification or name used to locate a Place.</Description>
    <AttributeProperty isSynthetic='true' name='unstructuredAddress' originalName='unstructuredAddress' assignable='true' index='0'>
      <Description>Free text description of the address (e.g. place descriptor).

For example, this could represent a full postal address as utilized for a mailing/shipping label.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PlaceAddressOnPlace' originalName='PlaceAddress On Place' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='PlaceAddressForPlaceAddressOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.PostalAddress' originalName='PostalAddress' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress' isAbstract='false'>
    <Description>This concept represents the components unique to the postal address as a place. A postal address is utilized for the delivery of letters or packages by an external mailing or packaging service, at a place where the recipient can be located. Note that the exact structure of a postal address is likely to change depending on the country of the postal address. 

NOTE: A postal address can be associated with other portions of a place (e.g. city, state, etc.) as well as a street address (number, name, etc.) in order to comprise an adequately complete address for delivery use (e.g.: 30 Saw Mill River Road, Hawthorne, NY 10532, USA).</Description>
    <AttributeProperty isSynthetic='true' name='addressLines' originalName='addressLines' assignable='true' index='6'>
      <Description>The lines of the formatted address. This may be derived using other elements of the PostalAddress. In fact, such derivation is probably preferred.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='boxNumber' originalName='boxNumber' assignable='true' index='2'>
      <Description>The mail receptacle located at a public post office or other postal service provider.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='buildingName' originalName='buildingName' assignable='true' index='5'>
      <Description>The name of the building. 
 
e.g: Residence Petit Paradis</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='carrierRoute' originalName='carrierRoute' assignable='true' index='10'>
      <Description>A postal carrier route is the group of addresses assigned the same code to aid in mail delivery. This is not synonymous with a zip or postal code.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='floorNumber' originalName='floorNumber' assignable='true' index='3'>
      <Description>The floor number.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='postalBarcode' originalName='postalBarcode' assignable='true' index='7'>
      <Description>The representation of this address as a bar code that can be printed on mail.  Some mail operators offer discount on bulk mail if a valid barcode has been printed by the sender. 
 
e.g: The US Zip+4 Postnet barcode is a 12 digits postal bar code structured as follows: 5 digits for the ZIP code. 4 digits for the ZIP+4 code. 2 digits representing the last 2 digits of the street address.1 digit checksum calculated as the sum of the other digits modulo 10 

e.g: The US Zip+4 Postnet barcode is a 12 digits postal bar code structured as follows: 5 digits for the ZIP code. 4 digits for the ZIP+4 code. 2 digits representing the last 2 digits of the street address.1 digit checksum calculated as the sum of the other digits modulo 10</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='postDirectionCode' originalName='postDirectionCode' assignable='true' index='9'>
      <Description>When an address consists of a directional indicator after the street address, a code identifying the direction.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.DirectionTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='preDirectionCode' originalName='preDirectionCode' assignable='true' index='8'>
      <Description>When an address consists of a directional indicator before the street address, a code identifying the direction.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.DirectionTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='streetName' originalName='streetName' assignable='true' index='1'>
      <Description>The name of the street where the address is located.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='streetNumber' originalName='streetNumber' assignable='true' index='0'>
      <Description>The street/road number as a component of a street address. For example: "123 Main St"  the "123" is the street number.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='unitNumber' originalName='unitNumber' assignable='true' index='4'>
      <Description>The numeric portion or alphanumeric label that identifies a unit within a building. 
 
e.g: 14 (as in Apartment 14, Bath Road)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='countryelementinclusion' originalName='country element inclusion' assignable='true' index='13' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.CountryElement</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalAddressForcountryelementinclusion' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PostalAddressIncludesStreetAddress' originalName='PostalAddress Includes StreetAddress' assignable='true' index='17' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.StreetAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalAddressForPostalAddressIncludesStreetAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PostalAddressOnCountry' originalName='PostalAddress On Country' assignable='true' index='12' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Country</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalAddressForPostalAddressOnCountry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PostalAddressOnCountrySubdivision' originalName='PostalAddress On CountrySubdivision' assignable='true' index='14' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.CountrySubdivision</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalAddressForPostalAddressOnCountrySubdivision' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PostalAddressOnMunicipality' originalName='PostalAddress On Municipality' assignable='true' index='15' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Municipality</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalAddressForPostalAddressOnMunicipality' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PostalAddressOnPostCode' originalName='PostalAddress On PostCode' assignable='true' index='16' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.PostCode</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalAddressForPostalAddressOnPostCode' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='streetTypeCode' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='AddressLineCollection' assignable='true' typeInferred='true'>
      <TypeName>Array&lt;java.lang.String&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getAddressLineCollection' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='true'>
          <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='splitString'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='addressLines'>
          </PathExpression>
          <Literal isSynthetic='false' typeName='java.lang.String' literalString='|'>
          </Literal>
        </MethodExpression>
      </GetterMethod>
      <SetterMethod isSynthetic='false' name='setAddressLineCollection' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <Parameter isSynthetic='false' name='AddressLineCollection' unbindable='false'>
        </Parameter>
        <SetterExpression isSynthetic='false'>
          <TargetPath isSynthetic='false' pathString='addressLines'>
          </TargetPath>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='joinStrings'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='AddressLineCollection'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='|'>
            </Literal>
          </MethodExpression>
        </SetterExpression>
      </SetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='City' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Municipality</TypeName>
      <GetterMethod isSynthetic='false' name='getCity' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PostalAddressOnMunicipality'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeCode'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='org.acord.aim.ContactandPlace.ContactCodeLists.MunicipalityTypeCodeList' literalString='City'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='County' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Municipality</TypeName>
      <GetterMethod isSynthetic='false' name='getCounty' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PostalAddressOnMunicipality'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeCode'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='org.acord.aim.ContactandPlace.ContactCodeLists.MunicipalityTypeCodeList' literalString='County'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='HasBarCode' assignable='false' typeInferred='true'>
      <TypeName>java.lang.Boolean</TypeName>
      <GetterMethod isSynthetic='false' name='getHasBarCode' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='true'>
          <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='postalBarcode'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='State' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.CountrySubdivision</TypeName>
      <GetterMethod isSynthetic='false' name='getState' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PostalAddressOnCountrySubdivision'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeCode'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='org.acord.aim.ContactandPlace.ContactCodeLists.CountrySubdivisionTypeCodeList' literalString='State'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.StreetAddress' originalName='StreetAddress' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress' isAbstract='false'>
    <Description>This concept represents the components unique to a street address as a place.</Description>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='2'>
      <Description>The name of the street where the address is located.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='number' originalName='number' assignable='true' index='1'>
      <Description>The street/road number as a component of a street address. For example: "123 Main St"  the "123" is the street number.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='postDirectionCode' originalName='postDirectionCode' assignable='true' index='3'>
      <Description>When an address consists of a directional indicator after the street address, a code identifying the direction.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.DirectionTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='preDirectionCode' originalName='preDirectionCode' assignable='true' index='0'>
      <Description>When an address consists of a directional indicator before the street address, a code identifying the direction.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.DirectionTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='typeCode' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.TelecommunicationAddress' originalName='TelecommunicationAddress' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.NetworkAddress' isAbstract='true'>
    <Description>This concept rep[resents the means of identifying and locating a device on a telecommunication network.</Description>
    <AttributeProperty isSynthetic='true' name='localNumber' originalName='localNumber' assignable='true' index='0'>
      <Description>The local number (or subscriber number) must always be dialed in its entirety. The first few digits in the local number typically indicate smaller geographical areas or individual telephone exchanges. In mobile networks they may indicate a network provider in case the area code does not. Callers from a number with a given area/country code usually do not need to (but optionally may) include the particular area/country code in the number dialed, which enables shorter "dial strings" to be used. Devices that dial phone numbers automatically can include the full number with area and access codes, since there is no additional annoyance related to dialing extra digits.

SOURCE: http://en.wikipedia.org/wiki/Local_number#Local_number


Telex messages are routed by addressing them to a telex address, e.g., "14910 ERIC S", where 14910 is the subscriber number, ERIC is an abbreviation for the subscriber's name (in this case Telefonaktiebolaget L.M. Ericsson in Sweden) and S is the country code. Solutions also exist for the automatic routing of messages to different telex terminals within a subscriber organization, by using different terminal identities, e.g., "+T148".

SOURCE: http://en.wikipedia.org/wiki/Telex</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.TelephoneNumber' originalName='TelephoneNumber' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.TelecommunicationAddress' isAbstract='false'>
    <Description>This concept represents a telephone number, including the various components which collectively represent it.

Reference: http://en.wikipedia.org/wiki/Telephone_number</Description>
    <AttributeProperty isSynthetic='true' name='extension' originalName='extension' assignable='true' index='1'>
      <Description>The extension of a telephone number, typically used in business, and often found following the full telephone number.

e.g. 1 800 123 4567 ext. 890</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fullNumber' originalName='fullNumber' assignable='true' index='2'>
      <Description>The full/complete telephone number.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='trunkPrefix' originalName='trunkPrefix' assignable='true' index='0'>
      <Description>A trunk prefix is the number to be dialed in a domestic telephone call, preceding any necessary area codes and subscriber numbers. When the number is called from overseas, the trunk prefix is omitted by the caller. In most countries, such as Australia, Germany and the United Kingdom, the trunk prefix is 0. In the North American Numbering Plan it is 1.

For example, assume a call is to be made to someone in the Australian state of Queensland.  A caller from outside Australia would dial the international access number (international call prefix) of the originating country (00 for many countries, 011 from NANP areas), then dial the country code (in this case 61), omit the trunk prefix, then dial the area code (7), and then the local number: 00 61 7 3333 3333.

Calling interstate (e.g. from Western Australia), a caller would not dial an international access number or country code, but dial the trunk prefix then the area code, followed by the telephone number: 0 7 3333 3333

SOURCE: http://en.wikipedia.org/wiki/Trunk_prefix</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='areaCode' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='countryCode' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.TelexNumber' originalName='TelexNumber' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.TelecommunicationAddress' isAbstract='false'>
    <Description>The telex network is a switched network of teleprinters similar to a telephone network, for the purposes of sending text based messages. This network provided the first common media for international record communications using standard signalling techniques and operating criteria as specified by the International Telecommunications Union.

SOURCE: http://en.wikipedia.org/wiki/Telex</Description>
    <AttributeProperty isSynthetic='true' name='subscriberName' originalName='subscriberName' assignable='true' index='0'>
      <Description>Telex messages are routed by addressing them to a telex address, e.g., "14910 ERIC S", where 14910 is the subscriber number, ERIC is an abbreviation for the subscriber's name (in this case Telefonaktiebolaget L.M. Ericsson in Sweden) and S is the country code. Solutions also exist for the automatic routing of messages to different telex terminals within a subscriber organization, by using different terminal identities, e.g., "+T148".

SOURCE: http://en.wikipedia.org/wiki/Telex</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='terminalIdentity' originalName='terminalIdentity' assignable='true' index='1'>
      <Description>Telex messages are routed by addressing them to a telex address, e.g., "14910 ERIC S", where 14910 is the subscriber number, ERIC is an abbreviation for the subscriber's name (in this case Telefonaktiebolaget L.M. Ericsson in Sweden) and S is the country code. Solutions also exist for the automatic routing of messages to different telex terminals within a subscriber organization, by using different terminal identities, e.g., "+T148".

SOURCE: http://en.wikipedia.org/wiki/Telex</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.AddressSubtypes.UniformResourceLocation' originalName='UniformResourceLocation' superclassName='org.acord.aim.ContactandPlace.AddressSubtypes.NetworkAddress' isAbstract='false'>
    <Description>In addition to identifying a network-homed resource, a UniformResourceLocation specifies the means of acting upon or obtaining the representation: either through description of the primary access mechanism, or through network "location." For example, the URL http://www.wikipedia.org/ identifies a resource (Wikipedia's home page) and implies that a representation of that resource (such as the home page's current HTML code, as encoded characters) is obtainable via HTTP from a network host named www.wikipedia.org

USAGE NOTE: The format of the identifier attribute SHOULD follow the Internet Engineering Task Force (IETF) format described in RFC 1738. http://www.ietf.org/rfc/rfc1738.txt

SOURCE: http://en.wikipedia.org/wiki/Uniform_resource_identifier</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.CommunicationProfileSubtypes.AudioProfile' originalName='AudioProfile' superclassName='org.acord.aim.ContactandPlace.CommunicationProfile' isAbstract='false'>
    <Description>Communication profile that specifies the preferences for tailoring the appearance of a communication that uses voice or other sound. 
 
e.g: A hard of hearing person prefers to be spoken to loudly.</Description>
    <AttributeProperty isSynthetic='true' name='relayServiceIndicator' originalName='relayServiceIndicator' assignable='true' index='3'>
      <Description>Indicates that the person uses a third party to relay the speech portions of telephone conversations using a teletype device and, possibly, to speak the teletype responses. 

Is derived from relationship authorized relay service. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='signLanguageIndicator' originalName='signLanguageIndicator' assignable='true' index='5'>
      <Description>Indicates that the person prefers to communicate using sign language.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='soundAmplificationCode' originalName='soundAmplificationCode' assignable='true' index='4'>
      <Description>Hearing communication preference that allows selection of sound amplification for low frequency, high frequency, or the full spectrum. 
 
e.g: default 
 
e.g: high 
 
e.g: high frequency only 
 
e.g: low 
 
e.g: low frequency only 
 
e.g: medium</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.SoundAmplificationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='speechReplacementIndicator' originalName='speechReplacementIndicator' assignable='true' index='2'>
      <Description>Indicates that if speech, or other information conveying sound, is used in a communication, like via a web site, the speech should be provided with closed captioning and an equivalent text is provided. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='teletypeIndicator' originalName='teletypeIndicator' assignable='true' index='1'>
      <Description>Indicates that the person uses a teletype device (TTY) for telephone communications. A teletype device is a device that allows to type text to, read text from and transmit text via a telephone. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='visualAlertIndicator' originalName='visualAlertIndicator' assignable='true' index='0'>
      <Description>Indicates that a visual alert should be provided in addition to, or instead of, an audio alert. This preference applies to the use of alerts on web pages.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='signLanguageCode' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.CommunicationProfileSubtypes.CognitiveProfile' originalName='CognitiveProfile' superclassName='org.acord.aim.ContactandPlace.CommunicationProfile' isAbstract='false'>
    <Description>Communication profile that specifies the preferences to be used for adaptation of the communication to cognitive capabilities.</Description>
    <AttributeProperty isSynthetic='true' name='dialogLevel' originalName='dialogLevel' assignable='true' index='0'>
      <Description>The level of dialog associated with a cognitive profile.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.CommunicationProfileSubtypes.MobilityProfile' originalName='MobilityProfile' superclassName='org.acord.aim.ContactandPlace.CommunicationProfile' isAbstract='false'>
    <Description>Communication profile that specifies the preferences for adaptation of the communication to motoric capabilities. 
 
e.g: A physically disabled person prefers to receive a house call instead of going to an agent's office.</Description>
    <AttributeProperty isSynthetic='true' name='buttonAndIconSizeCode' originalName='buttonAndIconSizeCode' assignable='true' index='0'>
      <Description>Selection of various button and icon sizes to allow for a different sizing of the areas on the screen that are selection-sensitive. 
 
e.g: default 
 
e.g: large 
 
e.g: larger 
 
e.g: largest</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ButtonAndIconSizeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='houseVisitIndicator' originalName='houseVisitIndicator' assignable='true' index='1'>
      <Description>Indicates that the person prefers to be visited at home.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='keyboardInputIndicator' originalName='keyboardInputIndicator' assignable='true' index='2'>
      <Description>Preference that allows for text input, item selection, menu selection, icon selection, and any other interaction to be supported by keyboard input alone and not require the use of a pointing device such as a mouse. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='timeOutCode' originalName='timeOutCode' assignable='true' index='3'>
      <Description>Allows for additional time beyond the normal to complete form input and submission.  This allows individuals with less mobility extra time if necessary.
 
e.g: default 
 
e.g: long 
 
e.g: longer 
 
e.g: longest</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.TimeOutCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='timeOutDuration' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.CommunicationProfileSubtypes.VisualProfile' originalName='VisualProfile' superclassName='org.acord.aim.ContactandPlace.CommunicationProfile' isAbstract='false'>
    <Description>Communication profile that specifies the preferences for tailoring the appearance of a communication for a visual communication medium, like when using a textual expression.

e.g: A blind person prefers to receive letters in braille.</Description>
    <AttributeProperty isSynthetic='true' name='animationAvoidanceIndicator' originalName='animationAvoidanceIndicator' assignable='true' index='8'>
      <Description>Indicates the disabling of animation. This allows the user who finds animations, present as decoration, objectionable to disable the animation. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='backgroundColoursCode' originalName='backgroundColoursCode' assignable='true' index='7'>
      <Description>Visual communication preference that allows selection of background colors from a limited set. 
 
e.g: black 
 
e.g: blue 
 
e.g: green 
 
e.g: white 
 
e.g: yellow</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ColourCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='brailleIndicator' originalName='brailleIndicator' assignable='true' index='6'>
      <Description>Visual communication preference that allows selection of printed material in braille when possible. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='colourAvoidancesCode' originalName='colourAvoidancesCode' assignable='true' index='5'>
      <Description>Visual communication preference that allows selection of specific colors to be avoided. 
 
e.g: green 
 
e.g: red</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ColourCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='colourCombinationAvoidancesCode' originalName='colourCombinationAvoidancesCode' assignable='true' index='9'>
      <Description>Visual communication preference that allows selection of specific combinations of colors to be avoided. 
 
e.g: blue and yellow 
 
e.g: red and green</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.ColourCombinationAvoidanceCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fontSelectionCode' originalName='fontSelectionCode' assignable='true' index='1'>
      <Description>Visual communication preference that allows selection of alternative fonts. Usually 'sans serif' for a simpler presentation. 
 
e.g: default 
 
e.g: sans serif 
 
e.g: simple</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.FontSelectionCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='highContrastCode' originalName='highContrastCode' assignable='true' index='4'>
      <Description>Visual communication preference that allows selection of high contrast themes from a limited set. 
 
e.g: black on white 
 
e.g: maximum contrast monochrome 
 
e.g: white on black 
 
e.g: yellow on blue</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.HighContrastCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='imageReplacementIndicator' originalName='imageReplacementIndicator' assignable='true' index='3'>
      <Description>Specifies that all information is to be provided in text form in addition to images if these images are used to convey information. 
 
e.g: no 
 
e.g: yes</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='textColoursCode' originalName='textColoursCode' assignable='true' index='2'>
      <Description>Visual communication preference that allows selection of text colors from a limited set. 
 
e.g: black 
 
e.g: blue 
 
e.g: green 
 
e.g: white</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ColourCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='textSizeCode' originalName='textSizeCode' assignable='true' index='0'>
      <Description>Visual communication preference that allows selection of alternative text sizes.

e.g: default

e.g: large

e.g: larger

e.g: largest</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.TextSizeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.AddressNatureCodeList' originalName='AddressNatureCodeList' restricts='java.lang.String'>
    <Description>A classification of an address.</Description>
    <Enumerand isSynthetic='true' name='Mailing' generator='Mailing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Shipping' generator='Shipping'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Business' generator='Business'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Residence' generator='Residence'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.AdministrativeSubDivisionCodeList' originalName='AdministrativeSubDivisionCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the nature of the city with regards to government administrative functions, if applicable.</Description>
    <Enumerand isSynthetic='true' name='StateCapital' generator='State Capital'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CountryCapital' generator='Country Capital'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CountySeat' generator='County Seat'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ButtonAndIconSizeCodeList' originalName='ButtonAndIconSizeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of mobility profiles according to their button and icon size.</Description>
    <Enumerand isSynthetic='true' name='Large' generator='Large'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Larger' generator='Larger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Default' generator='Default'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Largest' generator='Largest'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ColourCombinationAvoidanceCodeList' originalName='ColourCombinationAvoidanceCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of visual profile according to the color combination avoidance.</Description>
    <Enumerand isSynthetic='true' name='RedAndGreen' generator='Red And Green'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BlueAndYellow' generator='Blue And Yellow'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ContactPreferencePurposeCodeList' originalName='ContactPreferencePurposeCodeList' restricts='java.lang.String'>
    <Description>A classification of the purpose of the contact point - that is, a classification of the contact.</Description>
    <Enumerand isSynthetic='true' name='Advertising' generator='Advertising'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Billing' generator='Billing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='General' generator='General'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gifts' generator='Gifts'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Marketing' generator='Marketing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Accounting' generator='Accounting'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Claim' generator='Claim'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inspection' generator='Inspection'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ContactPreferenceStatusCodeList' originalName='ContactPreferenceStatusCodeList' restricts='java.lang.String'>
    <Description>A classification of the various statuses of a contact preference.</Description>
    <Enumerand isSynthetic='true' name='Current' generator='Current'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Previous' generator='Previous'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Temporary' generator='Temporary'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ContactPreferenceUsageCodeList' originalName='ContactPreferenceUsageCodeList' restricts='java.lang.String'>
    <Description>A classification for the use of a contact point - that is, how a particular contact is used on the context of some purpose (see the ContactPointPurpose enumeration).

For example, the purpose may be Billing and the usage is Biller Remittance Address. Another example is the purpose of Mailing and the usage of Primary Residence.

Purpose and Usage do NOT have to used together as shown in the examples.</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Business' generator='Business'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Personal' generator='Personal'>
      <Description>This is for a non-business contact point such as a home address or personal email address.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ContactStatusCodeList' originalName='ContactStatusCodeList' restricts='java.lang.String'>
    <Description>A classification of the various statuses that a contact point can be in.</Description>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
      <Description>The contact point is active.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inactive' generator='Inactive'>
      <Description>The contact  is not active anymore.  It is very unlikely that communication to this contact will be successfully delivered.

e.g: A phone number that is not attributed anymore.

e.g: An email address from an out-of-service domain.

e.g: An email address that is not used anymore.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Listed' generator='Listed'>
      <Description>The contact point is listed.  Although it would normally be made publicly available, it  has been explicitly asked for it to remain confidential.

e.g: Home phone numbers for which their owner asked their phone company not to be included in the local phone book.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotPublished' generator='Not Published'>
      <Description>The contact is not published.  It is not meant to be made publicly available.

e.g: Phone extension numbers in a company.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unlisted' generator='Unlisted'>
      <Description>The contact is not listed.  It is therefore publicly unavailable.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.CountrySubdivisionTypeCodeList' originalName='CountrySubdivisionTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating types of country subdivisions.</Description>
    <Enumerand isSynthetic='true' name='District' generator='District'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Province' generator='Province'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='State' generator='State'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Territory' generator='Territory'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.DayOfWeekCodeList' originalName='DayOfWeekCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of TimingPreferences according to their day of a week.</Description>
    <Enumerand isSynthetic='true' name='Monday' generator='Monday'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tuesday' generator='Tuesday'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wednesday' generator='Wednesday'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Thursday' generator='Thursday'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Friday' generator='Friday'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Saturday' generator='Saturday'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sunday' generator='Sunday'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.DirectionTypeCodeList' originalName='DirectionTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the direction when an address consists of a directional indicator.</Description>
    <Enumerand isSynthetic='true' name='E' generator='E'>
      <Description>East</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='N' generator='N'>
      <Description>North</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NE' generator='NE'>
      <Description>North East</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NW' generator='NW'>
      <Description>North West</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='S' generator='S'>
      <Description>South</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SE' generator='SE'>
      <Description>South East</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SW' generator='SW'>
      <Description>South West</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='W' generator='W'>
      <Description>West</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.FontSelectionCodeList' originalName='FontSelectionCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of visual profile according to the font selection.</Description>
    <Enumerand isSynthetic='true' name='Default' generator='Default'>
      <Description>Identifies a visual profile with font selection 'Default'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SansSerif' generator='Sans Serif'>
      <Description>Identifies a visual profile with font selection 'Sans serif'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Simple' generator='Simple'>
      <Description>Identifies a visual profile with font selection 'Simple'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.GeographicCoordinateSystemCodeList' originalName='GeographicCoordinateSystemCodeList' restricts='java.lang.String'>
    <Description>A code indicating a type of geographic coordinate system.</Description>
    <Enumerand isSynthetic='true' name='Cartesian' generator='Cartesian'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Geodeticheight' generator='Geodetic height'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UPS' generator='UPS'>
      <Description>Universal Polar Stereographic</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UTM' generator='UTM'>
      <Description>Universal Transverse Mercator</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.HighContrastCodeList' originalName='HighContrastCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of visual profiles according to their high contrast.</Description>
    <Enumerand isSynthetic='true' name='BlackOnWhite' generator='Black On White'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MaximumContrastMonochrome' generator='Maximum Contrast Monochrome'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WhiteOnBlack' generator='White On Black'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='YellowOnBlue' generator='Yellow On Blue'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.InNetworkContactTypeCodeList' originalName='InNetworkContactTypeCodeList' restricts='java.lang.String'>
    <Description>A code list identifying various types of in-network contacts.</Description>
    <Enumerand isSynthetic='true' name='Blackberry' generator='Blackberry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Messenger' generator='Messenger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Skype' generator='Skype'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ItineraryCodeList' originalName='ItineraryCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of place usage according to their itinerary.</Description>
    <Enumerand isSynthetic='true' name='Via' generator='Via'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Destination' generator='Destination'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Origin' generator='Origin'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.LegalAddressCodeList' originalName='LegalAddressCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the manner in which an area of land is identified.</Description>
    <Enumerand isSynthetic='true' name='Block' generator='Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CivilDistrict' generator='Civil District'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Concession' generator='Concession'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='County' generator='County'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lot' generator='Lot'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LotNumber' generator='Lot Number'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Meridian' generator='Meridian'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetesandBounds' generator='Metes and Bounds'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plan' generator='Plan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrincipleMeridian' generator='Principle Meridian'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Quarter' generator='Quarter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Range' generator='Range'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Section' generator='Section'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SectionTownship' generator='Section Township'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Subdivision' generator='Subdivision'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubSection' generator='SubSection'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TownshipNumber' generator='Township Number'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.MMSICodeList' originalName='MMSICodeList' restricts='java.lang.String'>
    <Description>A code list categorizing the identity of an MMSI.</Description>
    <Enumerand isSynthetic='true' name='_0' generator='0'>
      <Description>Ship group, coast station, or group of coast stations</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_1' generator='1'>
      <Description>Recently re-assigned for use by SAR aircraft (ITU-R recommendation M.585-4)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_2' generator='2'>
      <Description>Europe</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_3' generator='3'>
      <Description>North and Central America and Caribbean</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_4' generator='4'>
      <Description>Asia</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_5' generator='5'>
      <Description>Oceana</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_6' generator='6'>
      <Description>Africa</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_7' generator='7'>
      <Description>South America</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_8' generator='8'>
      <Description>Assigned for regional Use</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_9' generator='9'>
      <Description>Recently re-assigned to Nav aids and also craft associated with a parent ship (ITU-R recommendation M.585-4)</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.MunicipalityTypeCodeList' originalName='MunicipalityTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating types of municipalities.</Description>
    <Enumerand isSynthetic='true' name='Borough' generator='Borough'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='City' generator='City'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='County' generator='County'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Parish' generator='Parish'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Prefecture' generator='Prefecture'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Town' generator='Town'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Township' generator='Township'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Villa' generator='Villa'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Village' generator='Village'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Zone' generator='Zone'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.PopulationDensityCategoryCodeList' originalName='PopulationDensityCategoryCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Places according to their population density.</Description>
    <Enumerand isSynthetic='true' name='CityArea' generator='City Area'>
      <Description>Identifies a Place with population density 'City area'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotPopulated' generator='Not Populated'>
      <Description>Identifies a Place with population density 'Not populated'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RuralArea' generator='Rural Area'>
      <Description>Identifies a Place with population density 'Rural area'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.PostalSubSystemCodeList' originalName='PostalSubSystemCodeList' restricts='java.lang.String'>
    <Description>A code list identifying the type of postal code system. This is used only when the primary postal code system is being refined in a given locale.

e.g. CEDEX in France</Description>
    <Enumerand isSynthetic='true' name='CEDEX' generator='CEDEX'>
      <Description>CEDEX is a French system that stands for Courrier d'Entreprise à Distribution EXceptionnelle, designed for recipients of large volumes of mail. A postal code is allocated to each large organization.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ProximityTypeCodeList' originalName='ProximityTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the nature of the proximity between two places.</Description>
    <Enumerand isSynthetic='true' name='Adjoins' generator='Adjoins'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Includes' generator='Includes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Intersects' generator='Intersects'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonIntersects' generator='Non-Intersects'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.SoilTypeCodeList' originalName='SoilTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Places according to their soil type.</Description>
    <Enumerand isSynthetic='true' name='Sand' generator='Sand'>
      <Description>Identifies a Place with soil type 'sand'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lime' generator='Lime'>
      <Description>Identifies a Place with soil type 'lime'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rock' generator='Rock'>
      <Description>Identifies a Place with soil type 'rock'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Swamp' generator='Swamp'>
      <Description>Identifies a Place with soil type 'swamp'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.SoundAmplificationCodeList' originalName='SoundAmplificationCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of audio profiles according to their sound amplification.</Description>
    <Enumerand isSynthetic='true' name='Default' generator='Default'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='High' generator='High'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighFrequencyOnly' generator='High Frequency Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Low' generator='Low'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LowFrequencyOnly' generator='Low Frequency Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Medium' generator='Medium'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.TelephoneNetworkTypeCodeList' originalName='TelephoneNetworkTypeCodeList' restricts='java.lang.String'>
    <Description>A code list identifying various types of telephone network contacts.</Description>
    <Enumerand isSynthetic='true' name='Cell' generator='Cell'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Landline' generator='Land-line'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VoIP' generator='VoIP'>
      <Description>Voice over internet protocol</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.TelephoneTypeCodeList' originalName='TelephoneTypeCodeList' restricts='java.lang.String'>
    <Description>The type of phone number.</Description>
    <Enumerand isSynthetic='true' name='Cell' generator='Cell'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fax' generator='Fax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nonenotelephoneexists' generator='None (no telephone exists)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Telephone' generator='Telephone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TextTelephone' generator='Text Telephone'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.TextSizeCodeList' originalName='TextSizeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of visual profiles according to their text size.</Description>
    <Enumerand isSynthetic='true' name='Larger' generator='Larger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Largest' generator='Largest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Medium' generator='Medium'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Smaller' generator='Smaller'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Smallest' generator='Smallest'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.TimeOutCodeList' originalName='TimeOutCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of mobility profiles according to their time out.</Description>
    <Enumerand isSynthetic='true' name='Long' generator='Long'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Longer' generator='Longer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Default' generator='Default'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Longest' generator='Longest'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactCodeLists.ValidationResultCodeList' originalName='ValidationResultCodeList' restricts='java.lang.String'>
    <Description>Contains the allowed values for the result of a validation check on contact preference.</Description>
    <Enumerand isSynthetic='true' name='Invalid' generator='Invalid'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InvalidButAccepted' generator='Invalid But Accepted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Valid' generator='Valid'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.ElectronicContact' originalName='ElectronicContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='true'>
    <Description>This abstract super-type contains attributes relevant to electronic contacts such as texting, messaging, or email.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.EmailContact' originalName='EmailContact' superclassName='org.acord.aim.ContactandPlace.ContactPointSubtypes.MessagingContact' isAbstract='false'>
    <Description>This concept represents an email address as a means of contact.</Description>
    <AttributeProperty isSynthetic='true' name='emailAddress' originalName='emailAddress' assignable='true' index='0'>
      <Description>Defines the email address.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.FaxContact' originalName='FaxContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a fax as a means of contact.</Description>
    <RelationshipProperty isSynthetic='true' name='FaxContactOnTelephoneNumber' originalName='FaxContact On TelephoneNumber' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.TelephoneNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='FaxContactForFaxContactOnTelephoneNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.InNetworkContact' originalName='InNetworkContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a type of contact that is available when both parties are on the same network (e.g. Skype, Blackberry, Messenger).</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code identifying a type of in-network contact.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.InNetworkContactTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='InNetworkContactOnTelephoneNumber' originalName='InNetworkContact On TelephoneNumber' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.TelephoneNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='InNetworkContactForInNetworkContactOnTelephoneNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.InPersonContact' originalName='InPersonContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents an in-person meeting as a means of contact.</Description>
    <RelationshipProperty isSynthetic='true' name='InPersonContactOnPlaceAddress' originalName='InPersonContact On PlaceAddress' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.PlaceAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='InPersonContactForInPersonContactOnPlaceAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.MarineVhfRadioContact' originalName='MarineVhfRadioContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a marine VHF radio  as a means of contact.</Description>
    <RelationshipProperty isSynthetic='true' name='MarineVhfRadioContactOnMmsiNumber' originalName='MarineVhfRadioContact On MmsiNumber' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.MmsiNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarineVhfRadioContactForMarineVhfRadioContactOnMmsiNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.MessagingContact' originalName='MessagingContact' superclassName='org.acord.aim.ContactandPlace.ContactPointSubtypes.ElectronicContact' isAbstract='false'>
    <Description>This concept represents a messaging contact such as OCS, Skype, Twitter, etc.</Description>
    <RelationshipProperty isSynthetic='true' name='MessagingContactOnUniformResourceLocation' originalName='MessagingContact On UniformResourceLocation' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.UniformResourceLocation</TypeName>
      <RelationshipProperty isSynthetic='true' name='MessagingContactForMessagingContactOnUniformResourceLocation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.PagerContact' originalName='PagerContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a pager as a means of contact.</Description>
    <RelationshipProperty isSynthetic='true' name='PagerContactOnTelephoneNumber' originalName='PagerContact On TelephoneNumber' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.TelephoneNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='PagerContactForPagerContactOnTelephoneNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.PostalContact' originalName='PostalContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a postal contact utilized for delivery purposes, such as mailing or shipping.</Description>
    <AttributeProperty isSynthetic='true' name='addressNatureCode' originalName='addressNatureCode' assignable='true' index='0'>
      <Description>A code classifying an address.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.AddressNatureCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PostalContactOnPostalAddress' originalName='PostalContact On PostalAddress' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.PostalAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalContactForPostalContactOnPostalAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.PostalMailContact' originalName='PostalMailContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a contact utilized for delivery of traditional physical mail.</Description>
    <RelationshipProperty isSynthetic='true' name='PostalMailContactOnPostalAddress' originalName='PostalMailContact On PostalAddress' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.PostalAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='PostalMailContactForPostalMailContactOnPostalAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.ShippingContact' originalName='ShippingContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a shipping contact utilized for delivery of physical shipments that may or may not have a recognized postal address delivery point (e.g. the shipping of packages to be delivered to a loading dock, a location to which postal mail would not and/or could not be delivered).</Description>
    <RelationshipProperty isSynthetic='true' name='ShippingContactOnPostalAddress' originalName='ShippingContact On PostalAddress' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.PostalAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='ShippingContactForShippingContactOnPostalAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.TelephoneCallContact' originalName='TelephoneCallContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a telephone as a means of contact.</Description>
    <AttributeProperty isSynthetic='true' name='networkTypeCode' originalName='networkTypeCode' assignable='true' index='1'>
      <Description>A code identifying a type of telephone network contact.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.TelephoneNetworkTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>This attribute defines the type of phone number (fax, cell ...).</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.TelephoneTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='TelephoneContactOnTelephoneNumber' originalName='TelephoneContact On TelephoneNumber' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.TelephoneNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='TelephoneCallContactForTelephoneContactOnTelephoneNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.TelexContact' originalName='TelexContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents a telex as a means of contact.</Description>
    <AttributeProperty isSynthetic='true' name='answerBack' originalName='answerBack' assignable='true' index='1'>
      <Description>Telex answer back.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='wruCode' originalName='wruCode' assignable='true' index='0'>
      <Description>A major advantage of telex is that the receipt of the message by the recipient could be confirmed with a high degree of certainty by the "answerback". At the beginning of the message, the sender would transmit a WRU (Who aRe yoU) code, and the recipient machine would automatically initiate a response which was usually encoded in a rotating drum with pegs, much like a music box. The position of the pegs sent an unambiguous identifying code to the sender, so the sender could verify connection to the correct recipient. The WRU code would also be sent at the end of the message, so a correct response would confirm that the connection had remained unbroken during the message transmission. This gave telex a major advantage over less verifiable forms of communications such as telephone and fax.

SOURCE: http://en.wikipedia.org/wiki/Telex</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='TelexContactOnTelexNumber' originalName='TelexContact On TelexNumber' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.TelexNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='TelexContactForTelexContactOnTelexNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.TextContact' originalName='TextContact' superclassName='org.acord.aim.ContactandPlace.ContactPointSubtypes.ElectronicContact' isAbstract='false'>
    <Description>This concept represents a contact accomplished via SMS text only messaging.</Description>
    <RelationshipProperty isSynthetic='true' name='TextContactOnTelephoneNumber' originalName='TextContact On TelephoneNumber' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.TelephoneNumber</TypeName>
      <RelationshipProperty isSynthetic='true' name='TextContactForTextContactOnTelephoneNumber' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPointSubtypes.WebPageContact' originalName='WebPageContact' superclassName='org.acord.aim.ContactandPlace.ContactPoint' isAbstract='false'>
    <Description>This concept represents an internet web page as a means of contact.</Description>
    <AttributeProperty isSynthetic='true' name='url' originalName='url' assignable='true' index='0'>
      <Description>The Internet web site address of the person/organization. URL stands for Uniform Resource Locator.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='WebPageContactOnUniformResourceLocation' originalName='WebPageContact On UniformResourceLocation' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.UniformResourceLocation</TypeName>
      <RelationshipProperty isSynthetic='true' name='WebPageContactForWebPageContactOnUniformResourceLocation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPreferenceDetails.ContactRestriction' originalName='ContactRestriction' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>A restriction on the frequency and type of contact.

e.g: For John Doe, maximum of 2 contacts in any one day, 15 contacts in a year.</Description>
    <AttributeProperty isSynthetic='true' name='maximumActiveContactCount' originalName='maximumActiveContactCount' assignable='true' index='1'>
      <Description>The maximum number of contacts that can be active concurrently.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='maximumContactCount' originalName='maximumContactCount' assignable='true' index='0'>
      <Description>The maximum number of times of contact in a given period. When a no contacted is preferred, the value is set to zero.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='restrictionDuration' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.ContactPreferenceDetails.TimingPreference' originalName='TimingPreference' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The preferred times and days of contact.

e.g: Robert Paul prefers telephone contact on weekdays between 20:00 and 21:00.</Description>
    <AttributeProperty isSynthetic='true' name='endDayOfWeekCode' originalName='endDayOfWeekCode' assignable='true' index='1'>
      <Description>The day of the week that ends the timing preference period.

e.g: Friday</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.DayOfWeekCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='startDayOfWeekCode' originalName='startDayOfWeekCode' assignable='true' index='0'>
      <Description>The day of the week that starts the timing preference period.

e.g: Monday</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.DayOfWeekCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='endTime' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Time</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='startTime' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Time</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.City' originalName='City' superclassName='org.acord.aim.ContactandPlace.PlaceSubtypes.CountryElement' isAbstract='false'>
    <Description>This concept represents a city.</Description>
    <AttributeProperty isSynthetic='true' name='administrativeSubDivisionCode' originalName='administrativeSubDivisionCode' assignable='true' index='0'>
      <Description>A code indicating the nature of the city with regards to government administrative functions, if applicable.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.AdministrativeSubDivisionCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.Country' originalName='Country' superclassName='org.acord.aim.ContactandPlace.Place' isAbstract='false'>
    <Description>A country is a region legally identified as a distinct entity in political geography.

SOURCE: http://en.wikipedia.org/wiki/Country</Description>
    <RelationshipProperty isSynthetic='true' name='alphaISOCode' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='extendedISOCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='telephonePrefixCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.CountryElement' originalName='CountryElement' superclassName='org.acord.aim.ContactandPlace.Place' isAbstract='true'>
    <Description>The top-level generalization for the parts of a country (from a geographical point of view). Subtypes of this concept, which can be extended, represent the geography-specific parts of a country. Many of the country elements are used by many countries.

e.g., State (United State)
e.g., Department (France)
e.g., Province (Canada)</Description>
    <AttributeProperty isSynthetic='true' name='abbreviation' originalName='abbreviation' assignable='true' index='0'>
      <Description>The standard abbreviation or code for the geographic area. 
 
e.g: NY</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.CountrySubdivision' originalName='CountrySubdivision' superclassName='org.acord.aim.ContactandPlace.Place' isAbstract='false'>
    <Description>This concept represents the first level decomposition of a country into subdivisions.

Examples:
Canada subdivides into provinces and territories
USA subdivides into states, territories, and a district</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code indicating the type of country subdivision (e.g. province, state, etc.).</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.CountrySubdivisionTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='alphaISOCode' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.GeographicRegion' originalName='GeographicRegion' superclassName='org.acord.aim.ContactandPlace.Place' isAbstract='false'>
    <Description>Region is most commonly found as a term used in terrestrial and astrophysics sciences also an area, notably among the different sub-disciplines of geography, studied by regional geographers.

SOURCE: http://en.wikipedia.org/wiki/Region

ACORD Note: As used here, this represents a geographic place with no recognized/formal government. A region may be known formally, with agreed upon understanding and/or be defined as needed by a given party (e.g. New England, Scandinavia, The Tropics, a flood zone, a wind zone, etc.).</Description>
    <RelationshipProperty isSynthetic='true' name='countryelementgroupcountry' originalName='country element group country' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Country</TypeName>
      <RelationshipProperty isSynthetic='true' name='GeographicRegionForcountryelementgroupcountry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='countryelementgrouping' originalName='country element grouping' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.CountryElement</TypeName>
      <RelationshipProperty isSynthetic='true' name='GeographicRegionForcountryelementgrouping' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.Municipality' originalName='Municipality' superclassName='org.acord.aim.ContactandPlace.Place' isAbstract='false'>
    <Description>This concept represents a geographic place recognized by a governmental body, not an administrative subdivision akin to a party/organization. The term "municipality" is a generic term, and can describe any geographic place other than a region, country or first level of country subdivision (refer to the classes [GeographicRegion], [Country] and [CountrySubdivision]).</Description>
    <AttributeProperty isSynthetic='true' name='administrativeSubDivisionCode' originalName='administrativeSubDivisionCode' assignable='true' index='0'>
      <Description>A code indicating the nature of the city with regards to government administrative functions, if applicable.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.AdministrativeSubDivisionCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='1'>
      <Description>A code indicating a type of municipality (e.g. City, Town, etc.).</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.MunicipalityTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='assignedCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.PostCode' originalName='PostCode' superclassName='org.acord.aim.ContactandPlace.Place' isAbstract='false'>
    <Description>A postal code (known in various countries as a post code, postcode, or ZIP code) is a series of letters and/or digits appended to a postal address for the purpose of sorting mail.

SOURCE: http://en.wikipedia.org/wiki/Post_code</Description>
    <AttributeProperty isSynthetic='true' name='assignedCodeExtension' originalName='assignedCodeExtension' assignable='true' index='0'>
      <Description>Value of the postCode extension.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='subSystemTypeCode' originalName='subSystemTypeCode' assignable='true' index='1'>
      <Description>Indicates the type of postal sub-system (if applicable).

e.g. CEDEX in France</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.PostalSubSystemCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='assignedCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='fullPostCode' assignable='true' typeInferred='true'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getFullPostCode' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='true'>
          <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concatWithDelimiter'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='assignedCode/code'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='assignedCodeExtension'>
          </PathExpression>
          <Literal isSynthetic='false' typeName='java.lang.String' literalString='-'>
          </Literal>
        </MethodExpression>
      </GetterMethod>
      <SetterMethod isSynthetic='false' name='setFullPostCode' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <Parameter isSynthetic='false' name='fullPostCode' typeName='java.lang.String' unbindable='false'>
        </Parameter>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='substring'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='.'>
                <VariablePathRoot isSynthetic='false' variableName='fullPostCode'>
                </VariablePathRoot>
              </PathExpression>
              <Literal isSynthetic='false' typeName='java.lang.Integer' literalString='6'>
              </Literal>
              <Literal isSynthetic='false' typeName='java.lang.Integer' literalString='1'>
              </Literal>
            </MethodExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='-'>
            </Literal>
          </MethodExpression>
          <SequenceExpression isSynthetic='false'>
            <SetterExpression isSynthetic='false'>
              <TargetPath isSynthetic='false' pathString='assignedCode/code'>
              </TargetPath>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='substringBefore'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='.'>
                  <VariablePathRoot isSynthetic='false' variableName='fullPostCode'>
                  </VariablePathRoot>
                </PathExpression>
                <Literal isSynthetic='false' typeName='java.lang.String' literalString='-'>
                </Literal>
              </MethodExpression>
            </SetterExpression>
            <SetterExpression isSynthetic='false'>
              <TargetPath isSynthetic='false' pathString='assignedCodeExtension'>
              </TargetPath>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.NumericLibrary' methodName='asNumber'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='substringAfter'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='.'>
                    <VariablePathRoot isSynthetic='false' variableName='fullPostCode'>
                    </VariablePathRoot>
                  </PathExpression>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='-'>
                  </Literal>
                </MethodExpression>
              </MethodExpression>
            </SetterExpression>
          </SequenceExpression>
          <SetterExpression isSynthetic='false'>
            <TargetPath isSynthetic='false' pathString='assignedCode/code'>
            </TargetPath>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='fullPostCode'>
              </VariablePathRoot>
            </PathExpression>
          </SetterExpression>
        </ConditionalExpression>
      </SetterMethod>
    </CustomProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ContactandPlace.PlaceSubtypes.Zone' originalName='Zone' superclassName='org.acord.aim.ContactandPlace.PlaceSubtypes.CountryElement' isAbstract='false'>
    <Description>This concept represents an unformalized geographical zone: the composition is this zone is only specified by the zone name.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.Alert' originalName='Alert' superclassName='org.acord.aim.DocumentandCommunication.Communication' isAbstract='false'>
    <Description>This concept represents an alert (e.g. a message of some type) associated with an activity or event that is communicated from one party to another.

e.g. An alert sent from an insurer to a producer communicating the status of a payment on a policy and that unless funds are received soon, a cancellation for non-payment will be delivered.</Description>
    <AttributeProperty isSynthetic='true' name='alertCode' originalName='alertCode' assignable='true' index='3'>
      <Description>Alert Id code.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='alertStatusCode' originalName='alertStatusCode' assignable='true' index='0'>
      <Description>Alert status</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='message' originalName='message' assignable='true' index='2'>
      <Description>Alert message</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='subject' originalName='subject' assignable='true' index='1'>
      <Description>Alert subject</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='alertDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='alertevent' originalName='alert event' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Event.Event</TypeName>
      <RelationshipProperty isSynthetic='true' name='AlertForalertevent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='alertStatusDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='alretactivity' originalName='alret activity' assignable='true' index='7' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Activity.Activity</TypeName>
      <RelationshipProperty isSynthetic='true' name='AlertForalretactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AskedQuestion' originalName='AskedQuestion' superclassName='org.acord.aim.DocumentandCommunication.SpecifiedContent' isAbstract='false'>
    <Description>A question asked to a party or that will be asked to a party.</Description>
    <RelationshipProperty isSynthetic='true' name='selectedanswer' originalName='selected answer' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.PredefinedAnswer</TypeName>
      <RelationshipProperty isSynthetic='true' name='AskedQuestionForselectedanswer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.Communication' originalName='Communication' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>A record of the receiving or sending (or the intention to send) of a communication between two parties. A communication may be in any medium such as a telephone call, a letter, a fax, an email, a meeting, and so on. 

It may have occurred or be planned to occur. In each case, a discrete occurrence of communication is identifiable. Correspondence which takes place over a period of time, is not a single communication but is modeled as a series of  related communications. 
 
e.g: ABC bank notifying ABC insurer of the payment made by John Doe into ABC insurer's bank account. 
 
e.g: John Doe's quotation request dated 12/25/2004. 
 
e.g: John Doe's quotation request dated 12/25/1990. 
 
e.g: Product launch campaign mailing to John Doe on 01/01/1997 
 
e.g: Tony Green's complaint faxed 08/11/2003 regarding discrepancy on premium. 
 
e.g: Tony Green's complaint faxed 08/11/2010 regarding discrepancy on premium invoice.</Description>
    <AttributeProperty isSynthetic='true' name='communicationDescription' originalName='communicationDescription' assignable='true' index='0'>
      <Description>A free-text statement describing the content of the communication.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='communicationDirectionTypeCode' originalName='communicationDirectionTypeCode' assignable='true' index='4'>
      <Description>The direction of a communication relative to the originator.</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DirectionCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='communicationPurposeCode' originalName='communicationPurposeCode' assignable='true' index='2'>
      <Description>Indicates a basic reason why a communication is initiated or is planned to be initiated.</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.CommunicationPurposeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='communicationStatusCode' originalName='communicationStatusCode' assignable='true' index='1'>
      <Description>The current status of the communication within the life cycle model. 
 
e.g: Awaiting further information 
 
e.g: Closed 
 
e.g: Open</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.CommunicationStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='priorityCode' originalName='priorityCode' assignable='true' index='3'>
      <Description>The value that specifies the importance of this communication relative to other communications. 
 
e.g: 1 (High Priority) 
 
e.g: 5 (Low Priority)</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.PriorityCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='actualTimePeriod' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationDirectedToContactPoint' originalName='Communication Directed To ContactPoint' assignable='true' index='14' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationDirectedToContactPoint' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='communicationfollowup' originalName='communication follow up' assignable='true' index='8' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Communication</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForcommunicationfollowup' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationIdentifiesReceivingPartyRole' originalName='Communication Identifies Receiving PartyRole' assignable='true' index='11' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationIdentifiesReceivingPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationIdentifiesSendingPartyRole' originalName='Communication Identifies Sending PartyRole' assignable='true' index='12' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationIdentifiesSendingPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationOnCommunicationProfile' originalName='Communication On CommunicationProfile' assignable='true' index='13' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.CommunicationProfile</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationOnCommunicationProfile' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationOriginatingFromContactPoint' originalName='Communication Originating From ContactPoint' assignable='true' index='15' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationOriginatingFromContactPoint' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationRepliesToContactPoint' originalName='Communication Replies To ContactPoint' assignable='true' index='16' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationRepliesToContactPoint' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='communicationresponse' originalName='communication response' assignable='true' index='10' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Communication</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForcommunicationresponse' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationSentViaContactPoint' originalName='Communication Sent Via ContactPoint' assignable='true' index='17' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForCommunicationSentViaContactPoint' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='communicationStatusDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='contentofcommunication' originalName='content of communication' assignable='true' index='9' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContent</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationForcontentofcommunication' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='plannedTimePeriod' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContent' originalName='CommunicationContent' superclassName='org.acord.aim.DocumentandCommunication.Communication' isAbstract='false'>
    <Description>The breakdown of a communication into specified and free form content elements. The physical materialization of the communication content, in any format, electronic or physical, is expressed as a document. 
 
e.g: A claim form filled in by John Smith.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A free-text statement used to explain the meaning of this communication content. The description may include the purpose and usage of the communication content as well as other aspects.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>A text reference that aids the identification and understanding of this communication content. 
 
e.g: complaint 
 
e.g: direct debit authorization. 
 
e.g: Policy document</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='communicationcontentcomposition' originalName='communication content composition' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContent</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForcommunicationcontentcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationContentIdentifiesDeclaringPartyRole' originalName='CommunicationContent Identifies Declaring PartyRole' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForCommunicationContentIdentifiesDeclaringPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationContentIdentifiesOwningPartyRole' originalName='CommunicationContent Identifies Owning PartyRole' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForCommunicationContentIdentifiesOwningPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='communicationcontentsubjectreference' originalName='communication content subject reference' assignable='true' index='8' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.InformationModelObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForcommunicationcontentsubjectreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='communicationcorrection' originalName='communication correction' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContent</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForcommunicationcorrection' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='contentexpression' originalName='content expression' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Document</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForcontentexpression' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='productcommunicationmaterial' originalName='product communication material' assignable='true' index='7' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentForproductcommunicationmaterial' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecification' originalName='CommunicationContentSpecification' superclassName='org.acord.aim.CommonElements.CommonClasses.Specification' isAbstract='true'>
    <Description>This defines any element that can be used to form communication content. The elementary components of a template are either static or dynamic pieces of text or graphics.</Description>
    <AttributeProperty isSynthetic='true' name='title' originalName='title' assignable='true' index='0'>
      <Description>The label that identifies the non-unique specification of this document specification. 
 
e.g: Addressee section, main body, policyholder section and Appendix A.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='versionNumber' originalName='versionNumber' assignable='true' index='1'>
      <Description>Version number</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='languageCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.Document' originalName='Document' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept is a generalizing concept for all documents (for example : an expert report, a letter with free text, passport...)</Description>
    <AttributeProperty isSynthetic='true' name='freeContentIndicator' originalName='freeContentIndicator' assignable='true' index='8'>
      <Description>This indicates the document is a free content document.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='0'>
      <Description>An identifier assigned to a document to uniquely identify it (e.g. police report number, fire department report number, etc.).</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='modifiableIndicator' originalName='modifiableIndicator' assignable='true' index='3'>
      <Description>Define if the document is modifiable or not</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='1'>
      <Description>It is possible to give a name to a document. This name can be used to give a short description of the document. Example: Mr Smith's passport</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='signatureRequiredIndicator' originalName='signatureRequiredIndicator' assignable='true' index='6'>
      <Description>Define if yes or no the signature is required</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='signedIndicator' originalName='signedIndicator' assignable='true' index='7'>
      <Description>Define if the document has been signed</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='storageLocation' originalName='storageLocation' assignable='true' index='5'>
      <Description>Define where the user stocked the letters (ex: paper letter stored in  the file, email in the data processing)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='2'>
      <Description>Defines the type or the nature of a document in simple cases. See also the DocumentCategory to handle specific issues.</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DocumentTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='versionIdentifier' originalName='versionIdentifier' assignable='true' index='4'>
      <Description>Defines the document version number.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='documentEmissionDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='documentfilecomposition' originalName='document file composition' assignable='true' index='14' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Document</TypeName>
      <RelationshipProperty isSynthetic='true' name='DocumentFordocumentfilecomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='documentreplacement' originalName='document replacement' assignable='true' index='13' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Document</TypeName>
      <RelationshipProperty isSynthetic='true' name='DocumentFordocumentreplacement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='languageCode' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='receptionDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.FreeTextAnswer' originalName='FreeTextAnswer' superclassName='org.acord.aim.DocumentandCommunication.UnspecifiedContent' isAbstract='false'>
    <Description>An answer to a open question expressed as free text statement.</Description>
    <RelationshipProperty isSynthetic='true' name='answertoquestion' originalName='answer to question' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.DocumentandCommunication.AskedQuestion</TypeName>
      <RelationshipProperty isSynthetic='true' name='FreeTextAnswerForanswertoquestion' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.SpecifiedContent' originalName='SpecifiedContent' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContent' isAbstract='false'>
    <Description>Communication content based on a standard text specification.</Description>
    <RelationshipProperty isSynthetic='true' name='sourceofspecifiedcontent' originalName='source of specified content' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='SpecifiedContentForsourceofspecifiedcontent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.UnspecifiedContent' originalName='UnspecifiedContent' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContent' isAbstract='false'>
    <Description>Communication content not based on a standard text specification but expressed in a free format.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AccountingDocumentSubtypes.AgreementLoanRepaymentBill' originalName='AgreementLoanRepaymentBill' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AccountingDocument' isAbstract='false'>
    <Description>This concept represents the bill of a loan repayment to the company.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AccountingDocumentSubtypes.Invoice' originalName='Invoice' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AccountingDocument' isAbstract='false'>
    <Description>This concept demonstrates the physical nature of an invoice. This does not represent the part of financial operation, but simply the physically printed invoice mailed to the customer/service provider.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AccountingDocumentSubtypes.PremiumBill' originalName='PremiumBill' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AccountingDocument' isAbstract='false'>
    <Description>This concept represents the bill of an insurance agreement premium.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AccountingDocumentSubtypes.PremiumCallForm' originalName='PremiumCallForm' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AccountingDocument' isAbstract='false'>
    <Description>This document stands for the agreement premium call form sent by the insurance company to its policy holder (a company or a person)</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AccountingDocumentSubtypes.PremiumReceipt' originalName='PremiumReceipt' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AccountingDocument' isAbstract='false'>
    <Description>This document stands for the receipt sent by the insurance company to the policy holder once a premium is paid.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AgreementDocumentSubtypes.AgreementForm' originalName='AgreementForm' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AgreementDocument' isAbstract='false'>
    <Description>A document that comprises the agreement/policy/contract and includes policy language (e.g. conditions, provisions, exclusions, etc.) including the declarations page.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AgreementDocumentSubtypes.AgreementServiceDocument' originalName='AgreementServiceDocument' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AgreementDocument' isAbstract='false'>
    <Description>A document used to service an agreement (e.g. a certificate of insurance, an insurance id, a request for cancellation, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.AgreementDocumentSubtypes.PlacementDocument' originalName='PlacementDocument' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AgreementDocument' isAbstract='false'>
    <Description>A document used in the placement process (e.g. quote, new business, etc.) such as an application for insurance and any related supplements.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.AccidentReport' originalName='AccidentReport' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept describes of a general accident report.</Description>
    <AttributeProperty isSynthetic='true' name='injuredVictimIndicator' originalName='injuredVictimIndicator' assignable='true' index='0'>
      <Description>States whether a person has been injured</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='witnessPresenceIndicator' originalName='witnessPresenceIndicator' assignable='true' index='1'>
      <Description>States whether there is a witness</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.AssignmentOrder' originalName='AssignmentOrder' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept is a generalizing concept describing the formal message assigning a person or an organization to a task.</Description>
    <AttributeProperty isSynthetic='true' name='assignmentOrderDescription' originalName='assignmentOrderDescription' assignable='true' index='0'>
      <Description>Free description</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='assignmentOrderIdentifier' originalName='assignmentOrderIdentifier' assignable='true' index='1'>
      <Description>An identifier assigned to the assignment order for identification purposes.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.ClaimNote' originalName='ClaimNote' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept enable to attach a note to a Claim.</Description>
    <AttributeProperty isSynthetic='true' name='confidentialIndicator' originalName='confidentialIndicator' assignable='true' index='2'>
      <Description>An indicator the claim note is confidential in nature.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>A text description of the claim note.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='1'>
      <Description>Indicates the status of the claim note.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimnotecomposition' originalName='claim note composition' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.ClaimNote</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimNoteForclaimnotecomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.InspectionReport' originalName='InspectionReport' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept stands for an inspection report. The inspection report lists a series of elements; each having a name and a description.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.LossAdjusterReport' originalName='LossAdjusterReport' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept represents a document produced by the loss adjuster related to the loss/claim.</Description>
    <AttributeProperty isSynthetic='true' name='conditionsOfAppraisal' originalName='conditionsOfAppraisal' assignable='true' index='0'>
      <Description>Gives basic information about the condition of what must be appraised. Example of use: vehicle is out of order</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='repairableIndicator' originalName='repairableIndicator' assignable='true' index='1'>
      <Description>True if the claim object can be repaired</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='reportDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reportTotalAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.MedicalReport' originalName='MedicalReport' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept represents the medical report or medical form (for a claim or an underwriting request) used as part of the medical assessment process.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.RecoveryLetter' originalName='RecoveryLetter' superclassName='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' isAbstract='false'>
    <Description>This concept materializes the recovery letter which may be received or submitted.</Description>
    <AttributeProperty isSynthetic='true' name='contestReason' originalName='contestReason' assignable='true' index='0'>
      <Description>The reason of the contest by the insurance company</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='refusalReason' originalName='refusalReason' assignable='true' index='1'>
      <Description>This is the description of the refusal reason(s) following a recovery contest.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='submittedIndicator' originalName='submittedIndicator' assignable='true' index='2'>
      <Description>An indicator the recovery letter has been submitted.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.ServiceOrder' originalName='ServiceOrder' superclassName='org.acord.aim.DocumentandCommunication.ClaimDocumentSubtypes.AssignmentOrder' isAbstract='false'>
    <Description>This concept stands for the service  order document, in case of an service provider assignment in case of a material benefit.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CommunicationContentSpecificationComposition' originalName='CommunicationContentSpecificationComposition' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>A composition mechanism whereby a communication content template is decomposed into one or more child templates. 
 
e.g: A mailing document template is decomposed into a header dynamic text block and a body static text block. 
 
e.g: A product development survey the question: "Are you interested in this option?"</Description>
    <AttributeProperty isSynthetic='true' name='sequenceNumber' originalName='sequenceNumber' assignable='true' index='0'>
      <Description>The relative position of the component standard text specification in the composite text block.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationContentSpecificationCompositionOnCommunicationContentSpecification' originalName='CommunicationContentSpecificationComposition On CommunicationContentSpecification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentSpecificationCompositionForCommunicationContentSpecificationCompositionOnCommunicationContentSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CommunicationContentSpecificationCompositionOnCommunicationContentTemplate' originalName='CommunicationContentSpecificationComposition On CommunicationContentTemplate' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CommunicationContentTemplate</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommunicationContentSpecificationCompositionForCommunicationContentSpecificationCompositionOnCommunicationContentTemplate' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CommunicationContentTemplate' originalName='CommunicationContentTemplate' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecification' isAbstract='false'>
    <Description>A template comprised of one or more text or graphical components. Text components include static text blocks and dynamic text blocks.

e.g: The form used to fill in auto claims.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CustomerNeedsScenario' originalName='CustomerNeedsScenario' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CommunicationContentTemplate' isAbstract='false'>
    <Description>The customer needs scenarios are used by the selling function to demonstrate the customer which risks he is running.  This is normally not communicated to the insurance company. Typically, a customer needs scenario identifies certain needs that will be insured later on.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.DynamicTextBlock' originalName='DynamicTextBlock' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecification' isAbstract='false'>
    <Description>A mechanism for including variable information in specified content.</Description>
    <AttributeProperty isSynthetic='true' name='variableExpression' originalName='variableExpression' assignable='true' index='0'>
      <Description>A formal description identifying the variable information part of this dynamic text block and how it is resolved.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.PossibleAnswer' originalName='PossibleAnswer' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The identification of a possible predefined answer to a question template in the case of a multiple choice question.</Description>
    <AttributeProperty isSynthetic='true' name='sequenceNumber' originalName='sequenceNumber' assignable='true' index='0'>
      <Description>The indication of the logical position of this predefined answer within the list of possible answers for a given question template.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PossibleAnswerOnPredefinedAnswer' originalName='PossibleAnswer On PredefinedAnswer' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.PredefinedAnswer</TypeName>
      <RelationshipProperty isSynthetic='true' name='PossibleAnswerForPossibleAnswerOnPredefinedAnswer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PossibleAnswerOnQuestionTemplate' originalName='PossibleAnswer On QuestionTemplate' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.QuestionTemplate</TypeName>
      <RelationshipProperty isSynthetic='true' name='PossibleAnswerForPossibleAnswerOnQuestionTemplate' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.PredefinedAnswer' originalName='PredefinedAnswer' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.StaticTextBlock' isAbstract='false'>
    <Description>The definition of a possible or selected choice in a multiple choice question. 
 
e.g: Application submitted. 
 
e.g: Not at all. 
 
e.g: Phone</Description>
    <RelationshipProperty isSynthetic='true' name='defaultanswer' originalName='default answer' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.QuestionTemplate</TypeName>
      <RelationshipProperty isSynthetic='true' name='PredefinedAnswerFordefaultanswer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.Questionnaire' originalName='Questionnaire' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CommunicationContentTemplate' isAbstract='false'>
    <Description>A kind of document template that can be sent out to a party with a number of asked questions that allow a limited set of predefined answers or free text answers. In a marketing context, this is also known as a survey. 
 
e.g: Appointment feedback questionnaire. 
 
e.g: Car insurance questionnaire. 
 
e.g: Customer satisfaction survey.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.QuestionTemplate' originalName='QuestionTemplate' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.StaticTextBlock' isAbstract='false'>
    <Description>The definition of a question, that can be asked to a party. 
 
e.g: Are you interested in this option? 
 
e.g: Contact method used? 
 
e.g: Good health? 
 
e.g: The question Good health?</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.StaticTextBlock' originalName='StaticTextBlock' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecification' isAbstract='false'>
    <Description>The simplest of the primary building blocks of a document template. It is a piece of text that contains no variable elements. The text can be of any size and could, in a special case, represent the whole document.</Description>
    <AttributeProperty isSynthetic='true' name='text' originalName='text' assignable='true' index='0'>
      <Description>The text to be used as static specified content.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.TermAndCondition' originalName='TermAndCondition' superclassName='org.acord.aim.DocumentandCommunication.CommunicationContentSpecificationSubtypes.CommunicationContentTemplate' isAbstract='false'>
    <Description>A document template used to describe in textual statements the rights and obligations of each party in any kind of agreement. Typically terms and conditions are expressed as clauses in insurance contracts. The term and condition is structured in a specific way so that they may be used over and over again. For example, it could be structured with blanks, static text blocks or dynamic text blocks.</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.CommunicationPurposeCodeList' originalName='CommunicationPurposeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Communications according to their purpose.</Description>
    <Enumerand isSynthetic='true' name='CampaignMailing' generator='Campaign Mailing'>
      <Description>Identifies a Communication with purpose 'Campaign mailing'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Complaint' generator='Complaint'>
      <Description>Identifies a Communication with purpose 'Complaint'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DemographicData' generator='Demographic Data'>
      <Description>Identifies a Communication with purpose 'Demographic data'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='QuotationRequest' generator='Quotation Request'>
      <Description>Identifies a Communication with purpose 'Quotation request'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RegularStatement' generator='Regular Statement'>
      <Description>Identifies a Communication with purpose 'Regular statement'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReturnedMail' generator='Returned Mail'>
      <Description>Identifies a Communication with purpose 'Returned mail'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sale' generator='Sale'>
      <Description>Identifies a Communication with purpose 'Sale'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ComplaintHandling' generator='Complaint Handling'>
      <Description>Identifies a Communication with purpose 'Complaint Handling'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.CommunicationStatusCodeList' originalName='CommunicationStatusCodeList' restricts='java.lang.String'>
    <Description>Allowed life cycle states for a communication.</Description>
    <Enumerand isSynthetic='true' name='Abandoned' generator='Abandoned'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cancelled' generator='Cancelled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Declined' generator='Declined'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EndIncomingCommunication' generator='End Incoming Communication'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EndInteractiveCommunication' generator='End Interactive Communication'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EndOutgoingCommunication' generator='End Outgoing Communication'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ended' generator='Ended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Failed' generator='Failed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Invited' generator='Invited'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Missed' generator='Missed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ready' generator='Ready'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReceiptConfirmed' generator='Receipt Confirmed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Received' generator='Received'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Receiving' generator='Receiving'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReceivingFailed' generator='Receiving Failed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Scheduled' generator='Scheduled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sending' generator='Sending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sent' generator='Sent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Started' generator='Started'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DirectionCodeList' originalName='DirectionCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Communications according to their direction.</Description>
    <Enumerand isSynthetic='true' name='External' generator='External'>
      <Description>Identifies a Communication with direction 'External'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inbound' generator='Inbound'>
      <Description>Identifies a Communication with direction 'Inbound'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Internal' generator='Internal'>
      <Description>Identifies a Communication with direction 'Internal'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Outbound' generator='Outbound'>
      <Description>Identifies a Communication with direction 'Outbound'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DocumentMediaCodeList' originalName='DocumentMediaCodeList' restricts='java.lang.String'>
    <Description>Document Media</Description>
    <Enumerand isSynthetic='true' name='Fax' generator='Fax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Telephone' generator='Telephone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Email' generator='Email'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mail' generator='Mail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DocumentRequestStatusCodeList' originalName='DocumentRequestStatusCodeList' restricts='java.lang.String'>
    <Description>This enumeration is the Document Request Status.
It lists the status of the request.</Description>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>This is an other case.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Canceled' generator='Canceled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Closed' generator='Closed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sent' generator='Sent'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DocumentTypeCodeList' originalName='DocumentTypeCodeList' restricts='java.lang.String'>
    <Description>This list defines types of documents.</Description>
    <Enumerand isSynthetic='true' name='Electronic' generator='Electronic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Generated' generator='Generated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Physical' generator='Physical'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Photograph' generator='Photograph'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AudioRecording' generator='Audio Recording'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VideoRecording' generator='Video Recording'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.PriorityCodeList' originalName='PriorityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Communications according to their priority.</Description>
    <Enumerand isSynthetic='true' name='HighPriority' generator='High Priority'>
      <Description>Identifies a Communication with priority '1 (High Priority)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LowPriority' generator='Low Priority'>
      <Description>Identifies a Communication with priority '5 (Low Priority)'.</Description>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AccountingDocument' originalName='AccountingDocument' superclassName='org.acord.aim.DocumentandCommunication.Document' isAbstract='false'>
    <Description>This concept defines documents issued from accounting event management perspective.</Description>
    <RelationshipProperty isSynthetic='true' name='financialoperationdocument' originalName='financial operation document' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='AccountingDocumentForfinancialoperationdocument' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentSubtypes.AgreementDocument' originalName='AgreementDocument' superclassName='org.acord.aim.DocumentandCommunication.Document' isAbstract='false'>
    <Description>This concept represents any document related to an agreement. This could be in the form of a printed policy form, declarations page, coverage letter or other types of agreement documents.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ClaimDocument' originalName='ClaimDocument' superclassName='org.acord.aim.DocumentandCommunication.Document' isAbstract='false'>
    <Description>Claim document is a super-type for all document related to claims 

e.g: Accident report, written witness statement, first notice of loss</Description>
    <RelationshipProperty isSynthetic='true' name='claimtoclaimdocumentassociation' originalName='claim to claim document association' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.Claim</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimDocumentForclaimtoclaimdocumentassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedclaimdocument' originalName='related claim document' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.LossOccurrence.LossOccurrence</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimDocumentForrelatedclaimdocument' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentSubtypes.DocumentRequest' originalName='DocumentRequest' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>This concept represents a formal business activity requesting a specific document.</Description>
    <AttributeProperty isSynthetic='true' name='count' originalName='count' assignable='true' index='4'>
      <Description>Within a document request, indicates the count for the document requested.

e.g. The requester seeks 3 instances/copies of the document.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='documentRequestStatusCode' originalName='documentRequestStatusCode' assignable='true' index='1'>
      <Description>Indicates the status of the document request.</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DocumentRequestStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='mandatoryDocumentIndicator' originalName='mandatoryDocumentIndicator' assignable='true' index='5'>
      <Description>This attribute indicates if the document is mandatory or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='mediaCode' originalName='mediaCode' assignable='true' index='2'>
      <Description>Indicates the nature of the media by which the document request was executed.</Description>
      <TypeName>org.acord.aim.DocumentandCommunication.DocumentandCommunicationCodeLists.DocumentMediaCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='purpose' originalName='purpose' assignable='true' index='0'>
      <Description>This attribute is the purpose of the (Document). 
It describes why the document is needed.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='submittedTo' originalName='submittedTo' assignable='true' index='3'>
      <Description>States the person the DocumentRequest was submitted to.
If needed, the Party to whom the DocumentRequest is to be sent can be identified with the relationship between DocumentRequest and Party.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='communicationRequestDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='documentFirstReminderDate' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='documentrequestresult' originalName='document request result' assignable='true' index='9' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.DocumentandCommunication.Document</TypeName>
      <RelationshipProperty isSynthetic='true' name='DocumentRequestFordocumentrequestresult' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='documentSecondReminderDate' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentSubtypes.File' originalName='File' superclassName='org.acord.aim.DocumentandCommunication.Document' isAbstract='false'>
    <Description>This concept enables the structure of a file including other files and documents.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.DocumentandCommunication.DocumentSubtypes.ReinsuranceSlip' originalName='ReinsuranceSlip' superclassName='org.acord.aim.DocumentandCommunication.Document' isAbstract='false'>
    <Description>The document drawn up by an insurer or broker setting out brief details of a proposed reinsurance to be purchased from a reinsurer and indicating the main terms and conditions. 

Unless specifically agreed, once an agreement is finalized in treaty reinsurance, the slip has to be replaced with a contract (Treaty or Facultative) which expands the wording in order to give it a more legal form and to incorporate implied provisions that were not specifically included in the slip for the sake of brevity. 

The agreement (policy) is deemed to be bound as soon as the reinsurer signs the slip submitted by the broker, hence great care has to be taken to incorporate all material clauses, conditions, warranties and exclusions in the slip. 

Very often slips serve as standalone 'slip policies' which are not required to be replaced by comprehensive contract documents as the implications of abbreviations and brief clause titles are understood universally. In the event of any inadvertent deviation, the intentions indicated in the slip shall take precedence. Where the deviation is the result of subsequent mutual agreement, it is necessary to bind the same through a proper addendum.</Description>
    <AttributeProperty isSynthetic='true' name='slipStatus' originalName='slipStatus' assignable='true' index='0'>
      <Description>As part of the management process of reinsurance, it is necessary to capture the different statuses of the slip during this life-cycle.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='reinsuranceslipassociation' originalName='reinsurance slip association' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Agreement.ReinsuranceAgreementSubtypes.ReinsuranceTreatyAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReinsuranceSlipForreinsuranceslipassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.Event' originalName='Event' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>An incident of interest in an insurance context that can be documented via date/time.</Description>
    <AttributeProperty isSynthetic='true' name='eventDescription' originalName='eventDescription' assignable='true' index='0'>
      <Description>Description of the major event.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='eventName' originalName='eventName' assignable='true' index='1'>
      <Description>Major event name, as Katrina, AZF, etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='causeevent' originalName='cause event' assignable='true' index='5' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Event.Event</TypeName>
      <RelationshipProperty isSynthetic='true' name='EventForcauseevent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='eventEndingDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='EventOnPlace' originalName='Event On Place' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='EventForEventOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='eventStartingDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.FinancialLossEvent' originalName='FinancialLossEvent' superclassName='org.acord.aim.Event.LossEvent' isAbstract='false'>
    <Description>An event consisting of a financial loss.

e.g. Money stolen (burglary, employee theft)

e.g. Money no longer being received (business income)</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.LifeEvent' originalName='LifeEvent' superclassName='org.acord.aim.Event.Event' isAbstract='false'>
    <Description>A significant incident in the existence of a party. These events trigger activities that impact agreements and/or underwriting decisions.

Note: With the exception of a person's death triggering an insurance claim, these events do not typically trigger a Loss.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.LossEvent' originalName='LossEvent' superclassName='org.acord.aim.Event.Event' isAbstract='false'>
    <Description>Loss event is a general event that is the origin of loss occurrences.

Events like a hurricane, flood, any other disaster, are generally the source of several loss events. It might be used for natural disaster management or any loss event, which needs to regroup loss events and claims under the same base. It is qualified by a range of dates, hours, and locations.
In most of the countries, specific rules are applied to manage the claims due to major events (special funds, special deductible, etc.)</Description>
    <AttributeProperty isSynthetic='true' name='majorEventIndicator' originalName='majorEventIndicator' assignable='true' index='1'>
      <Description>Indicates if the loss event is considered as a major event.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketEventIndicator' originalName='marketEventIndicator' assignable='true' index='2'>
      <Description>Indicates if the loss event is considered as a market event.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketEventName' originalName='marketEventName' assignable='true' index='3'>
      <Description>Indicates the name given to the loss event by the market. Can be different than the loss event name that most of the time has been given by the insurer before the market recognition.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='naturalCatastropheIndicator' originalName='naturalCatastropheIndicator' assignable='true' index='0'>
      <Description>Indicates if the event is a natural catastrophe.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='eventReceptionDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='losseventobjectinvolvement' originalName='loss event object involvement' assignable='true' index='7' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='LossEventForlosseventobjectinvolvement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='marketEventCostAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='marketEventRecognitionDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEvent' originalName='NaturalEvent' superclassName='org.acord.aim.Event.Event' isAbstract='false'>
    <Description>An event that occurs naturally (hurricane, tornado, etc). These are not the responsibility of an object (vehicle) or individual (person).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.OrganizationEvent' originalName='OrganizationEvent' superclassName='org.acord.aim.Event.LifeEvent' isAbstract='false'>
    <Description>A significant incident in the existence of an organization that is of interest. Some examples include merger, relocation, and acquisition.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.PersonalEvent' originalName='PersonalEvent' superclassName='org.acord.aim.Event.LifeEvent' isAbstract='false'>
    <Description>A significant incident in the life of a person that is of interest and may trigger actionable activities. It includes events such as marriage, moving, changing job, birth of child, and divorce.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.PropertyLossEvent' originalName='PropertyLossEvent' superclassName='org.acord.aim.Event.LossEvent' isAbstract='false'>
    <Description>An event that involves loss to property.

e.g. Fire, wind, flood, theft</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.VehicleLossEvent' originalName='VehicleLossEvent' superclassName='org.acord.aim.Event.LossEvent' isAbstract='false'>
    <Description>An event involving loss or damage associated with a vehicle.

e.g. vehicle accident, theft, vehicle breakdown, bodily injury or property damage caused by a vehicle</Description>
    <AttributeProperty isSynthetic='true' name='pileUpIndicator' originalName='pileUpIndicator' assignable='true' index='1'>
      <Description>This indicates a multi-vehicle loss.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehiclesInvolvedCount' originalName='vehiclesInvolvedCount' assignable='true' index='0'>
      <Description>Count of vehicles involved in the event.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Avalanche' originalName='Avalanche' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>An avalanche is a sudden rapid flow of snow down a slope, occurring when either natural triggers or human activity causes a critical escalating transition from the slow equilibrium evolution of the snow pack.

SOURCE: http://en.wikipedia.org/wiki/Avalanche</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Earthquake' originalName='Earthquake' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A natural event, an earthquake (also known as a quake, tremor, or temblor) is the result of a sudden release of energy in the Earth's crust that creates seismic waves. 

Source: adapted from http://en.wikipedia.org/wiki/Earthquake.</Description>
    <AttributeProperty isSynthetic='true' name='richterScaleValue' originalName='richterScaleValue' assignable='true' index='0'>
      <Description>The Richter magnitude scale, also known as the local magnitude  (ML) scale, assigns a single number to quantify the amount of seismic energy released by an earthquake.

Source: http://en.wikipedia.org/wiki/Richter_magnitude_scale</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Flood' originalName='Flood' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A natural event involving a significant amount of rainfall resulting in water damage.</Description>
    <RelationshipProperty isSynthetic='true' name='rainFallMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Hailstorm' originalName='Hailstorm' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A natural event involving a significant amount of rainfall resulting in water damage.</Description>
    <RelationshipProperty isSynthetic='true' name='averageHailSizeMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='rainFallMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Hurricane' originalName='Hurricane' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A hurricane is a natural event qualified as a tropical cyclone.

A tropical cyclone is a storm system characterized by a large low-pressure center and numerous thunderstorms that produce strong winds and heavy rain. Depending on its location and strength, a tropical cyclone is referred to by names such as hurricane, typhoon, tropical storm, cyclonic storm, tropical depression, and simply cyclone.

SOURCE: http://en.wikipedia.org/wiki/Tropical_cyclone</Description>
    <RelationshipProperty isSynthetic='true' name='rainFallMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='windSpeedMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.NaturalFire' originalName='NaturalFire' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A natural fire is a fire event caused by nature, such as one caused by lightning. Natural fires are known by various names including: brush fire, forest fire, and wildfire.

SOURCE: http://en.wikipedia.org/wiki/Brush_fire</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Tornado' originalName='Tornado' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A natural event involving heavy wind speeds categorized by the Fujita scale.</Description>
    <AttributeProperty isSynthetic='true' name='fujitaScale' originalName='fujitaScale' assignable='true' index='0'>
      <Description>The Fujita scale (F-Scale), or Fujita-Pearson scale, is a scale for rating tornado intensity, based on the damage tornadoes inflict on structures and vegetation.

Source: http://en.wikipedia.org/wiki/Fujita_scale</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='windSpeedMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Event.NaturalEventSubtypes.Tsunami' originalName='Tsunami' superclassName='org.acord.aim.Event.NaturalEvent' isAbstract='false'>
    <Description>A tsunami or tidal wave is a series of water waves caused by the displacement of a large volume of a body of water, usually an ocean, but can occur in large lakes. Due to the immense volumes of water and energy involved, tsunamis can devastate coastal regions.

SOURCE: http://en.wikipedia.org/wiki/Tsunami</Description>
    <RelationshipProperty isSynthetic='true' name='rainFallMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='windSpeedMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.Account' originalName='Account' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>Accounts are logical or physical concepts for holding similar "things" (e.g., money, policies) that can be managed.</Description>
    <AttributeProperty isSynthetic='true' name='accountIdentifier' originalName='accountIdentifier' assignable='true' index='4'>
      <Description>An identifier assigned to the account by the account authority for identification purposes.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A free-text statement used to explain what is represented by this account. The description may contain an indication of the financial items grouped under the account, the purpose of the account, and so on.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>Name of the Account</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='2'>
      <Description>Status of the Account</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.AccountStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusReasonCode' originalName='statusReasonCode' assignable='true' index='3'>
      <Description>The reason explaining why there was a status change.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.StatusReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='thirdPartyIndicator' originalName='thirdPartyIndicator' assignable='true' index='6'>
      <Description>An indicator of a third party account.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='validityStatusCode' originalName='validityStatusCode' assignable='true' index='5'>
      <Description>valid, not valid</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='accountconsolidation' originalName='account consolidation' assignable='true' index='12' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.Account</TypeName>
      <RelationshipProperty isSynthetic='true' name='AccountForaccountconsolidation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='accountentryaccount' originalName='account entry account' assignable='true' index='14' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AccountEntry</TypeName>
      <RelationshipProperty isSynthetic='true' name='AccountForaccountentryaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='AccountOnParty' originalName='Account On Party' assignable='true' index='13' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='AccountForAccountOnParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='accountshadowing' originalName='account shadowing' assignable='true' index='11' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.Account</TypeName>
      <RelationshipProperty isSynthetic='true' name='AccountForaccountshadowing' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='balanceAmount' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='currencyCode' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effecitvePeriod' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountEntry' originalName='AccountEntry' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The AccountEntry concept represents an atomic transaction or alteration in an Account and allows for current and historical positions of an Account.

All changes to an account, either credit or debit, need to be represented by an account entry. This means that an account balance or position can only be changed by adding new account entries to an account.</Description>
    <AttributeProperty isSynthetic='true' name='accountEntryTypeCode' originalName='accountEntryTypeCode' assignable='true' index='1'>
      <Description>Type of the AccountEntry.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.EntryCategoryCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='2'>
      <Description>A free-text statement used to explain the meaning of the account entry.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='transactionTypeCode' originalName='transactionTypeCode' assignable='true' index='0'>
      <Description>The type of transaction that generated an account entry.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.PaymentBasisReasonCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='accountEntryAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='accountentrydecomposition' originalName='account entry decomposition' assignable='true' index='6' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AccountEntry</TypeName>
      <RelationshipProperty isSynthetic='true' name='AccountEntryForaccountentrydecomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='postedDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='valueDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivity' originalName='FinancialActivity' superclassName='org.acord.aim.Activity.Activity' isAbstract='true'>
    <Description>BusinessFinancialOperation is the generalizing concept for all business financial operations. It is related to its corresponding Financial Operation Request.</Description>
    <RelationshipProperty isSynthetic='true' name='accountentryforactivity' originalName='account entry for activity' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AccountEntry</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialActivityForaccountentryforactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='currencyCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FinancialActivityOnContactPoint' originalName='FinancialActivity On ContactPoint' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialActivityForFinancialActivityOnContactPoint' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvision' originalName='FinancialProvision' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>A definition of a set of real or potential cash-flows that belong together. This can be used for all amounts of money relevant to the modeled organization, including premiums, insurance benefits, invoices, claims, commissions, salaries, and many others. 
 
e.g: A monthly amount of EUR 500 due on the first of each month from 1 April 2001. 
 
e.g: A yearly amount of BEF 15,000 due on the first of May from 1 May 1998 until 1 May 2003 as premium for a car insurance policy. 
 
e.g: An amount of 200 Euro due as a 'reinstatement premium' for the reinstatement of car insurance policy ABC2255 after suspension.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>A textual statement used to explain the meaning of this money provision.  The description may contain the reason for creating the money provision.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='estimateIndicator' originalName='estimateIndicator' assignable='true' index='1'>
      <Description>Indicates that the particular money provision is an estimate.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='basedparticularmoneyprovision' originalName='based particular money provision' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialProvision</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialProvisionForbasedparticularmoneyprovision' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='definitionofparticularmoneyprovision' originalName='definition of particular money provision' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialProvision</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialProvisionFordefinitionofparticularmoneyprovision' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialprovisioninstallment' originalName='financial provision installment' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.Installment</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialProvisionForfinancialprovisioninstallment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='sourceofaccountentry' originalName='source of account entry' assignable='true' index='7' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AccountEntry</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialProvisionForsourceofaccountentry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='sourceoffinancialscheduler' originalName='source of financial scheduler' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialScheduler</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialProvisionForsourceoffinancialscheduler' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionElement' originalName='FinancialProvisionElement' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The definition of an individual part of a money provision element. The money provision element parts represent the finest level of decomposition of money and are used as input for creating account entries. 
 
e.g: The decomposition of a claim payment into benefits and tax. 
 
e.g: The decomposition of a loan reimbursement into principal and interest. If the monthly repayment is constant, the loan reimbursement is represented as a series of cash flows. For every individual payment, a pair of principal and interest is created. 
 
e.g: The decomposition of a premium. The single premium is expressed as a single cash flow. It is decomposed into pure premium, commission recovery, charge and tax (all these are subtypes of money provision element part. 
 
e.g: The price of a service provided under the terms of a provider agreement expressed as a price.</Description>
    <AttributeProperty isSynthetic='true' name='estimateIndicator' originalName='estimateIndicator' assignable='true' index='0'>
      <Description>Indicates that the amount is an estimate. 
 
e.g: False 
 
e.g: True</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fiscalYear' originalName='fiscalYear' assignable='true' index='1'>
      <Description>Considered fiscal year</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='amount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='dueDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='moneyprovisionelementcomposition' originalName='money provision element composition' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialProvision</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialProvisionElementFormoneyprovisionelementcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialScheduler' originalName='FinancialScheduler' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>The definition of how financial transactions are handled based on the information available on money provisions and its components (money provision element and money provision element part). 

While money provisions  only represent the definition of the amounts and their composition, the money scheduler defines how the money will be paid, when it will be paid and who will pay and receive it. 

A money scheduler is also responsible for creating the account entires that represent the necessary details of the created financial transactions. These details are derived from the money provision element parts that are attached to the money provisions for this money scheduler.</Description>
    <AttributeProperty isSynthetic='true' name='dayOfMonth' originalName='dayOfMonth' assignable='true' index='4'>
      <Description>The day of the month associated with the financial schedule, often associated with recurring events  (e.g. day of month due, day of month paid, etc.).</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='2'>
      <Description>A textual statement used to explain the meaning of this money scheduler.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='dueCollectionDateCount' originalName='dueCollectionDateCount' assignable='true' index='3'>
      <Description>This corresponds to the number of payments expected to cover the initial policy loan amount.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='1'>
      <Description>Describes the payment frequency for the financial scheduler.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentMethodCode' originalName='paymentMethodCode' assignable='true' index='0'>
      <Description>The way the money will be paid by the payer to the receiver for this money scheduler. 
 
e.g: Bank transfer 
 
e.g: Cash 
 
e.g: Cheque 
 
e.g: Credit card billing 
 
e.g: Direct debit 
 
e.g: Offset 
 
e.g: Payroll deduction</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='anniversaryDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialschedulerbankaccount' originalName='financial scheduler bank account' assignable='true' index='10' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialSchedulerForfinancialschedulerbankaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialschedulerpaymentmethod' originalName='financial scheduler payment method' assignable='true' index='11' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialSchedulerForfinancialschedulerpaymentmethod' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='firstDueDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='referencePeriod' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusEffectDate' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.Installment' originalName='Installment' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>An installment is the atomic financial provision of a scheduler. As such, it keeps track of information about the provisions as they relate to the scheduler and acts as a type of association class between the two (i.e., it can conceptually be thought of that way).</Description>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>The current status of a payment due within a life-cycle model. 
 
e.g: Due 
 
e.g: Fully settled 
 
e.g: Partially settled 
 
e.g: Replaced 
 
e.g: Written off</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.PaymentDueStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='dueDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='nextDueDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='outstandingAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='paymentPeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.AssetAccount' originalName='AssetAccount' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' isAbstract='false'>
    <Description>The representation of an internal account that holds assets of the modeled organization. 
 
e.g: The accounts receivable asset account of policyholder John Doe that is consolidated into the general accounts receivable asset account. 
 
e.g: A claim that an enterprise is pursuing through legal processes, where the outcome is uncertain.</Description>
    <RelationshipProperty isSynthetic='true' name='accounthedging' originalName='account hedging' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AccountSubtypes.LiabilityAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='AssetAccountForaccounthedging' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.AssetHoldingDetail' originalName='AssetHoldingDetail' superclassName='org.acord.aim.Finance.AccountEntry' isAbstract='false'>
    <Description>An account entry on an asset holding such as a mutual fund associated to a universal life policy. The defining characteristic of the entry is the quantity (or number of units in the case of a unit holding). 
 
e.g: A credit of 10 units as an entry on a unit holding for a unit-linked policy invested in the Acme Securities Fund.</Description>
    <AttributeProperty isSynthetic='true' name='unitCount' originalName='unitCount' assignable='true' index='0'>
      <Description>The quantity (units count)  recorded in the asset holding detail. 
 
e.g: A debit of 10 shares of stock.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.CustomerAccount' originalName='CustomerAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>A Customer Account can holds information such as the policies the customer has with the insurance company.

e.g.Acme Corporation has group life, property, and commercial auto policies with the insurance company.</Description>
    <RelationshipProperty isSynthetic='true' name='customeraccount' originalName='customer account' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='CustomerAccountForcustomeraccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.ExpenseAccount' originalName='ExpenseAccount' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' isAbstract='false'>
    <Description>An account summarizing or listing expense items. This "account" is simply a place to specifically note how an expense is allocated to a department or specific item.

In the end, the expense account is particularly important in summarizing the amounts necessary to calculate an insurance company's expense ratio.
 
e.g: An expense account related to all the expenses of a particular claim. 
 
e.g: An expense account related to all the expenses of a particular marketing campaign.

e.g.: An expense incurred by the information technology department for a specific project.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' originalName='GeneralAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>An generalization for internal accounts created to represent the allocation of funds for specific purposes.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.GeneralAccountEntry' originalName='GeneralAccountEntry' superclassName='org.acord.aim.Finance.AccountEntry' isAbstract='false'>
    <Description>A generalization for the types of entries that related to GeneralAccounts (see the description for GeneralAccount). 

The reserve concept is fully illustrated, but it's likely implementers will expand GeneralAccountEntry subtypes to account for the various types of general accounts.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.InsuranceProviderAccount' originalName='InsuranceProviderAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>The InsuranceProviderAccount is used to track information such as commissions and sales related to providers such as brokers and managing agents. 

The information implementers will extend this concept with should include anything of interest (from an accounting perspective) about the insurance provider.</Description>
    <RelationshipProperty isSynthetic='true' name='InsuranceProviderAccountOwnedByInsuranceProvider' originalName='InsuranceProviderAccount Owned By InsuranceProvider' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsuranceProviderAccountForInsuranceProviderAccountOwnedByInsuranceProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.LiabilityAccount' originalName='LiabilityAccount' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' isAbstract='false'>
    <Description>The representation of an internal account that holds liabilities of the modeled organization. Liabilities in this context can be "on paper" liabilities (e.g., depreciation expense) or physical liabilities.
 
e.g: The liability account that holds Jane Doe's outstanding tax amounts collected with paid premiums but not yet paid to the corresponding government. 
 
e.g: The claims outstanding liability account holding the sum of all claims paid 'on paper' (payments with a future date) but not cleared yet.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.PointAccount' originalName='PointAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>An account expressed in terms of points (units). It allows to group records of derived financial items such as pension rights expressed in points. 
 
e.g: The pension rights accumulation account of John, grouping all the rights John has earned in his career both by professional activities and equivalents.</Description>
    <AttributeProperty isSynthetic='true' name='pointBalance' originalName='pointBalance' assignable='true' index='0'>
      <Description>This represents the balance of points associated with this account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.PointEntryDetail' originalName='PointEntryDetail' superclassName='org.acord.aim.Finance.AccountEntry' isAbstract='false'>
    <Description>For accounts that use points as the measure of quantity (i.e., PointAccount), the PointEntryDetails enables tracking of movement in the account.</Description>
    <RelationshipProperty isSynthetic='true' name='pointEntryDuration' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.ProducerAccount' originalName='ProducerAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>A Producer Account contains information about external parties that sell and manage business on behalf of an insurance company (e.g., broker, agent, producer). In particular, the account should keep information about sales and commissions.</Description>
    <RelationshipProperty isSynthetic='true' name='insuranceproduceraccount' originalName='insurance producer account' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProducer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProducerAccountForinsuranceproduceraccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.ProfitAndLossAccount' originalName='ProfitAndLossAccount' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' isAbstract='false'>
    <Description>The P&amp;L account is one of the most important in all of accounting. It's an aggregation of all expenses and revenue.

 In the model, the connections to things like revenue and liability are not created because each modeled organization may chose to have different summary data for the ProfitAndLossAccount.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.ReserveAccount' originalName='ReserveAccount' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' isAbstract='false'>
    <Description>An amount of money that is kept by the modeled organization to fulfill future liabilities, most often for claims.
 
e.g: Catastrophe reserve. 
 
e.g: Claim reserve, a provision set aside to pay for a claim before the precise estimates of the damage are known. 
 
e.g: Defense reserve, a provision for expenses used to defend a claim. 
 
e.g: Exception reserve, is used for excess of limit or no coverage benefits. 
 
e.g: IBNR reserve, a  provision for incurred but not reported claims. 
 
e.g: Loss reserve, a provision for claims due but not paid or for known claims not yet due. 
 
e.g: Matured Capital to be paid. 
 
e.g: Medical reserve, a provision for claims under Workers Compensation. 
 
e.g: Surrenders to be paid.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.ReserveEntryDetail' originalName='ReserveEntryDetail' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccountEntry' isAbstract='false'>
    <Description>This subtype generalizes information that applies to all types of reserve entries, especially claims reserves.

As of August, 2010, only ClaimReserveEntry exists as a subtype, but theoretically, there are other types of reserves (e.g., allocation of funds for capital projects) that implementers will create.</Description>
    <AttributeProperty isSynthetic='true' name='calculationMethodCode' originalName='calculationMethodCode' assignable='true' index='1'>
      <Description>Identifies the method to be used for calculating the reserve. 
 
e.g: Conventional 
 
e.g: Pseudo-premium 
 
e.g: Zillmerised</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.ReserveCalculationMethodCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='natureOfProvisionCode' originalName='natureOfProvisionCode' assignable='true' index='0'>
      <Description>Categorization of the purpose of the reserve. 
 
e.g: Provision for employee benefits 
 
e.g: Provision for income taxes 
 
e.g: Provision for insurance policy liabilities 
 
e.g: Provision for restructuring (e.g. termination of a line of business, merger/acquisition) 

e.g: Provision for settlement of a lawsuit.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.NatureOfProvisionCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.RevenueAccount' originalName='RevenueAccount' superclassName='org.acord.aim.Finance.AccountSubtypes.GeneralAccount' isAbstract='false'>
    <Description>An account summarizing or listing income items. This is a generalized sales account that implementers may want to subtype for the specific kinds of revenue accounts needed (e.g., campaign results, acquisition results, organization change results).
 
e.g: The account related to all written premiums generated as the result of a campaign.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.StockbrokerAccount' originalName='StockbrokerAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>The Stock Broker Account is specific for stocks, but can either be modified to includes any kind of securities, or other subtypes of ThirdPartyAccount can be created for things like bonds, mutual funds, or FX (i.e., currency).</Description>
    <RelationshipProperty isSynthetic='true' name='StockbrokerAccountManagedByStockbroker' originalName='StockbrokerAccount Managed By Stockbroker' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Stockbroker</TypeName>
      <RelationshipProperty isSynthetic='true' name='StockbrokerAccountForStockbrokerAccountManagedByStockbroker' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.TimeAccount' originalName='TimeAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>An account expressed in terms of units of time period (e.g., years and months).  

e.g.: The pension rights accumulation account of Jane  based on her years of service to the insurance company.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AccountSubtypes.TimeEntryDetail' originalName='TimeEntryDetail' superclassName='org.acord.aim.Finance.AccountEntry' isAbstract='false'>
    <Description>An account entry on a time account. The defining characteristic is the quantity that is recorded as units of time period. 
 
e.g: An entry of 4 years and 6 months employment at a company on an individual time account for retirement rights accumulation. 
 
e.g: An entry of 5 months from long term illness on an individual time account for long term disability rights accumulation. 
 
e.g: An entry of 8 months serving civil duty in the Dutch army on an individual time account for retirement rights accumulation.</Description>
    <RelationshipProperty isSynthetic='true' name='detailDuration' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementFinancialActivity.AgreementLoanPayment' originalName='AgreementLoanPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>As the name implies this type of MoneyOutActivity represents payments on a loan - i.e., payments made on a loan taken from the modeled organization.

e.g.: The money out activity associated with the loan Jane took against her universal life policy from ACME Insurance.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementFinancialActivity.AgreementLoanRepayment' originalName='AgreementLoanRepayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity' isAbstract='false'>
    <Description>This concept represents information about money in activities that are related to agreement/policy loans.

e.g.: The money in activity associated with the payment Jane made to repay the loan she took against her universal life policy from ACME Insurance.</Description>
    <AttributeProperty isSynthetic='true' name='loanRepaymentPercentage' originalName='loanRepaymentPercentage' assignable='true' index='0'>
      <Description>Indicates the rate applied to the contract loan to define the amount billed (between 0 and 100% or even more if surcharge are applied)</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='loanpaybackrepayment' originalName='loan payback repayment' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.AgreementLoanPayBackInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementLoanRepaymentForloanpaybackrepayment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementFinancialActivity.AgreementPremiumCollection' originalName='AgreementPremiumCollection' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity' isAbstract='false'>
    <Description>This fundamental concept represents information about the money in operation corresponding to the collection of Premium.</Description>
    <RelationshipProperty isSynthetic='true' name='premiuminstallmentcollection' originalName='premium installment collection' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.PremiumInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementPremiumCollectionForpremiuminstallmentcollection' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementFinancialActivity.PremiumRefund' originalName='PremiumRefund' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>Premiums are refunded for many reasons including policy cancellation and rating differences for certain kinds of endorsements (e.g., out of sequence). This money out activity represents information about the activity of refunding such funds to insureds.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementFinancialActivity.SurrenderPayment' originalName='SurrenderPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>When a policy is surrendered, the insured (in effect) cancels the policy in exchange for its cash value. This situation most often occur in universal life policies that accrue value over time.

This money out represents information about the payment made in a policy surrender situation.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementInvestmentActivity.AgreementFundAllocation' originalName='AgreementFundAllocation' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='false'>
    <Description>This concept represents information about activities on a savings contract's allocation between investment vehicles. This type of allocation involves trade order(s) of securities that are held as part of the insured's policy.

e.g.: John Doe's universal life policy allocation of mutual funds.</Description>
    <AttributeProperty isSynthetic='true' name='fundAllocationTypeCode' originalName='fundAllocationTypeCode' assignable='true' index='0'>
      <Description>Indicates the type of fund allocation.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.FundAllocationTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementLoan.AgreementLoan' originalName='AgreementLoan' superclassName='org.acord.aim.Finance.FinancialProvision' isAbstract='false'>
    <Description>An agreement loan (or policy loan) is a loan made by an insurer from its general funds to a policy owner on the security of the cash value of a life insurance policy. 

Generally, loans may reduce the policy's death benefit and cash value.</Description>
    <AttributeProperty isSynthetic='true' name='accountDescription' originalName='accountDescription' assignable='true' index='5'>
      <Description>Description of the mean of payment, Name, Bank name, address ...</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='annualInterestRatePercentage' originalName='annualInterestRatePercentage' assignable='true' index='3'>
      <Description>interest rate that applied to the loan</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanInterestMethodCode' originalName='loanInterestMethodCode' assignable='true' index='11'>
      <Description>Indicates the method for the loan interest.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanInterestMethodCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanInterestRateTypeCode' originalName='loanInterestRateTypeCode' assignable='true' index='9'>
      <Description>Indicates the type of loan interest rate.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanInterestTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanInterestTimingCode' originalName='loanInterestTimingCode' assignable='true' index='10'>
      <Description>Indicates the timing of the loan interest.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanInterestTimingCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanOfAgreementValuePercentage' originalName='loanOfAgreementValuePercentage' assignable='true' index='2'>
      <Description>This is the % of the loan versus the contract amount (Capital, other)</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanReasonTypeCode' originalName='loanReasonTypeCode' assignable='true' index='0'>
      <Description>This field allows to describe the reasons of the loan</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanStatusCode' originalName='loanStatusCode' assignable='true' index='8'>
      <Description>Indicates the status of the loan.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.LoanStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanTypeCode' originalName='loanTypeCode' assignable='true' index='7'>
      <Description>Indicates the type of loan.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LoanTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='natureOfLoan' originalName='natureOfLoan' assignable='true' index='1'>
      <Description>Values are
New
Re new</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='6'>
      <Description>Defines the frequency of the loan repayment</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentMeansCode' originalName='paymentMeansCode' assignable='true' index='4'>
      <Description>Different means of payment such as check, cash, direct debit, credit card, etc...</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementloanagreement' originalName='agreement loan agreement' assignable='true' index='17' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementLoanForagreementloanagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='loanAmount' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='loanpaybackinstallmentloan' originalName='loan payback installment loan' assignable='true' index='16' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.AgreementLoanPayBackInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementLoanForloanpaybackinstallmentloan' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='loanPeriod' assignable='true' index='14' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='nextDueDate' assignable='true' index='15' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='unitOfLoanPeriod' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.AgreementLoan.AgreementLoanRepaymentComponent' originalName='AgreementLoanRepaymentComponent' superclassName='org.acord.aim.Agreement.AgreementComponentSubtypes.AgreementFeatureComponent' isAbstract='false'>
    <Description>This concept is used to define the repayment rules of the loan that has been asked by the PolicyHolder. A premium will be issued at a certain frequency to ask the client to pay back his/her loan, with interest.</Description>
    <AttributeProperty isSynthetic='true' name='agreementLoanRepaymentOptionStatusCode' originalName='agreementLoanRepaymentOptionStatusCode' assignable='true' index='3'>
      <Description>Status of partial surrender option.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AgreementOptionStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='annualInterestRatePercentage' originalName='annualInterestRatePercentage' assignable='true' index='2'>
      <Description>interest rate that applied to the loan</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanTypeCode' originalName='loanTypeCode' assignable='true' index='4'>
      <Description>Loan type</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LoanTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='0'>
      <Description>Defines the frequency of the loan repayment</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentMeansCode' originalName='paymentMeansCode' assignable='true' index='5'>
      <Description>Specifies the payment means.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='refundRules' originalName='refundRules' assignable='true' index='1'>
      <Description>Values are 
Capital
Capital + Interest
Interest</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='loanrepaymentbankaccount' originalName='loan repayment bank account' assignable='true' index='8' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementLoanRepaymentComponentForloanrepaymentbankaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='selectedloanoption' originalName='selected loan option' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.LoanFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementLoanRepaymentComponentForselectedloanoption' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusEffectDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.BankAccount.BankAccount' originalName='BankAccount' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>A physical account provided by a bank, which is used for a myriad of things such as paying bills (for the insurance company), receiving premium payments from insureds, and a physical place to transfer funds to and from.</Description>
    <AttributeProperty isSynthetic='true' name='bankAccountTypeCode' originalName='bankAccountTypeCode' assignable='true' index='0'>
      <Description>Indicates the type of bank account.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.BankAccountTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='bankCheckIdentifier' originalName='bankCheckIdentifier' assignable='true' index='1'>
      <Description>The bank check number for an Contact bank account.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='bankCode' originalName='bankCode' assignable='true' index='6'>
      <Description>The code of the bank for an European bank account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='branchCode' originalName='branchCode' assignable='true' index='3'>
      <Description>The branch of the bank for an European bank account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='branchName' originalName='branchName' assignable='true' index='2'>
      <Description>The name of the branch</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='countryCode' originalName='countryCode' assignable='true' index='5'>
      <Description>The country code for an European bank account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='ibanCheckIdentifier' originalName='ibanCheckIdentifier' assignable='true' index='4'>
      <Description>The international bank account number (IBAN) for an European bank account.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='7'>
      <Description>The code of the bank for an European bank account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AccountHolderName' assignable='true' index='8'>
      <Description>The code of the bank for an European bank account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='agreementName' assignable='true' index='9'>
      <Description>The code of the bank for an European bank account.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyIn' originalName='ClaimMoneyIn' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity' isAbstract='false'>
    <Description>This activity concept holds information about money received for claims, such as settlement recoveries. The subtypes of ClaimMoneyIn help to illustrate the meaning of the concept.</Description>
    <RelationshipProperty isSynthetic='true' name='claimcoveragemoneyin' originalName='claim coverage money in' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimCoverage</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimMoneyInForclaimcoveragemoneyin' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyOut' originalName='ClaimMoneyOut' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>This concept represents information about money paid out specifically for claims. There are different types of financial benefits: fees, expenses, indemnities, and lump sum.

A single benefit is for one and only one beneficiary and for one and only one addressee.

If there are several beneficiaries within a benefit folder, there will be as many benefits as beneficiaries.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.ClaimRetrievalActivity' originalName='ClaimRetrievalActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyIn' isAbstract='false'>
    <Description>This concept represents information about a money in activity from a third party retrieval in a claim (e.g., a wreck dealer for example). It results in a deduction of the cost of the claim.</Description>
    <AttributeProperty isSynthetic='true' name='retrievalReason' originalName='retrievalReason' assignable='true' index='0'>
      <Description>Reason / description of the money in : wreck sale, other, etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.CoinsuranceReversalActivity' originalName='CoinsuranceReversalActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimRetrievalActivity' isAbstract='false'>
    <Description>In situations where co-insurance exists, this concept is used to track information about</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.ReceivedRecoveryActivity' originalName='ReceivedRecoveryActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyIn' isAbstract='false'>
    <Description>This concept represents information about the money in activity corresponding to the payment received from an insurance company within a submitted recovery process.</Description>
    <RelationshipProperty isSynthetic='true' name='submittedrecoveryactivity' originalName='submitted recovery activity' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimRecovery.SubmittedRecovery</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReceivedRecoveryActivityForsubmittedrecoveryactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.ReceivedRecoveryReversalActivity' originalName='ReceivedRecoveryReversalActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyOut' isAbstract='false'>
    <Description>A ReceivedRecoveryReversalActivity represents information about a recovery that was received but later reversed - i.e., a payment back out to the place where it was received.</Description>
    <RelationshipProperty isSynthetic='true' name='receivedrecoveryreversal' originalName='received recovery reversal' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.ClaimFinancialActivity.ReceivedRecoveryActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReceivedRecoveryReversalActivityForreceivedrecoveryreversal' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.RecoveryPaymentActivity' originalName='RecoveryPaymentActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyOut' isAbstract='false'>
    <Description>This fairly generic claim money out activity represents information about recoveries that have been paid.</Description>
    <RelationshipProperty isSynthetic='true' name='receivedrecoverypayment' originalName='received recovery payment' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimFinancialBenefit.ReceivedRecoveryBenefit</TypeName>
      <RelationshipProperty isSynthetic='true' name='RecoveryPaymentActivityForreceivedrecoverypayment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.RecoveryPaymentReversalActivity' originalName='RecoveryPaymentReversalActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimRetrievalActivity' isAbstract='false'>
    <Description>This concept represents information about a recovery payment that was reversed; that is, a recovery payment the modeled organization made that was later returned for whatever reason.</Description>
    <RelationshipProperty isSynthetic='true' name='recoverypaymentreversal' originalName='recovery payment reversal' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.ClaimFinancialActivity.RecoveryPaymentActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='RecoveryPaymentReversalActivityForrecoverypaymentreversal' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.SettlementPaymentActivity' originalName='SettlementPaymentActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyOut' isAbstract='false'>
    <Description>This concept represents information about the money out activity within a settlement process.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.ClaimFinancialActivity.SettlementRefundActivity' originalName='SettlementRefundActivity' superclassName='org.acord.aim.Finance.ClaimFinancialActivity.ClaimMoneyIn' isAbstract='false'>
    <Description>This concept represents information about the money in activity corresponding to the refund of a settlement that was paid.</Description>
    <RelationshipProperty isSynthetic='true' name='refunds' originalName='refunds' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.ClaimFinancialActivity.ClaimRetrievalActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='SettlementRefundActivityForrefunds' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='settlementpaymentrefund' originalName='settlement payment refund' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.ClaimFinancialActivity.SettlementPaymentActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='SettlementRefundActivityForsettlementpaymentrefund' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.CommissionFeeTaxFinancialActivity.CommissionPaymentActivity' originalName='CommissionPaymentActivity' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>This simple concept represents information about the activity of paying commissions.</Description>
    <AttributeProperty isSynthetic='true' name='commissionOptionCode' originalName='commissionOptionCode' assignable='true' index='0'>
      <Description>Indicates the type of commission option.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.CommissionOptionCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='commissionTypeCode' originalName='commissionTypeCode' assignable='true' index='1'>
      <Description>Type of commission</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.CommissionTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.CommissionFeeTaxFinancialActivity.CommissionRefundActivity' originalName='CommissionRefundActivity' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity' isAbstract='false'>
    <Description>This concept represents information about the money in activity corresponding to the refund of a commission that was paid.</Description>
    <RelationshipProperty isSynthetic='true' name='commissionrefundorigin' originalName='commission refund origin' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.CommissionFeeTaxFinancialActivity.CommissionPaymentActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='CommissionRefundActivityForcommissionrefundorigin' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.CommissionFeeTaxFinancialActivity.FeePaymentActivity' originalName='FeePaymentActivity' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>FeeSettlement represents information about the activity of fee payments.</Description>
    <AttributeProperty isSynthetic='true' name='feeTypeCode' originalName='feeTypeCode' assignable='true' index='0'>
      <Description>Indicates the type of fee.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.FeeTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.CommissionFeeTaxFinancialActivity.TaxPaymentActivity' originalName='TaxPaymentActivity' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>TaxSettlement represents information about the activity of paying taxes.</Description>
    <RelationshipProperty isSynthetic='true' name='taxpaymentactivity' originalName='tax payment activity' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialProvisionSubtypes.Tax</TypeName>
      <RelationshipProperty isSynthetic='true' name='TaxPaymentActivityFortaxpaymentactivity' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.AccountStatusCodeList' originalName='AccountStatusCodeList' restricts='java.lang.String'>
    <Description>This list defines the status of an account.</Description>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Hold' generator='Hold'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Escheat' generator='Escheat'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.BillingOptionCodeList' originalName='BillingOptionCodeList' restricts='java.lang.String'>
    <Description>Defines the possible billing options applicable for a contract (Agency, Direct ...)</Description>
    <Enumerand isSynthetic='true' name='Agency' generator='Agency'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Direct' generator='Direct'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.CommissionOptionCodeList' originalName='CommissionOptionCodeList' restricts='java.lang.String'>
    <Description>Commission Option</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FullFirstYearCommissionratewithnoPersistency' generator='Full First Year Commission rate with no Persistency'>
      <Description>Full First Year Commission rate with no Persistency 
or Expense Allowance payments from This policy.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Reducedfrontendcommissionwithtrails' generator='Reduced front end commission with trails'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducedFirstYearCommissionrateplustheagreementcounting' generator='Reduced First Year Commission rate plus the agreement counting'>
      <Description>Reduced First Year Commission rate plus the policy counting for Persistency payment

Notes: The policy does not count towards the Expense Allowance plan.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducedFirstYearCommissionrateplustheagreementisincluded' generator='Reduced First Year Commission rate plus the agreement is included'>
      <Description>Reduced First Year Commission rate plus the policy is included in the Expense Allowance plan

Notes: The policy does not pay any persistency amounts</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReducedFirstYearCommissionratewithnoPersistency' generator='Reduced First Year Commission rate with no Persistency'>
      <Description>Reduced First Year Commission rate with no Persistency or Expense Allowance payments included.

Notes: For policies sold under Special Marketing Arrangements</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HeapedLevelizedCommissionOption' generator='Heaped (Levelized) Commission Option'>
      <Description>Levelized (Heaped) commission schedule provides different percentages for first-year and renewal commissions, but the differences between these percentages are smaller than the differences between first-year and renewal commissions under traditional commission schedules.

Notes: Pvt MetLife</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fullfirstyearcommissionnotrails' generator='Full first year commission (no trails)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailsOnlyhightrail' generator='Trails Only (high trail)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Levelcashflowandtrails' generator='Level (cash flow and trails)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nocommissionsiewrap' generator='No commissions (i.e. wrap)'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.CommissionTypeCodeList' originalName='CommissionTypeCodeList' restricts='java.lang.String'>
    <Description>Commission Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearCommission' generator='First Year Commission'>
      <Description>First Year - Represents commissions that are paid on premiums paid in on a policy during the first policy year.  This usually represents initial and deferred first year commission rates and amounts.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpenseReimbursementAllowance' generator='Expense Reimbursement Allowance'>
      <Description>Producer receives additional set % of premium per policy (50% most often) on First year business only. This amount is in lieu of any administrative expense, rent, general office supplies, etc.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpenseReimbursementAllowanceOverride' generator='Expense Reimbursement Allowance Override'>
      <Description>A manager (like General Agent or District Manager) receives additional set % of premium per policy either 0 or 100% on First year business only. This amount is in lieu of any administrative expense, rent, general office supplies, etc.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpenseReimbursementAllowanceSupplementalSplitOverride' generator='Expense Reimbursement Allowance Supplemental/ Split Override'>
      <Description>Allows for split of the ERA to various parties to the policy and is based on first year paid commissions; payable to both a manager (like General Agent or District Manager) and/or Broker.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearGrossDealerCompensationforGA' generator='First Year Gross Dealer Compensation for GA'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the GAs portion or split of the total comp payable on a policy in the first year.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalGrossDealerCompensationforGA' generator='Renewal Gross Dealer Compensation for GA'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the GAs portion or split of the total comp payable on a policy generally in years 2-10.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailGrossDealerCompensationforGA' generator='Trail Gross Dealer Compensation for GA'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the GAs portion or split of the total asset-based comp payable on a policy generally in years 2+.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalGrossDealerCompensationforBroker' generator='Renewal Gross Dealer Compensation for Broker'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the Broker's portion or split of the total comp payable on a policy generally in years 2-10</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarketingAllowanceforBroker' generator='Marketing Allowance for Broker'>
      <Description>Payable to wholesale and retail producers this amount does not have to be 'earned' but the amount is written into the contract at the time of appointment</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearGrossDealerCompensationforBroker' generator='First Year Gross Dealer Compensation for Broker'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the Broker's portion or split of the total comp payable on a policy in the first year.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalCommission' generator='Renewal Commission'>
      <Description>Renewal - This represents commission paid in policy years 2 and forward, which is usually a lower commission rate than the first year commission.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearOverride' generator='First Year Override'>
      <Description>Override commission paid in the first policy year, typically based on the First Year commission or premium.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalOverride' generator='Renewal Override'>
      <Description>Override commission paid after the first policy year, typically based on the Renewal commission or premium.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ServiceFees' generator='Service Fees'>
      <Description>Fees paid to a producer for servicing the contract including periodic visits with the owner</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TransferfromoneProducertoanother' generator='Transfer from one Producer to another'>
      <Description>Transfers between producers, e.g. for consolidating payments when a producer has multiple producer codes with a carrier

Notes: Applicable for Commission Transaction type 7</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Debtrecovery' generator='Debt recovery'>
      <Description>Used to reduce the debt of the producer

Notes: Applicable for Commission Transaction type 7</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FinanceDebt' generator='Finance Debt'>
      <Description>Debt or loan repayments due to the carrier.

Notes: Applicable for Commission Transaction type 7</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailGrossDealerCompensationforBroker' generator='Trail Gross Dealer Compensation for Broker'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the Broker's portion or split of the total asset-based comp payable on a policy generally in years 2+.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.EntryCategoryCodeList' originalName='EntryCategoryCodeList' restricts='java.lang.String'>
    <Description>This code list defines the possible ways of counting an entry (for example, an accounting entry).
Values are debit or credit.</Description>
    <Enumerand isSynthetic='true' name='debit' generator='debit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='credit' generator='credit'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.FeeTypeCodeList' originalName='FeeTypeCodeList' restricts='java.lang.String'>
    <Description>Fee Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgreementFee' generator='Agreement Fee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CollectionFee' generator='Collection Fee'>
      <Description>Collection fee data</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LicenseFee' generator='License Fee'>
      <Description>A fee charged by a regulating jurisdiction for producer licensing.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AppointmentFee' generator='Appointment Fee'>
      <Description>A fee charged by a carrier for an appointment.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FrontEndLoadFee' generator='Front End Load Fee'>
      <Description>A fee that is a proportion of a paid premium.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TransferFee' generator='Transfer Fee'>
      <Description>A charge collected when the owner asked to execute a fund transfer.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WithdrawalFee' generator='Withdrawal Fee'>
      <Description>A fee collected when a policy owner does a withdrawal or partial surrender.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderCharge' generator='Surrender Charge'>
      <Description>A fee charged when a policy is surrendered.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PremiumTaxCollectedonSurrender' generator='Premium Tax Collected on Surrender'>
      <Description>A tax collected when a policy is surrendered.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PremiumTaxCollectedupfront' generator='Premium Tax Collected up front.'>
      <Description>A tax collected when a premium is paid.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TransactionFee' generator='Transaction Fee'>
      <Description>A fee charged when the owner initiates a transaction.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdministrativeFee' generator='Administrative Fee'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FederalTax' generator='Federal Tax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StateTax' generator='State Tax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PremiumPremiumLoad' generator='Premium - Premium Load'>
      <Description>Premium load charges or fees</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PackageDiscountFeePercent' generator='Package Discount Fee Percent'>
      <Description>Discount percent which reduces the sum of percentages for all options.  The discount applies when a combination of options are selected together, when the discount is not attributed to any one or more options specifically.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalesFee' generator='Sales Fee'>
      <Description>A fee that is charged with the facilitation of a transaction.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lapsefee' generator='Lapse fee'>
      <Description>A charge assessed at the time a policy lapses.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FaceIncreaseFee' generator='Face Increase Fee'>
      <Description>Charge to process an increase to the face amount.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FaceDecreaseFee' generator='Face Decrease Fee'>
      <Description>Charge to process a decrease to the face amount.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChangeDeathBenefitOptionFee' generator='Change Death Benefit Option Fee'>
      <Description>Charge to process a change to the Death Benefit Option</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarketingFeeie12b1' generator='Marketing Fee i.e. 12-b1'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BaseMECharges' generator='Base M&amp;E Charges'>
      <Description>The charge is expected in FeePct;  the expected format is illustrated as follows:  25 basis points is represented as 0.25.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AssetBasedAdminCharges' generator='Asset Based Admin Charges'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherAssetBasedCharges' generator='Other Asset Based Charges'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MortalityCharge' generator='Mortality  Charge'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Expensecharge' generator='Expense charge'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Managementfee' generator='Management fee'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.FundAllocationTypeCodeList' originalName='FundAllocationTypeCodeList' restricts='java.lang.String'>
    <Description>This list defines a type of fund allocation.</Description>
    <Enumerand isSynthetic='true' name='Disinvestment' generator='Disinvestment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Investment' generator='Investment'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.NatureOfProvisionCodeList' originalName='NatureOfProvisionCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Reserves according to their nature of provision.</Description>
    <Enumerand isSynthetic='true' name='ProvisionForRestructuring' generator='Provision For Restructuring'>
      <Description>Like in the context of termination of a line of business, or, a merger, or, an acquisition.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProvisionForIncomeTaxes' generator='Provision For Income Taxes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProvisionForInsuranceAgreementLiabilities' generator='Provision For Insurance Agreement Liabilities'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProvisionForEmployeeBenefits' generator='Provision For Employee Benefits'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProvisionForSettlementOfALawsuit' generator='Provision For Settlement Of A Lawsuit'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.PaymentBasisReasonCodeList' originalName='PaymentBasisReasonCodeList' restricts='java.lang.String'>
    <Description>Payment Basis Reason</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusiness1stpaymentfordirectnewbusinesswithtrailoption' generator='Payments: New business - 1st payment for direct new business (with trail option)'>
      <Description>(Payment not through debit.)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalsTrailassetbased' generator='Renewals - Trail (asset based)'>
      <Description>Asset-based (i.e., vs. premium based) commission paid to the broker - paid only on certain products such as SVUL, VULII, etc. Payments usually begin in year 2 of the policy and are typically paid for the lifetime of the contract.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AddOnsAddonsthroughbrokerdealer' generator='Add Ons - Add ons through broker/dealer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AddOnsDirectaddons' generator='Add Ons - Direct add ons'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AddOnsAddonsemployee' generator='Add Ons - Add ons (employee)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BonusesPersistencybonusassetbased' generator='Bonuses - Persistency bonus (asset based)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BonusesPeriodicbonuspremiumbased' generator='Bonuses - Periodic bonus (premium based)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BonusesBonusother' generator='Bonuses - Bonus (other)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdvanceNetpaymentadjustmentforadvance' generator='Advance - Net payment adjustment for advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdvanceCommissionpaymentforanadvance' generator='Advance - Commission payment for an advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdvanceCommissionpaymentfora1035exchangeadvance' generator='Advance - Commission payment for a 1035 exchange advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusiness1stpaymentfordirectnewbusinesswithouttrailoption' generator='Payments: New business - 1st payment for direct new business (without trail option)'>
      <Description>(Payment not through debit.)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrectionsMGAoverrides' generator='Corrections - MGA overrides'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrectionsIncorrectnetting' generator='Corrections - Incorrect netting'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiscellaneousMarketing' generator='Miscellaneous - Marketing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiscellaneousSpecialpaymenttofirm' generator='Miscellaneous - Special payment to firm'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiscellaneousFeeforservice' generator='Miscellaneous - Fee for service'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChargebacksAdjustmentsAdvanceCBfornetadjustmentforanadvance' generator='Chargebacks/Adjustments: Advance - CB for net adjustment for an advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChargebacksAdjustmentsAdvanceCBforadjustmentfora1035advance' generator='Chargebacks/Adjustments: Advance - CB for adjustment for a 1035 advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChargebacksAdjustmentsAdvanceCBforfulladvance' generator='Chargebacks/Adjustments: Advance - CB for full advance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CancellationsCBforcancelagreement' generator='Cancellations - CB for cancel agreement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CancellationsCBcanceledduringfreelook' generator='Cancellations - CB canceled during free look.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusinessDirectbusinessnobrokerdealerinvolvement' generator='Payments: New business - Direct business (no broker/dealer involvement)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderschangesCBduetopartialsurrender' generator='Surrenders/changes - CB due to partial surrender'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderschangesCBduetopartialsurrender1st6months' generator='Surrenders/changes - CB due to partial surrender 1st, 6 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderschangesCBduetopartialsurrender2nd6months' generator='Surrenders/changes - CB due to partial surrender 2nd, 6 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderschangesCBduetosurrenderafter1styear' generator='Surrenders/changes - CB due to surrender after 1st year'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderschangesCBduetofullsurrender' generator='Surrenders/changes - CB due to full surrender'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderschangesCBfordecreaseinagreement' generator='Surrenders/changes - CB for decrease in agreement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeathClaimCBduetodeathclaim' generator='Death Claim - CB due to death claim'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeathClaimCBduetodeathclaim1st6months' generator='Death Claim - CB due to death claim 1st, 6 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeathClaimCBduetodeathclaim2nd6months' generator='Death Claim - CB due to death claim 2nd, 6 months'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeathClaimCBduetodeathclaimafter1styear' generator='Death Claim - CB due to death claim after 1st year'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusinessElectronicappnewbusinesstrail' generator='Payments: New business - Electronic app (new business) trail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgentBrokerDealerrelatedCBduetowrongagentbrokerdealer' generator='Agent/Broker Dealer related: - CB due to wrong agent/broker dealer'>
      <Description>or agent/broker dealer change</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AgentBrokerDealerrelatedCBforinadequatelicensingofrepresentative' generator='Agent/Broker Dealer related: - CB for inadequate licensing of representative'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrectionsCBforagreementnettedatincorrectrate' generator='Corrections - CB for agreement netted at incorrect rate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrectionsCBduetoduplicatepayment' generator='Corrections - CB due to duplicate payment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrectionsCBfornettedincorrectlyduetoage' generator='Corrections - CB for netted incorrectly due to age'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrectionsCBforoverpaid' generator='Corrections - CB for overpaid'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiscellaneousCBformarketing' generator='Miscellaneous - CB for marketing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiscellaneousCBforotheradjustment' generator='Miscellaneous - CB for other adjustment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentisfromanonTaxQualifiedrollover' generator='Payment is from a non Tax Qualified rollover'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusinessElectronicappnewbusinessnotrail' generator='Payments: New business - Electronic app (new business) no trail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearOverride' generator='First Year Override'>
      <Description>This is an amount that is paid to a manager (like General Agent or District Manager) and not to the agent/producer/broker. It's a set %.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalCommission' generator='Renewal Commission'>
      <Description>Amount of commission paid to the broker/agent/producer (only paid in renewal years usually 2-10) depends on product. 

Notes: This is actually a 'commission' in the truest sense of the word but it's NOT trail as the current model indicates. Trail is another animal and we'd like simple 'renewal' commissions (normally premium based for us)</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalOverride' generator='Renewal Override'>
      <Description>This is an amount that is paid to a manager (like General Agent or District Manager) and not to the agent/producer/broker on renewal premiums (usually in years 2-10). It's a set %. 

Notes: Emphasis is on 'override' - it's not considered a 'commission'</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ServiceFeeCommission' generator='Service Fee Commission'>
      <Description>Amount paid to the producer/broker/agent for which they must provide tangible evidence of 'servicing' the policy- after renewal period - usually years 11+.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailOverride' generator='Trail Override'>
      <Description>Amount of override paid to a manager (like General Agent or District Manager) for Trail commissions - Based on asset value vs. premium and paid only on certain products such as SVUL, VULII, etc. Payments begin in year 2 of the policy and are paid for the lifetime of the contract.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpenseReimbursementAllowance' generator='Expense Reimbursement Allowance'>
      <Description>Producer receives additional set % of premium per policy (50% most often) on First year business only. This amount is in lieu of any administrative expense, rent, general office supplies, etc. 

Notes: Typically used by New York Companies</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpenseReimbursementAllowanceOverride' generator='Expense Reimbursement Allowance Override'>
      <Description>A manager (like General Agent or District Manager) receives additional set % of premium per policy either 0 or 100% on First year business only. This amount is in lieu of any administrative expense, rent, general office supplies, etc. 

Notes: Typically used by New York Companies</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExpenseReimbursementAllowanceSupplementalSplitOverride' generator='Expense Reimbursement Allowance Supplemental/ Split Override'>
      <Description>Allows for split of the ERA to various parties to the policy and is based on first year paid commissions; payable to both a manager (like General Agent or District Manager) and/or Broker.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearGrossDealerCompensationforGA' generator='First Year Gross Dealer Compensation  for GA'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the GAs portion or split of the total comp payable on a policy in the first year. 

Notes: It's the total amount of $ available under all the commission structures; it is split and allocated according to agreed parties recommendation. Allows flexible payouts instead of the traditional straight commission structure.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalGrossDealerCompensationforGA' generator='Renewal Gross Dealer Compensation for GA'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the GAs portion or split of the total comp payable on a policy generally in years 2-10. 

Notes: Represents the GAs portion or split of the total comp payable on the policy in the first year.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusinessNewbusinessemployee' generator='Payments: New business - New business (employee)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailGrossDealerCompensationforGA' generator='Trail Gross Dealer Compensation  for GA'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the GAs portion or split of the total asset-based comp payable on a policy generally in years 2+.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FirstYearGrossDealerCompensationforBroker' generator='First Year Gross Dealer Compensation  for Broker'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the Broker's portion or split of the total comp payable on a policy in the first year.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalGrossDealerCompensationforBroker' generator='Renewal Gross Dealer Compensation  for Broker'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the Broker's portion or split of the total comp payable on a policy generally in years 2-10.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailGrossDealerCompensationforBroker' generator='Trail Gross Dealer Compensation  for Broker'>
      <Description>Amount paid per policy. Normal commission structure ignored. Represents the Broker's portion or split of the total asset-based comp payable on a policy generally in years 2+.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarketingAllowanceforBroker' generator='Marketing Allowance for Broker'>
      <Description>Payable to wholesale and retail producers this amount does not have to be 'earned' but the amount is written into the contract at the time of appointment; 

Notes: Broker could get both Expense Reimbursement Allowance ERA and Marketing allowance as it's producer specific; paid weekly and could be paid to the GA or Broker</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Adjustment' generator='Adjustment'>
      <Description>Can be positive or negative meaning a debit or credit. Normally a positive or 'advance' 

Notes: Usually done to advance the entity $ especially in large $ cases; used when the system calculated the commissions incorrectly, rates were loaded incorrectly; transactions are hung up in the system;</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WillbereasoncodeoforiginaltransactionAmountsignwillbereversed' generator='Will be reason code of original transaction. Amount sign will be reversed.'>
      <Description>Original commission code is returned with same $ paid to the producer but shown as a negative; want a void indicator so that the transaction can be identified as 'void'</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Replacement' generator='Replacement'>
      <Description>Indicator so that these transactions can be aggregated and known as replacements which are not paid as true 'first year business' 

Notes: Commissions are NOT paid on full premium for replacements; only paid on the 'new' premium or difference from old to new $</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Reinstatement' generator='Reinstatement'>
      <Description>Commission is paid on premium needed to reinstate the policy due to lapse pending; premiums not being paid, etc. Not paid on full FY commission - no double dipping per se.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommissionpaymentorChargebackduetoannuitization' generator='Commission payment (or Chargeback) due to annuitization'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusiness1styearpaymentfornewbusiness' generator='Payments: New business - 1st year payment for new business'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Commissionpaymentorchargebackforconversion' generator='Commission payment (or chargeback) for conversion'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chargebackduetolapsedagreement' generator='Chargeback due to lapsed agreement.'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ManualRecallofanadvancedpayment' generator='Manual Recall of an advanced payment'>
      <Description>Express commission is recalled manually</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaymentsNewbusiness1035orqualifiedtransfer' generator='Payments: New business - 1035 or qualified transfer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RenewalsRenewaltrailforpremium' generator='Renewals - Renewal (trail for premium)'>
      <Description>Asset-based (i.e., vs. premium based) commission paid to the broker - paid only on certain products such as SVUL, VULII, etc. Payments usually begin in year 2 of the policy and are typically paid for the lifetime of the contract.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.PaymentDueStatusCodeList' originalName='PaymentDueStatusCodeList' restricts='java.lang.String'>
    <Description>Possible life cycle states for payment due.</Description>
    <Enumerand isSynthetic='true' name='Due' generator='Due'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FullySettled' generator='Fully Settled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PartiallySettled' generator='Partially Settled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Replaced' generator='Replaced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WrittenOff' generator='Written Off'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.ReserveCalculationMethodCodeList' originalName='ReserveCalculationMethodCodeList' restricts='java.lang.String'>
    <Description>Identification of the calculation method for calculating a reserve.</Description>
    <Enumerand isSynthetic='true' name='Conventional' generator='Conventional'>
      <Description>Identifies a Reserve with calculation method 'Conventional'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Zillmerised' generator='Zillmerised'>
      <Description>Identifies a Reserve with calculation method 'Zillmerised'. 
Zillmerisation is a method of calculating reserves in life insurance that allows for the acquisition costs incurred when a contract is written. Zillmerised reserves are lower than reserves that are not zillmerised. The method applies to regular premium business. It is effectively a variation of the net premium method, which increases the future premiums valued to take account of acquisition costs incurred.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PseudoPremium' generator='Pseudo Premium'>
      <Description>Identifies a Reserve with calculation method 'Pseudo-Premium'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Finance.FinanceCodeLists.SolvencyCapitalAllocationTierCodeList' originalName='SolvencyCapitalAllocationTierCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of own funds solvency capital tier allocations according to the tier which the allocation is made to. 
 
e.g: QIS4 TS.V.D</Description>
    <Enumerand isSynthetic='true' name='Tier1' generator='Tier 1'>
      <Description>Identifies an own funds solvency capital tier allocation allocated to 'Tier 1' of solvency capital.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tier2' generator='Tier 2'>
      <Description>Identifies an own funds solvency capital tier allocation allocated to 'Tier 2' of solvency capital.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tier3' generator='Tier 3'>
      <Description>Identifies an own funds solvency capital tier allocation allocated to 'Tier 3' of solvency capital.</Description>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.AdjustmentActivity' originalName='AdjustmentActivity' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='false'>
    <Description>An amount or percentage (factor) used  to adjust a money provision, a money provision element, or a money provision element part, either by increasing it (surcharge adjustment) or decreasing it (discount adjustment). 
 
e.g: A commercial discount of 2% on the whole premium. 
 
e.g: A discount of 25% that only applies to the commission recovery for an agreement. 
 
e.g: A surplus of 2% applied to the pure premium for a house constructed of more than 50% wood in a fire insurance policy.</Description>
    <AttributeProperty isSynthetic='true' name='factor' originalName='factor' assignable='true' index='0'>
      <Description>A factor applied to another amount as a discount or surcharge, decreasing or increasing the other amount. 
 
e.g: 0,98 
 
e.g: 105,65</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reason' originalName='reason' assignable='true' index='1'>
      <Description>Identifies the reason for the adjustment applied. 
 
e.g: Age of building 
 
e.g: Alarm system 
 
e.g: Amount of insurance 
 
e.g: Automatic increase 
 
e.g: Class of business 
 
e.g: Equipment breakdown exclusion 
 
e.g: Mall 
 
e.g: Policy duration 
 
e.g: Sole occupancy

 e.g: Specialty program 

e.g: Sprinkler 

e.g: Sprinkler leakage exclusion 

e.g: Vandalism exclusion 

e.g: Windstorm exclusion</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='agreementadjustment' originalName='agreement adjustment' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialScheduler</TypeName>
      <RelationshipProperty isSynthetic='true' name='AdjustmentActivityForagreementadjustment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='financialprovisionadjustment' originalName='financial provision adjustment' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialProvision</TypeName>
      <RelationshipProperty isSynthetic='true' name='AdjustmentActivityForfinancialprovisionadjustment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='moneyprovisionelementpartadjustment' originalName='money provision element part adjustment' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialProvisionElement</TypeName>
      <RelationshipProperty isSynthetic='true' name='AdjustmentActivityFormoneyprovisionelementpartadjustment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.AssetAllocationActivity' originalName='AssetAllocationActivity' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='false'>
    <Description>This activity represents the assignment of financial provisions to a given account.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.DunningActivity' originalName='DunningActivity' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='false'>
    <Description>This concept provides a follow up of dunning processes on the related contract.

If an open item becomes due for dunning, the system should execute the dunning activity/activities relevant to this item. Dunning activities include:
-Information for the user department
-Reminder letters
-Dunning letters to the account holder
-Cancellation letters
-Notification to the supporting agent
-Messages to the authorities (specifically for auto liability)
-Confirmations to policy management (contract reversal, for example)
-Assignment of a dunning charge to the insurance object to be dunned</Description>
    <AttributeProperty isSynthetic='true' name='daysInArrearsCount' originalName='daysInArrearsCount' assignable='true' index='1'>
      <Description>Describes the number of days in arrears that have to have passed since the due date for a receivable, before it can be dunned.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='dunningStatusCode' originalName='dunningStatusCode' assignable='true' index='3'>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.CommonOptionsCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='facultativeLevel' originalName='facultativeLevel' assignable='true' index='2'>
      <Description>Dunning levels marked as "facultative" can be skipped, if the days in arrears count is reached. This means that it is possible to skip the reminder letter (dunning level 1) for a dunning notice, and execute the qualified dunning notice (dunning level 2) straight away instead.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='level' originalName='level' assignable='true' index='0'>
      <Description>The dunning levels are determined on the basis of the last entries in the dunning history. If an item, which has already been dunned, has exceeded the days in arrears since the due date, the subsequent dunning level is assigned to it. If the days in arrears since the due date, the subsequent dunning level is assigned to it. If the days in arrears have not yet been exceeded, the item takes the current dunning level.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='dunningactivityinstallment' originalName='dunning activity installment' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.Installment</TypeName>
      <RelationshipProperty isSynthetic='true' name='DunningActivityFordunningactivityinstallment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastDunningNoticeDuration' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity' originalName='MoneyInActivity' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='false'>
    <Description>This is the super-type of all financial operations corresponding to money in flows.</Description>
    <AttributeProperty isSynthetic='true' name='collectionType' originalName='collectionType' assignable='true' index='0'>
      <Description>Describe the origin or cause of this MoneyIn. For example, a payment done by the customer or the cancel of a payment.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='collectionDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='moneyinpaymentmethod' originalName='money in payment method' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod</TypeName>
      <RelationshipProperty isSynthetic='true' name='MoneyInActivityFormoneyinpaymentmethod' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='valueDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInRefund' originalName='MoneyInRefund' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' isAbstract='false'>
    <Description>This money in activity represents a money out activity within a MoneyIn refund process.</Description>
    <RelationshipProperty isSynthetic='true' name='refund' originalName='refund' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='MoneyInRefundForrefund' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity' originalName='MoneyOutActivity' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='false'>
    <Description>This is the super-type of all financial operations corresponding to money out flows.</Description>
    <AttributeProperty isSynthetic='true' name='disbursementKind' originalName='disbursementKind' assignable='true' index='0'>
      <Description>Origin and justification of 'disbursement'.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='desiredPaymentDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='moneyoutbeneficiary' originalName='money out beneficiary' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='MoneyOutActivityFormoneyoutbeneficiary' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='moneyoutpaymentmethod' originalName='money out payment method' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod</TypeName>
      <RelationshipProperty isSynthetic='true' name='MoneyOutActivityFormoneyoutpaymentmethod' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='moneyoutrecipient' originalName='money out recipient' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='MoneyOutActivityFormoneyoutrecipient' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod' originalName='PaymentMethod' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>As the name implies, the PaymentMethod describes the means of making payments for both money in and out activities.</Description>
    <AttributeProperty isSynthetic='true' name='paymentFormCode' originalName='paymentFormCode' assignable='true' index='0'>
      <Description>Specifies the payment means. Example: check or cash.
This can be considered a short cut since the payment means can be deduced by the type of the specialization used for Payment.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Bonus' originalName='Bonus' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>An amount of money representing a variable or fixed additional compensation occasionally paid or due provided in the context of an employment agreement, provider agreement or producer agreement. 
 
e.g: 10% extra payment on year end as Mary Doe's bonus paid by her employer ABC and Sons Corporation. 
 
e.g: In the context of a provider agreement, the ballast bonus payable by a time charterer to a shipowner at the end of the charter period to compensate for the ballast trip taken from Singapore to Shanghai. 
 
e.g: 10% extra payment on year end as Mary Doe's employee bonus paid by her employer ABC and Sons Corporation.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.CedingCommission' originalName='CedingCommission' superclassName='org.acord.aim.Finance.FinancialProvisionSubtypes.Commission' isAbstract='false'>
    <Description>The commission paid by the reinsurer to the ceding company (primary insurer) on reinsurance agreements as compensation to place the business with the reinsurer and to cover the ceding company's acquisition expenses.
Also called Exchange commission, or simply Reinsurance commission - the pricing mechanism (expressed as a percentage of premium ceded) under a proportional reinsurance contract, whereby the ceding company recoups the reinsurer's pro rata share of its original costs from the reinsurer (and, in addition, sometimes claims a margin for good will or presumptive profit). The cedent's original costs are comprised of acquisition costs (direct commission, brokerage) and management expenses (on risk inspection, issue of policies, underwriting, accounting, claims processing etc.) 
Commission is payable only under proportional reinsurance - whether facultative or treaty. The reason is that, under the proportional method, the reinsurer shares premiums with the cedent in direct proportion to his share of the sum insured and must likewise share the costs. Under the excess of loss method, there is no such sharing and the premium charged to the reassured is a net price related to the quantum of protection. If commission is only meant to recover actual original costs, it can be calculated easily. However, in practice, it is a pricing mechanism whereby the cedent tries to earn the highest possible reward for producing, controlling and managing a book of business which is then given in a packaged form to the reinsurer. The rate of commission therefore includes a premium for quality based on the merits and performance of the portfolio ceded. 
Commission terms vary, depending on basis of cession (OGR or ONR) In fixing the margin over and above original costs, the factors taken into account are the balance of the treaty, the track record of the treaty and future loss potential, extent of anti-selection against the reinsurer, types of risks and perils ceded, market norms for each class / treaty type, type of treaty, , whether treaty is traded reciprocally, cash flow potential, special relationship if any with the reinsurer, cost of administration of the treaty and, finally, the law of supply and demand.
There are three types of commission 
-  Fixed Commission
-  Fixed plus Additional Commission linked to Loss Ratio 
-  Sliding Scale Commission.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Charge' originalName='Charge' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a financial provision element that represents amounts charged by the modeled organization that are not directly related to a benefit but are used for covering its operational costs.</Description>
    <RelationshipProperty isSynthetic='true' name='expenseAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='feeAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Commission' originalName='Commission' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the amount of money that is paid by the modeled organization to a producer as compensation for selling and servicing financial services agreements. 
 
e.g: Acquisition commission. 
 
e.g: Collecting commission. 
 
e.g: Switching commission.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.CommissionLoading' originalName='CommissionLoading' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the amount of money charged to the customer to compensate for commissions paid to producers. The amount of the commission loading might differ from the commission that will actually be paid to the producer. 

e.g: A commission fee of 13.5% of the pure premium for premium collection.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Cost' originalName='Cost' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the price of any service or goods paid to a provider role. 
 
e.g: A one time cost of USD 13,000 for subcontracting with vendor XYZ charged to the 2003 Spring Campaign of MIA Insurance Company.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Dividend' originalName='Dividend' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the amount of money returned to the customer as a share of the profit made by the insurance company. 
This can also represent money paid to a shareholder as a participation in the benefits of the company that issued the shares.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.FederalExciseTax' originalName='FederalExciseTax' superclassName='org.acord.aim.Finance.FinancialProvisionSubtypes.Tax' isAbstract='false'>
    <Description>FET is a Federal (or state) tax imposed on the manufacture and distribution of certain non-essential consumer goods. Examples of excise taxes include environmental taxes, communications taxes, and fuel taxes.

Excise tax, sometimes called an excise duty, is a type of tax. In the United States, the term "excise" means:
(A) any tax other than a property tax or capitation (i.e., an indirect tax, or excise, in the constitutional law sense),
or (B) a tax that is simply called an excise in the language of the statute imposing that tax (an excise in the statutory law sense).

An excise under definition (A) is not necessarily the same as an excise under definition (B).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.FinancialPrincipal' originalName='FinancialPrincipal' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents a deposit or the portion of a payment related to capital or repayment of this capital. 
This is used for savings, loan capital reimbursement and investment maturity.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Interest' originalName='Interest' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the interest portion of a payment. This is used both for loan 
reimbursement and income from a fixed-income investment.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.NoClaimRefund' originalName='NoClaimRefund' superclassName='org.acord.aim.Finance.FinancialProvision' isAbstract='false'>
    <Description>A percentage of the premium (usually under a Risk Excess or an excess of loss treaty, very rarely under a facultative proportional cover) which the Reinsurer agrees to refund to the Reassured in case the contract remains claim free at the end of the period covered. In the case of a cover placed in several layers, the criterion could be either each layer or all the layers combined. This is a substitute for profit commission and is also used as an alternative to burning cost rating - where there are varying perceptions on the profit potential.
Syn= No claim bonus.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.OverridingCommission' originalName='OverridingCommission' superclassName='org.acord.aim.Finance.FinancialProvisionSubtypes.Commission' isAbstract='false'>
    <Description>A specified percentage of the premium paid by the Retrocessionaire to the Retrocedent under a retrocession treaty to cover the latter’s own management expenses (including brokerage) - over and above the original deductions such as commission, taxes &amp; charges and exchange losses.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.OwnFundsSolvencyCapitalTierAllocation' originalName='OwnFundsSolvencyCapitalTierAllocation' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>An allocation to a particular solvency capital tier, in full or in part, of an amount of liability or equity that comes from an insurance company's own funds (basic or ancillary), for the purpose of proving that the company is solvent under a particular regulatory solvency specification. 
 
The tier to which the allocation is made is selected according to significant characteristics and features of the liability or equity. 
 
For the Solvency II regulatory specification the provisional list of such characteristics and features is: 
- subordination of total amount on winding-up 
- full loss-absorbency in going concern 
- undated or of sufficient duration (perpetuality) 
- free from requirements/incentives to redeem the nominal amount 
- absence of mandatory fixed charges 
- absence of encumbrances</Description>
    <AttributeProperty isSynthetic='true' name='tierCode' originalName='tierCode' assignable='true' index='0'>
      <Description>The tier to which the equity or liability amount of own funds is allocated, according to the characteristics prescribed by a regulatory solvency specification.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.SolvencyCapitalAllocationTierCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.PremiumSurcharge' originalName='PremiumSurcharge' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>Premium surcharge amount due to an unpaid premium or a late premium payment.
The surcharge can be of different types: 
- fixed amount based on the billed premium original amount
- fixed percentage based on the original amount of the billed premium
- fixed percentage based both on the billed premium amount and on the delay period (determine the number of days on which interest is to be calculated for a given interest period, defining interest rates based on date and amount in the system, using reference interest rates, such as discount rates)</Description>
    <AttributeProperty isSynthetic='true' name='referenceRate' originalName='referenceRate' assignable='true' index='2'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='surchargeRate' originalName='surchargeRate' assignable='true' index='0'>
      <Description>Premium surcharge rate</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='1'>
      <Description>Indicates whether the surcharge is a percent or an amount.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PremiumSurchargeTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='calculationBasisAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='gracePeriodDuration' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='interestAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.ProfitCommission' originalName='ProfitCommission' superclassName='org.acord.aim.Finance.FinancialProvisionSubtypes.Commission' isAbstract='false'>
    <Description>Also known as Contingent commission - an amount which the reinsurer agrees to pay to the reassured (usually under a proportional treaty and very rarely under a non-proportional treaty) as an incentive by way of profit participation. The results are arrived at after deduction from earned premium of losses incurred, ceding commission, taxes &amp; charges (but not brokerage) and an allowance for the reinsurer's management expenses (the M/E factor). Losses, if any, are carried forward to the computation of profit for a specified number of subsequent years or until extinction. A separate statement has to be prepared for each reinsurer because, apart from differences in ceding commission and rate of profit commission (as, for example, in the case of the Lead Reinsurer or a reciprocal reinsurer), only those losses may be carried forward which relate to the participation of a particular reinsurer in previous years. A new reinsurer cannot claim credit for losses carried forward relating to the outgoing reinsurer whom he has replaced. The commission may be a fixed percentage of the profit or calculated on a sliding scale. It is important for the cedent to render a profit commission statement within a reasonable time after rendering of accounts for the final quarter, even if the result is a loss because otherwise accounts would be incomplete and the loss to be carried forward will not be recorded. This also facilitates maintenance of cumulative treaty statistics over a period of years. Reinsurers would prefer allowing a generous profit commission to a higher basic commission. The rate is influenced by various factors - such as 
- whether the treaty is well-established and has a clear pattern of past profitability or is unbalanced, with the dangerous potential that profits earned over several good years may be wiped out by a huge loss in a single year, 
- whether there is a substantial exposure to catastrophic losses (riots, elemental perils), thus requiring the reinsurer to incur additional costs on excess of loss protection for his share, 
- whether the treaty is placed on reciprocal basis or is placed as a bouquet supported by a book of more profitable business and 
- whether the basic commission itself incorporates a profit incentive (as discussed earlier).
Where a number of treaties are placed together on 'bouquet' basis, profit commission is usually calculated on the combined results of the bouquet. Likewise, where a treaty is comprised of more than one section (Quota Share / Surplus, Domestic / Foreign risks, different sub-classes such as under General Accident). Calculation of profits under a bouquet becomes a bit of a problem if it contains long tail business such as Marine Cargo, CAR/EAR or liability. There is a theory which holds that no profit commission should be allowed under a quota share treaty as the results and interests of both parties under such a treaty are already the same (i.e. they share in both good and bad business) and there is no need for a further monetary inducement to the cedent for better management of the portfolio. The position under a surplus treaty is different as the cedent is in a position to influence the fortunes of the surpluses ceded without participating in the results. Profit commission is not usually allowed under automatic facultative and facultative obligatory treaties, where results tend to fluctuate widely and there is a potential for periodical heavy deficits. The objective in fixing the rate of profit commission would be to ensure that, combined with the basic commission; it does not eat up an unreasonable portion of the profit. The reinsurer should be allowed to retain an adequate margin in return for the risk he has run and in order that he is enabled to set aside reserves to finance the deficit in bad years. In order to achieve some flexibility on this front, it is common practice to have sliding scale or stepped up scales based on the profit ratio. While the ratio of profit for purposes of the formula is based on earned premium, the rate profit commission payable is applied to written premium.

Profit commission under terminated treaties: Special provision is made for calculation of profit following the termination of a treaty in order to deal with items relating to future liabilities. So long as a treaty is in force, any release or strain resulting from the under-estimation or over-estimation of loss reserves creates no problem. However, where a treaty is terminated, the cedent would take the precaution of delaying the profit commission statement for the final year until all outstanding liabilities are extinguished.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.PurePremium' originalName='PurePremium' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A term used in insurance rate making. It refers to that portion of the premium which is needed to pay expected losses. It does not take into account money needed for other company expenses.

A part of a financial provision element that represents the amount of money paid by the premium payer in exchange for the coverage of a risk by the insurer. Insurers tend to see sums invested in investment products as pure premiums while bankers will consider them as a principal.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.ReinsurerDeposit' originalName='ReinsurerDeposit' superclassName='org.acord.aim.Finance.FinancialProvision' isAbstract='false'>
    <Description>Amount deposited by the reinsurer with the ceding company to guarantee the reinsurer's liabilities. 

Cash deposits generally earn interest at a rate agreed at the time of writing the business.  Income from securities deposited accrues to the reinsurer.</Description>
    <AttributeProperty isSynthetic='true' name='depositNatureCode' originalName='depositNatureCode' assignable='true' index='0'>
      <Description>The nature of the deposit (e.g. cash).</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.DepositNatureCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='depositAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Salary' originalName='Salary' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the gross compensation amount that is provided for regular work in the context of an employment agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialProvisionSubtypes.Tax' originalName='Tax' superclassName='org.acord.aim.Finance.FinancialProvisionElement' isAbstract='false'>
    <Description>A part of a money provision element that represents the taxes applying to a payment. Taxes can be applied to premiums and benefits as well as on profit from investment.</Description>
    <AttributeProperty isSynthetic='true' name='percentage' originalName='percentage' assignable='true' index='1'>
      <Description>Tax rate for the specified tax. The tax is specified by the name and taxType attributes</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='taxType' originalName='taxType' assignable='true' index='0'>
      <Description>Gives the type of the tax. Example: VAT</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialSchedulerSubtypes.FinancialInScheduler' originalName='FinancialInScheduler' superclassName='org.acord.aim.Finance.FinancialScheduler' isAbstract='false'>
    <Description>A money scheduler that generates payment dues and accepts spontaneous payments to the modeled organization. 
 
e.g: The scheduler for a claim to a reinsurer. 
 
e.g: The scheduler for the reimbursement of a loan. 
 
e.g: The scheduler of the premium collection for an insurance policy.</Description>
    <AttributeProperty isSynthetic='true' name='premiumHolidayIndicator' originalName='premiumHolidayIndicator' assignable='true' index='0'>
      <Description>An indicator of when the premium is in a premium holiday state. A premium holiday is a period of time in which no premium is paid but where the contract continues to be in force.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='gracePeriodDuration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='schedulerreceivableinstallment' originalName='scheduler receivable installment' assignable='true' index='2' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.ReceivableInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialInSchedulerForschedulerreceivableinstallment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.FinancialSchedulerSubtypes.FinancialOutScheduler' originalName='FinancialOutScheduler' superclassName='org.acord.aim.Finance.FinancialScheduler' isAbstract='false'>
    <Description>A money scheduler that generates payments and handles incoming bills as payment due. 

e.g: The scheduler for the payment of a benefit on an annuity policy. 

e.g: The scheduler for the payments of commissions from the financial services company to a producer.</Description>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='offsetmoneypayment' originalName='offset money payment' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.FinancialSchedulerSubtypes.FinancialInScheduler</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialOutSchedulerForoffsetmoneypayment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='schedulerpayableinstallment' originalName='scheduler payable installment' assignable='true' index='3' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.InstallmentSubtypes.PayableInstallment</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialOutSchedulerForschedulerpayableinstallment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='suspensionAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.AgreementLoanPayBackInstallment' originalName='AgreementLoanPayBackInstallment' superclassName='org.acord.aim.Finance.InstallmentSubtypes.ReceivableInstallment' isAbstract='false'>
    <Description>Also known as: loan Receivable</Description>
    <AttributeProperty isSynthetic='true' name='loanInstallmentType' originalName='loanInstallmentType' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='netWithSurchargeAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='paybackinstallmentcomponent' originalName='pay back installment component' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AgreementLoan.AgreementLoanRepaymentComponent</TypeName>
      <RelationshipProperty isSynthetic='true' name='AgreementLoanPayBackInstallmentForpaybackinstallmentcomponent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='withoutSurchargeAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.AnnuityInstallment' originalName='AnnuityInstallment' superclassName='org.acord.aim.Finance.InstallmentSubtypes.PayableInstallment' isAbstract='false'>
    <Description>This concept defines the annuity installment of the annuity payment plan within an annuity benefit.</Description>
    <RelationshipProperty isSynthetic='true' name='annuityInstallmentGrossAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='annuityInstallmentNetAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='annuityInstallmentPaymentDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.ClaimBenefitInstallment' originalName='ClaimBenefitInstallment' superclassName='org.acord.aim.Finance.InstallmentSubtypes.PayableInstallment' isAbstract='false'>
    <Description>This concept defines the claim benefit installment of the claim financial benefit.</Description>
    <RelationshipProperty isSynthetic='true' name='installmentplanforbenefit' originalName='installment plan for benefit' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimFinancialBenefit.ClaimFinancialBenefit</TypeName>
      <RelationshipProperty isSynthetic='true' name='ClaimBenefitInstallmentForinstallmentplanforbenefit' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.PartialSurrenderInstallment' originalName='PartialSurrenderInstallment' superclassName='org.acord.aim.Finance.InstallmentSubtypes.PayableInstallment' isAbstract='false'>
    <Description>This concept defines the partial surrender installment of the partial surrender.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.PayableInstallment' originalName='PayableInstallment' superclassName='org.acord.aim.Finance.Installment' isAbstract='false'>
    <Description>A payable installment is the financial provision of a "financial out" scheduler.</Description>
    <RelationshipProperty isSynthetic='true' name='moneyoutpayableamount' originalName='money out payable amount' assignable='true' index='0' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.MoneyOutActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='PayableInstallmentFormoneyoutpayableamount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.PremiumInstallment' originalName='PremiumInstallment' superclassName='org.acord.aim.Finance.InstallmentSubtypes.ReceivableInstallment' isAbstract='false'>
    <Description>This concept represents an instance of premium call within an insurance contract (Also known as: Receivable).
PremiumInstallment are calculated from the contract premium according to the contract remittance options.</Description>
    <AttributeProperty isSynthetic='true' name='premiumInstallmentType' originalName='premiumInstallmentType' assignable='true' index='0'>
      <Description>The billed premium nature is either "basic" or "With extra costs" due to a dunning procedure.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='netInitialPremiumAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netInstallmentPremiumAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netWithSurchargeAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='withoutSurchargeAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.InstallmentSubtypes.ReceivableInstallment' originalName='ReceivableInstallment' superclassName='org.acord.aim.Finance.Installment' isAbstract='false'>
    <Description>A receivable installment is the financial provision of a "financial in" scheduler.</Description>
    <AttributeProperty isSynthetic='true' name='billingOptionCode' originalName='billingOptionCode' assignable='true' index='0'>
      <Description>It indicates if the policy is to be direct or agency billed.</Description>
      <TypeName>org.acord.aim.Finance.FinanceCodeLists.BillingOptionCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='moneyinreceivableinstallment' originalName='money in receivable installment' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity</TypeName>
      <RelationshipProperty isSynthetic='true' name='ReceivableInstallmentFormoneyinreceivableinstallment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.PaymentMethodSubtypes.BankTransferPayment' originalName='BankTransferPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod' isAbstract='false'>
    <Description>This concept states a money transfer.</Description>
    <RelationshipProperty isSynthetic='true' name='banktransferaccount' originalName='bank transfer account' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='BankTransferPaymentForbanktransferaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.PaymentMethodSubtypes.BankWithdrawalPayment' originalName='BankWithdrawalPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod' isAbstract='false'>
    <Description>This concept states a payment by bank withdrawal.
The needed authorization is given by the BankWithdrawalAuthorization instance.</Description>
    <RelationshipProperty isSynthetic='true' name='bankwithdrawlaccount' originalName='bank withdrawl account' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='BankWithdrawalPaymentForbankwithdrawlaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.PaymentMethodSubtypes.CashPayment' originalName='CashPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod' isAbstract='false'>
    <Description>This concept states a cash payment .</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.PaymentMethodSubtypes.CheckPayment' originalName='CheckPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod' isAbstract='false'>
    <Description>This concept states a payment by check.</Description>
    <AttributeProperty isSynthetic='true' name='bankName' originalName='bankName' assignable='true' index='1'>
      <Description>Name of the bank of the payer</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='checkIdentifier' originalName='checkIdentifier' assignable='true' index='0'>
      <Description>The check identification number.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='checkpaymentaccount' originalName='check payment account' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='CheckPaymentForcheckpaymentaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='issueDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Finance.PaymentMethodSubtypes.CreditCardPayment' originalName='CreditCardPayment' superclassName='org.acord.aim.Finance.FinancialActivitySubtypes.PaymentMethod' isAbstract='false'>
    <Description>This concept states a payment by credit card.</Description>
    <AttributeProperty isSynthetic='true' name='brandCode' originalName='brandCode' assignable='true' index='2'>
      <Description>The brand of the financial transaction card. 
 
e.g: American Express 
 
e.g: Diner's Club 
 
e.g: Master Card 
 
e.g: Visa</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.CreditCardTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='cardIdentifier' originalName='cardIdentifier' assignable='true' index='0'>
      <Description>The credit card identification number</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='creditCardTypeCode' originalName='creditCardTypeCode' assignable='true' index='1'>
      <Description>Identifies the type of credit card</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.CreditCardTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='cvv2' originalName='cvv2' assignable='true' index='5'>
      <Description>The credit card authentication number (for validation purposes)</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='expiryMonth' originalName='expiryMonth' assignable='true' index='4'>
      <Description>The expiry month of the credit card.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='expiryYear' originalName='expiryYear' assignable='true' index='3'>
      <Description>The expiry year of the credit card.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pin' originalName='pin' assignable='true' index='6'>
      <Description>The personal identification number used for authorizing access or usage.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='creditcardbankaccount' originalName='credit card bank account' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='CreditCardPaymentForcreditcardbankaccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CreditCardPaymentOnPartyName' originalName='CreditCardPayment On PartyName' assignable='true' index='8' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyName.PartyName</TypeName>
      <RelationshipProperty isSynthetic='true' name='CreditCardPaymentForCreditCardPaymentOnPartyName' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.BufferStockRule' originalName='BufferStockRule' superclassName='org.acord.aim.Investment.TradeRule' isAbstract='false'>
    <Description>This concept allow to parametrize a rule regarding the buffer Stock features (ex: limit: maxBufferStock above which orders are sent to the stockbroker)</Description>
    <AttributeProperty isSynthetic='true' name='balanceLevel' originalName='balanceLevel' assignable='true' index='2'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='maxBufferStock' originalName='maxBufferStock' assignable='true' index='1'>
      <Description>if superior to max then sell units</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='minBufferStock' originalName='minBufferStock' assignable='true' index='0'>
      <Description>if inferior to min then buy unit</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='orderFrequencyCode' originalName='orderFrequencyCode' assignable='true' index='3'>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lastUpdateDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.BuyTradeOrder' originalName='BuyTradeOrder' superclassName='org.acord.aim.Investment.TradeOrder' isAbstract='false'>
    <Description>This concept materializes a buy order that has to be sent to the stockbroker from the  insurer and trade on the stock market.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.CalendarRule' originalName='CalendarRule' superclassName='org.acord.aim.Investment.TradeRule' isAbstract='false'>
    <Description>This concept allow to attach to the back office administration a specific calendar that would allow to calculate the investment date of orders.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FundHoldingRule' originalName='FundHoldingRule' superclassName='org.acord.aim.Investment.TradeRule' isAbstract='false'>
    <Description>This concept defines rules that have been chosen regarding a portfolio account.</Description>
    <AttributeProperty isSynthetic='true' name='usedInProcessOrdersIndicator' originalName='usedInProcessOrdersIndicator' assignable='true' index='0'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='holdingruleforfundholding' originalName='holding rule for fund holding' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.InvestmentPortfolio.FundHolding</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundHoldingRuleForholdingruleforfundholding' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.ProcessOrderRule' originalName='ProcessOrderRule' superclassName='org.acord.aim.Investment.TradeRule' isAbstract='false'>
    <Description>This concept allows parameterizing the processes to send orders to the stockbroker like a first run and the adjustment of the first run.</Description>
    <AttributeProperty isSynthetic='true' name='processDescription' originalName='processDescription' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lastProcessedDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.SellTradeOrder' originalName='SellTradeOrder' superclassName='org.acord.aim.Investment.TradeOrder' isAbstract='false'>
    <Description>This concept materializes a selling order that has to be sent to the stockbroker from the  insurer and trade on the stock market.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.TradeOrder' originalName='TradeOrder' superclassName='org.acord.aim.Finance.FinancialActivity' isAbstract='true'>
    <Description>This concept materializes an order that has to be sent to the stockbroker from the  insurer and traded on the stock market.</Description>
    <AttributeProperty isSynthetic='true' name='effectiveQuantityOfUnitShare' originalName='effectiveQuantityOfUnitShare' assignable='true' index='0'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tradeOrderIdentifier' originalName='tradeOrderIdentifier' assignable='true' index='1'>
      <Description>An identifier assigned to a trade order for identification purposes.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tradeOrderInvestmentFlowCode' originalName='tradeOrderInvestmentFlowCode' assignable='true' index='2'>
      <TypeName>org.acord.aim.Investment.InvestmentCodeLists.FinancialActivityTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tradeOrdersStatusCode' originalName='tradeOrdersStatusCode' assignable='true' index='4'>
      <TypeName>org.acord.aim.Investment.InvestmentCodeLists.TransmitOrderStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tradeOrderTypeCode' originalName='tradeOrderTypeCode' assignable='true' index='3'>
      <TypeName>org.acord.aim.Investment.InvestmentCodeLists.TradeOrderTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='fundallocation' originalName='fund allocation' assignable='true' index='7' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.AgreementInvestmentActivity.AgreementFundAllocation</TypeName>
      <RelationshipProperty isSynthetic='true' name='TradeOrderForfundallocation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='investmentDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='tradeorderforfund' originalName='trade order for fund' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.Fund.Fund</TypeName>
      <RelationshipProperty isSynthetic='true' name='TradeOrderFortradeorderforfund' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='TradeOrderSentByInsuranceCompany' originalName='TradeOrder Sent By InsuranceCompany' assignable='true' index='8' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceCompany</TypeName>
      <RelationshipProperty isSynthetic='true' name='TradeOrderForTradeOrderSentByInsuranceCompany' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='TradeOrderTradedByStockbroker' originalName='TradeOrder Traded By Stockbroker' assignable='true' index='9' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Stockbroker</TypeName>
      <RelationshipProperty isSynthetic='true' name='TradeOrderForTradeOrderTradedByStockbroker' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='traderulefromtradeorder' originalName='trade rule from trade order' assignable='true' index='10' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.TradeRule</TypeName>
      <RelationshipProperty isSynthetic='true' name='TradeOrderFortraderulefromtradeorder' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.TradeRule' originalName='TradeRule' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept generalizes options that can be defined by the insurer to set up its back office administration (buffer stock rules, calendar rules, etc.)</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tradeRuleOptionIdentifier' originalName='tradeRuleOptionIdentifier' assignable='true' index='1'>
      <Description>An identifier assigned to a trade rule option for identification purposes.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.AssetValue' originalName='AssetValue' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>An amount of money representing the price of one unit or one share of an financial asset. There are different types of prices (bid, offer and mid for example) as expressed in the price type. 
 
e.g: USD 2.511 is the unit bid price on April 15, 1997 for Executive Managed Fund.</Description>
    <AttributeProperty isSynthetic='true' name='priceTypeCode' originalName='priceTypeCode' assignable='true' index='0'>
      <Description>The basis on which the asset price is calculated. 
 
e.g: Bid: Price at which you can buy the asset 
 
e.g: Cancellation:  Price at which you can sell the asset when withdrawn. 
 
e.g: Creation: Price at which you can buy the asset when launched (InitialPublic Offering) 

e.g: Mid: Average price between the Bid and the Offer. This could be used for transactions such as a fund switch. 

e.g: Offer: Price at which you can sell the asset 

e.g: Par value: The specified final amount that an issuer promises to pay to the owner of a bond at the date of maturity</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PriceTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='bidAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='dividendAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='faceValueAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='priceAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='sellAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.Bond' originalName='Bond' superclassName='org.acord.aim.Investment.FinancialAsset.FinancialAsset' isAbstract='false'>
    <Description>A type of certificate of indebtedness that pays a fixed rate of interest over its life. Bonds are known as fixed-income securities since the income they provide is known beforehand (as opposed to a share). 
 
e.g: A corporate bond issued in 2001 and maturing in 2011 bearing an interest of 5% and issued by MIA insurance Company.</Description>
    <RelationshipProperty isSynthetic='true' name='parAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalIssuedAmount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.Commodity' originalName='Commodity' superclassName='org.acord.aim.Investment.FinancialAsset.FinancialAsset' isAbstract='false'>
    <Description>Any raw material that can be traded in large amounts of undifferentiated goods. 
 
e.g: Food and Fiber:  Cotton, Sugar, Orange Juice, Cocoa, Coffee, etc. 
 
e.g: Grains: Corn, Soybeans, Soybean Meal, Soybean Oil, Wheat. 
 
e.g: Meat: Live Cattle, Feeder Cattle, Lean Hogs, Pork Bellies, etc. 
 
e.g: Metals: Gold, Silver, Platinum, etc. 
 
e.g: Petroleum: Crude oil, Heating oil, Unleaded gasoline.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.Derivative' originalName='Derivative' superclassName='org.acord.aim.Investment.FinancialAsset.FinancialAsset' isAbstract='false'>
    <Description>A financial asset of which the value is based on the price of another financial asset (the underlying asset). The terms and conditions of a derivative are defined through a derivative contract. Derivatives are often used to protect assets against changes in value.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.FinancialAsset' originalName='FinancialAsset' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>A type of asset that can be traded. For example, shares of a publicly-traded company would be represented as a financial asset (shares) as any one share is equivalent in all respects to any other share. In addition, unique objects such as a picture by Modigliani are represented by a marketable object.

A financial asset represents the total of the outstanding assets of this type. Any investment in this asset is represented as an asset holding.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A free-text statement used to explain the meaning of the financial asset.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>The word or phrase used to identify (but not uniquely) the financial asset. 
 
e.g: Far Eastern Securities Fund. 
 
e.g: Guaranteed Life Fund. 
 
e.g: Managed Pension Fund.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='holdingofasset' originalName='holding of asset' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.InvestmentPortfolio.AssetHolding</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialAssetForholdingofasset' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='priceofasset' originalName='price of asset' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.FinancialAsset.AssetValue</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialAssetForpriceofasset' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.Future' originalName='Future' superclassName='org.acord.aim.Investment.FinancialAsset.Derivative' isAbstract='false'>
    <Description>A derivative holding the conditions at which the buyer and seller agree to deliver goods in the future at an agreed price. Those conditions are defined by a futures contract. Futures are often used as a hedging device against interest rates or price risk.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.Option' originalName='Option' superclassName='org.acord.aim.Investment.FinancialAsset.Derivative' isAbstract='false'>
    <Description>A derivative in which the right (and not the obligation) is granted to the buyer to purchase or sell financial assets during a specified period at an agreed-upon price called the strike price. The terms and conditions applicable to the option are defined in an options contract.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.PhysicalObjectAsset' originalName='PhysicalObjectAsset' superclassName='org.acord.aim.Investment.FinancialAsset.FinancialAsset' isAbstract='false'>
    <Description>A financial asset defined by the value of a physical object. This includes financial assets such as works of art, real estate, and any type of physical object that can be traded. It is through this construct that a fund can invest into physical objects. 
 
e.g: The famous traditional-style Hotel Scribe building in Paris. 
 
e.g: Woman with a broken nose from Pablo Picasso.</Description>
    <AttributeProperty isSynthetic='true' name='ownedPercentage' originalName='ownedPercentage' assignable='true' index='0'>
      <Description>The part of the value of the physical object, expressed as a percentage of the value, that is allocated to the marketable object. 
 
e.g: A marketable object of 30% of the value of a building in a real estate investment.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='physicalobjectassetholdingindication' originalName='physical object asset holding indication' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='PhysicalObjectAssetForphysicalobjectassetholdingindication' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.FinancialAsset.Stock' originalName='Stock' superclassName='org.acord.aim.Investment.FinancialAsset.FinancialAsset' isAbstract='false'>
    <Description>An interest that a shareholder has in a corporation. Shares do not yield any guaranteed interest payment but return money by capital gains and dividend payments. A dividend needs to be declared by the board of directors of the issuing company before the shareholder is entitled to receive any money.</Description>
    <AttributeProperty isSynthetic='true' name='totalSharesCount' originalName='totalSharesCount' assignable='true' index='0'>
      <Description>The total number of shares issued. 
 
e.g: 1,234,567, 345 shares of common stock.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.Fund.Fund' originalName='Fund' superclassName='org.acord.aim.Investment.FinancialAsset.FinancialAsset' isAbstract='true'>
    <Description>This concept represents a fund.
A fund is a collection of financial assets jointly managed using the same strategy. Investment funds, unit trusts and OEICs (Open ended investment companies) are terms used to describe a pooled investment scheme that is divided into units or shares.

e.g: ABC's pension fund.

e.g: Failsafe Life's Small Companies Trust.

e.g: MIA Insurance's Far Eastern Securities Fund.</Description>
    <AttributeProperty isSynthetic='true' name='alias' originalName='alias' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='financialRisk' originalName='financialRisk' assignable='true' index='2'>
      <Description>Values are [High, Medium, Low]</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fundCategory' originalName='fundCategory' assignable='true' index='3'>
      <Description>Money Market Fund, Single Currency Bond Fund, High Yield Bond Fund, Convertible Bond Fund, Equity Funds Regional Fund, Asset Allocation Fund, Real Estate Fund</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fundIdentifier' originalName='fundIdentifier' assignable='true' index='4'>
      <Description>An identifier assigned to a fund for identification purposes.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='internalName' originalName='internalName' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='investmentObjective' originalName='investmentObjective' assignable='true' index='7'>
      <Description>Formal description of the goal the fund seeks to accomplish. 
Investment objectives include the description of financial goals (current income, or, capital appreciation), time horizon, level of investment risk (aggressive, neutral, defensive), target investment asset mix, target market mix. e.g: Dynamically managed fund, with a defensive investment profile, investing in shares and bonds in the grow markets in the BRIC countries; Brazil, Russia, India and China.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='investmentObjectiveClassCode' originalName='investmentObjectiveClassCode' assignable='true' index='9'>
      <Description>The categorization of the investment objective of the fund.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.InvestmentObjectiveClassCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='investmentScopeCode' originalName='investmentScopeCode' assignable='true' index='10'>
      <Description>The types of assets composing the fund. 
 
e.g: Bond 
 
e.g: Bond + Share + Cash 
 
e.g: Cash 
 
e.g: Cash + Bond 
 
e.g: Mixed 
 
e.g: Mutual fund 
 
e.g: Property 
 
e.g: Share (equity)</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.InvestmentScopeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statementOfInvestmentPrinciples' originalName='statementOfInvestmentPrinciples' assignable='true' index='6'>
      <Description>Formal statement describing the principles applied when managing the investments of the fund.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='5'>
      <Description>Fund status</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.CommonOptionsCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='unitCount' originalName='unitCount' assignable='true' index='8'>
      <Description>The number of units this fund is split into at a specific point in time. Funds may be split into a number of units to manage the ownership rights the various parties have with respect to the value of the fund.  The number of units in a fund will vary over time as more parties invest in or disinvest from the fund.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='currencyCode' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FundManagedByFundManager' originalName='Fund Managed By FundManager' assignable='true' index='16' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.FundManager</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundForFundManagedByFundManager' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FundOnCountry' originalName='Fund On Country' assignable='true' index='15' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Country</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundForFundOnCountry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FundRegistrationRegistersFund' originalName='FundRegistration Registers Fund' assignable='true' index='17' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.FundRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundForFundRegistrationRegistersFund' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='fundtransfer' originalName='fund transfer' assignable='true' index='14' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.Fund.Fund</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundForfundtransfer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='supportedfundrule' originalName='supported fund rule' assignable='true' index='13' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.Fund.FundUpdateRule</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundForsupportedfundrule' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.Fund.FundUpdateRule' originalName='FundUpdateRule' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept describes the option of update of the fund values.</Description>
    <AttributeProperty isSynthetic='true' name='automaticUpdateIndicator' originalName='automaticUpdateIndicator' assignable='true' index='0'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fundUpdateRuleDescription' originalName='fundUpdateRuleDescription' assignable='true' index='2'>
      <Description>The nature of the fund update rule.

e.g. Sell when fund reaches certain value.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='updateFrequencyCode' originalName='updateFrequencyCode' assignable='true' index='1'>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lastUpdateDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.Fund.InterestBasedFund' originalName='InterestBasedFund' superclassName='org.acord.aim.Investment.Fund.Fund' isAbstract='false'>
    <Description>This concept represents a fund based on interest.</Description>
    <AttributeProperty isSynthetic='true' name='guaranteedMinimumRate' originalName='guaranteedMinimumRate' assignable='true' index='0'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='interestCalculationTypeCode' originalName='interestCalculationTypeCode' assignable='true' index='2'>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.InterestCalculationTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='realRate' originalName='realRate' assignable='true' index='1'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.Fund.UnitBasedFund' originalName='UnitBasedFund' superclassName='org.acord.aim.Investment.Fund.Fund' isAbstract='false'>
    <Description>This concept represents a fund based on unit.</Description>
    <AttributeProperty isSynthetic='true' name='minTechnicalReturnPercentage' originalName='minTechnicalReturnPercentage' assignable='true' index='0'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Investment.InvestmentCodeLists.FinancialActivityTypeCodeList' originalName='FinancialActivityTypeCodeList' restricts='java.lang.String'>
    <Description>Financial Activity Type
Only use "Buy" and "Sell" of the ACORD List</Description>
    <Enumerand isSynthetic='true' name='Buy' generator='Buy'>
      <Description>The Financial Activity is a Buy activity. 

Notes: This item refers to a transaction in which securities or shares of securities or other investments were purchased on a trading floor or other mechanism. Example: Purchase of 10 shares of stock in a particular security</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sell' generator='Sell'>
      <Description>The Financial Activity is a Sell activity. 

Notes: This item refers to a transaction in which an investment, or a portion of an investment was put up for sale on a trading floor or other mechanism. Example: Sale of 10 shares of stock in a particular security. These items were not intended to be specific to stock, bonds, etc. but to be available for any kind of investment.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Investment.InvestmentCodeLists.TradeOrderTypeCodeList' originalName='TradeOrderTypeCodeList' restricts='java.lang.String'>
    <Description>Trade Order Type</Description>
    <Enumerand isSynthetic='true' name='Cumulated' generator='Cumulated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Normal' generator='Normal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Adjustment' generator='Adjustment'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Investment.InvestmentCodeLists.TransmitOrderStatusCodeList' originalName='TransmitOrderStatusCodeList' restricts='java.lang.String'>
    <Description>Transmit Order Status</Description>
    <Enumerand isSynthetic='true' name='ToTransmit' generator='To Transmit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Transmitted' generator='Transmitted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Confirmed' generator='Confirmed'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.InvestmentPortfolio.AssetHolding' originalName='AssetHolding' superclassName='org.acord.aim.Finance.Account' isAbstract='false'>
    <Description>An account that holds a specific number of units of a financial asset. It can be viewed as an account that does not hold monetary amounts but assets. 
 
e.g: 50 Units in The World Stock Fund Plus Global.</Description>
    <AttributeProperty isSynthetic='true' name='unitCount' originalName='unitCount' assignable='true' index='0'>
      <Description>The numbers of (countable) units held in the financial asset. This is the balance of all the quantities from the asset holding details.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='cashValueAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='estimatedCashValueAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='estimatedCashValueBasedOnDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='holdingAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.InvestmentPortfolio.FundHolding' originalName='FundHolding' superclassName='org.acord.aim.Investment.InvestmentPortfolio.AssetHolding' isAbstract='false'>
    <Description>This concept details the account of the insurer by fund, which is a financial statement, by fund owned by the insurer.</Description>
    <AttributeProperty isSynthetic='true' name='fundPortfolioDescription' originalName='fundPortfolioDescription' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tradeOrderUnitCount' originalName='tradeOrderUnitCount' assignable='true' index='2'>
      <Description>round of (effectiveQuantityOfUnitShare).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='unitQuantity' originalName='unitQuantity' assignable='true' index='0'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='fundallocation' originalName='fund allocation' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.Fund.Fund</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundHoldingForfundallocation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FundHoldingManagedByFundManager' originalName='FundHolding Managed By FundManager' assignable='true' index='3' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.FundManager</TypeName>
      <RelationshipProperty isSynthetic='true' name='FundHoldingForFundHoldingManagedByFundManager' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.InvestmentPortfolio.InvestmentPortfolio' originalName='InvestmentPortfolio' superclassName='org.acord.aim.Investment.InvestmentPortfolio.AssetHolding' isAbstract='false'>
    <Description>This concept summarizes the account of an insurer. This concept details the account of the insurer, which is a global financial statement for funds owned by the insurer owns.</Description>
    <AttributeProperty isSynthetic='true' name='insurerAccountDescription' originalName='insurerAccountDescription' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='InvestmentPortfolioOwnedByInsuranceProvider' originalName='InvestmentPortfolio Owned By InsuranceProvider' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='InvestmentPortfolioForInvestmentPortfolioOwnedByInsuranceProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='relatedassetholdingsforgivenportfolio' originalName='related asset holdings for given portfolio' assignable='true' index='1' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.InvestmentPortfolio.AssetHolding</TypeName>
      <RelationshipProperty isSynthetic='true' name='InvestmentPortfolioForrelatedassetholdingsforgivenportfolio' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.InvestmentVehicle.InvestmentProfileFeature' originalName='InvestmentProfileFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines the characteristics of an Investment available in a product catalog and applying to a investment vehicle.</Description>
    <AttributeProperty isSynthetic='true' name='investmentProductObjectiveCode' originalName='investmentProductObjectiveCode' assignable='true' index='0'>
      <Description>Defines the investment product objective</Description>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.InvestmentProductObjectiveCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='investmentvehicleprofilerelationship' originalName='investment vehicle profile relationship' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.InvestmentVehicle.InvestmentVehicleFeature</TypeName>
      <RelationshipProperty isSynthetic='true' name='InvestmentProfileFeatureForinvestmentvehicleprofilerelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Investment.InvestmentVehicle.InvestmentVehicleFeature' originalName='InvestmentVehicleFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines the characteristics of an InvestmentVehicle, in which money is invested within a life savings contract.</Description>
    <RelationshipProperty isSynthetic='true' name='relatedfundforinvestmentvehicle' originalName='related fund for investment vehicle' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Investment.Fund.Fund</TypeName>
      <RelationshipProperty isSynthetic='true' name='InvestmentVehicleFeatureForrelatedfundforinvestmentvehicle' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.MarketingCampaign' originalName='MarketingCampaign' superclassName='org.acord.aim.Activity.Activity' isAbstract='false'>
    <Description>This concept describes a marketing campaign used to acquire, retain, and/or develop (that is, cross-sell and up-sell) business.</Description>
    <AttributeProperty isSynthetic='true' name='campaignName' originalName='campaignName' assignable='true' index='0'>
      <Description>Official name of the campaign</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='campaignType' originalName='campaignType' assignable='true' index='2'>
      <Description>This holds information about the types of campaigns that are being deployed.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketingCampaignMediaFormatCode' originalName='marketingCampaignMediaFormatCode' assignable='true' index='3'>
      <TypeName>org.acord.aim.Marketing.MarketingCodeLists.MarketingCampaignMediaFormatCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketingCampaignStatusCode' originalName='marketingCampaignStatusCode' assignable='true' index='1'>
      <Description>Status of the campaign.</Description>
      <TypeName>org.acord.aim.Marketing.MarketingCodeLists.MarketingCampaignStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='customerpartymarketingdetail' originalName='customer party marketing detail' assignable='true' index='8' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Marketing.PartyMarketingInformation</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarketingCampaignForcustomerpartymarketingdetail' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='MarketingCampaignObtainsCustomerRelationship' originalName='MarketingCampaign Obtains CustomerRelationship' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.CustomerRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarketingCampaignForMarketingCampaignObtainsCustomerRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='marketingcampaignproductspectargets' originalName='marketing campaign product spec targets' assignable='true' index='7' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarketingCampaignFormarketingcampaignproductspectargets' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='marketingobjective' originalName='marketing objective' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Marketing.MarketingObjective</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarketingCampaignFormarketingobjective' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='targetmarket' originalName='target market' assignable='true' index='6' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Marketing.MarketTarget.TargetMarket</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarketingCampaignFortargetmarket' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.MarketingObjective' originalName='MarketingObjective' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept describes the objectives of the marketing campaign as defined by the company or the one chosen by the producer. Note that objectives can be shared by several campaigns or projects.</Description>
    <AttributeProperty isSynthetic='true' name='fulfilledIndicator' originalName='fulfilledIndicator' assignable='true' index='2'>
      <Description>Indicates whether the objective has been reached or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fulfillmentPercentage' originalName='fulfillmentPercentage' assignable='true' index='3'>
      <Description>Fulfillment rate of the objective.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='objectiveDescription' originalName='objectiveDescription' assignable='true' index='1'>
      <Description>Free text describing the objective</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='objectiveName' originalName='objectiveName' assignable='true' index='0'>
      <Description>Official name of the objective</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyMarketingInformation' originalName='PartyMarketingInformation' superclassName='org.acord.aim.Party.PartyDetail' isAbstract='false'>
    <Description>This concept defines the marketing details of a Party.
The model allows to add a marketing profile to a party (person, or organization). 

Generally, MarketingProfile is related to a CustomerRelationship. It contains all information dedicated to marketing follow-up. A MarketingProfile is composed of MarketingDetails.

Note: Some attributes can be calculated properties (from information contained elsewhere in the model).</Description>
    <AttributeProperty isSynthetic='true' name='firstContactOrigin' originalName='firstContactOrigin' assignable='true' index='0'>
      <Description>Defines the conditions of the first contact with the person/organization.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketingOptionIndicator' originalName='marketingOptionIndicator' assignable='true' index='1'>
      <Description>Defines if the customer/prospect is a candidate for marketing campaign or could be solicited by other marketing activities.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='competitoragreementdetails' originalName='competitor agreement details' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.FinancialServicesAgreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyMarketingInformationForcompetitoragreementdetails' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='firstContactDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.MarketTarget.MarketPlace' originalName='MarketPlace' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept defines the target area and prospects of a product.</Description>
    <AttributeProperty isSynthetic='true' name='marketPlaceName' originalName='marketPlaceName' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='MarketPlaceOnPlace' originalName='MarketPlace On Place' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='MarketPlaceForMarketPlaceOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.MarketTarget.TargetMarket' originalName='TargetMarket' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept defines the population who will potentially use the product and, hence, the population who buys the product.</Description>
    <AttributeProperty isSynthetic='true' name='targetMarketName' originalName='targetMarketName' assignable='true' index='0'>
      <Description>Product Use target</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='targetMarketType' originalName='targetMarketType' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='marketsegmentcategorization' originalName='market segment categorization' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.MarketSegment</TypeName>
      <RelationshipProperty isSynthetic='true' name='TargetMarketFormarketsegmentcategorization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='targetmarketarea' originalName='target market area' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Marketing.MarketTarget.MarketPlace</TypeName>
      <RelationshipProperty isSynthetic='true' name='TargetMarketFortargetmarketarea' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Marketing.MarketingCodeLists.MarketingCampaignMediaFormatCodeList' originalName='MarketingCampaignMediaFormatCodeList' restricts='java.lang.String'>
    <Description>This list defines the media format of a marketing campaign.</Description>
    <Enumerand isSynthetic='true' name='Mail' generator='Mail'>
      <Description>This letter campaign is used to remind clients to make the IRA contributions.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Email' generator='Email'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Facetoface' generator='Face to face'>
      <Description>This type of campaign uses mailing lists, which are used to inform the recipients of our brand, products and current promotions.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Telephone' generator='Telephone'>
      <Description>This campaign uses letters sent to homes to encourage the residence to become leads and eventually consumers.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Printmedia' generator='Print media'>
      <Description>This type of campaign is used to encourage clients with term contracts to convert to whole life, by using a conversion letters.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electronicmedia' generator='Electronic media'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>This campaign is used to influence clients to upgrade their coverage and to by additional "new" products.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Marketing.MarketingCodeLists.MarketingCampaignStatusCodeList' originalName='MarketingCampaignStatusCodeList' restricts='java.lang.String'>
    <Description>Marketing Campaign Status</Description>
    <Enumerand isSynthetic='true' name='Canceled' generator='Canceled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ongoing' generator='Ongoing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Closed' generator='Closed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tobelaunched' generator='To be launched'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.ArtDirector' originalName='ArtDirector' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>Art director</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.CopyEditor' originalName='CopyEditor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>This concept defines the Marketing copy editor role.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.CopyWriter' originalName='CopyWriter' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>This concept defines the Marketing copy writer role.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.GraphicsDesigner' originalName='GraphicsDesigner' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>This concept defines the Marketing Graphics Designer role.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.MarketingManager' originalName='MarketingManager' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>The marketing manager is responsible for activities such as creating the marketing strategy, communications (of the strategy, for example), segmentation management, and marketing campaigns.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.MarketingSpecialist' originalName='MarketingSpecialist' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>Marketing specialist</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Marketing.PartyRoleInMarketingSubtypes.ProjectManager' originalName='ProjectManager' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' isAbstract='false'>
    <Description>Marketing project manager.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.FiscalDomicile' originalName='FiscalDomicile' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This relationship links a party to its fiscal domicile.

A party's place of fiscal residence or business establishment, often relevant for tax purposes.</Description>
    <AttributeProperty isSynthetic='true' name='taxCode' originalName='taxCode' assignable='true' index='0'>
      <Description>Indicates primary or secondary tax.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.DomicileTaxCodeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FiscalDomicileOnPlace' originalName='FiscalDomicile On Place' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='FiscalDomicileForFiscalDomicileOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.Organization' originalName='Organization' superclassName='org.acord.aim.Party.Party' isAbstract='false'>
    <Description>A business concern or a group of individuals that are systematically bound by a common purpose, with or without a legal status. Organizations may be legal entities in their own right.

Various types of organizations include and are not limited to:
- government (e.g. federal, state, regional, local, and various agencies)
- commercial organizations (limited companies, publicly quoted multinationals, subsidiaries, etc.)
- organizational units (e.g. branches, departments, teams, etc.)
- informal groups (e.g. clubs, societies, charities, interest groups, etc.)
- other similar entities

Note: Various details, such as name, legal status, nature of operations, are not included within organization because organizations may have multiple names, operations and legal details. These concepts are addressed via associations to related classes (OrganizationName, OrganizationDetail).</Description>
    <AttributeProperty isSynthetic='true' name='memberCount' originalName='memberCount' assignable='true' index='0'>
      <Description>The count of parties being members of this organization. This count often is an approximate number, because the number of members may in general change over time.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusCode' originalName='statusCode' assignable='true' index='1'>
      <Description>The current status of the organization within the life cycle model.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusReason' originalName='statusReason' assignable='true' index='2'>
      <Description>The additional information to explain the latest status of the organization. 
 
e.g: Risky investment</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='accountingPeriod' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='foundationDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='OrganizationOwnsOrganizationDetail' originalName='Organization Owns OrganizationDetail' assignable='true' index='7' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyDetailSubtypes.OrganizationDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='OrganizationForOrganizationOwnsOrganizationDetail' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='OrganizationOwnsOrganizationName' originalName='Organization Owns Organization Name' assignable='true' index='8' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyName.OrganizationName</TypeName>
      <RelationshipProperty isSynthetic='true' name='OrganizationForOrganizationOwnsOrganizationName' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='OrganizationPlaysRegistryAuthority' originalName='Organization Plays RegistryAuthority' assignable='true' index='10' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.RegistryAuthority</TypeName>
      <RelationshipProperty isSynthetic='true' name='OrganizationForOrganizationPlaysRegistryAuthority' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='OrganizationRegistrationRegistersOrganization' originalName='OrganizationRegistration Registers Organization' assignable='true' index='9' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This concept represents the registrant of an organization registration.</Description>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.OrganizationRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='OrganizationForOrganizationRegistrationRegistersOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='NationalProducerNumber' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getNationalProducerNumber' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='OrganizationRegistrationRegistersOrganization'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='NPN'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='Enriched' assignable='true' defaultLiteral='false' index='11'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='FederalEmployerIdentificationNumber' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getFederalEmployerIdentificationNumber' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='OrganizationRegistrationRegistersOrganization'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='FEIN'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='StateCompanyID' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getStateCompanyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='OrganizationRegistrationRegistersOrganization'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='StateCompanyID'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Role' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <GetterMethod isSynthetic='false' name='getRole' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyRoleForPartyRoleOnParty'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Role'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
      <SetterMethod isSynthetic='false' name='setRole' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <Parameter isSynthetic='false' name='Role' typeName='org.acord.aim.RoleandRelationship.PartyRole' unbindable='false'>
        </Parameter>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='Role'>
            </PathExpression>
          </MethodExpression>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='merge'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='Role'>
            </PathExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='Role'>
              </VariablePathRoot>
            </PathExpression>
          </MethodExpression>
          <SequenceExpression isSynthetic='false'>
            <SetterExpression isSynthetic='false'>
              <TargetPath isSynthetic='false' pathString='typeName'>
                <VariablePathRoot isSynthetic='false' variableName='Role'>
                </VariablePathRoot>
              </TargetPath>
              <Literal isSynthetic='false' typeName='java.lang.String' literalString='Role'>
              </Literal>
            </SetterExpression>
            <SetterExpression isSynthetic='false'>
              <TargetPath isSynthetic='false' pathString='PartyRoleForPartyRoleOnParty'>
              </TargetPath>
              <PathExpression isSynthetic='false' pathString='.'>
                <VariablePathRoot isSynthetic='false' variableName='Role'>
                </VariablePathRoot>
              </PathExpression>
            </SetterExpression>
          </SequenceExpression>
        </ConditionalExpression>
      </SetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='statusEndDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='defaultCommunicationMode' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='syncWithPDB' assignable='true' index='13'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='14'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='AtheneOrgCustomfields' assignable='true' index='15' cardinality='One2One' containment='false'>
      <TypeName>org.acord.AtheneOrgCustomFields</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Status' assignable='true' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Status</TypeName>
      <RelationshipProperty isSynthetic='false' name='OrganizationForStatus' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <KeyDescriptor isSynthetic='false' name='partyid' enrichment='true'>
      <PropertyName>PartyID</PropertyName>
    </KeyDescriptor>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.Party' originalName='Party' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This is the super type for all organizations and persons.</Description>
    <RelationshipProperty isSynthetic='true' name='PartyOnContactPreference' originalName='Party On ContactPreference' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPreference</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyForPartyOnContactPreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyOnFiscalDomicile' originalName='Party On FiscalDomicile' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.FiscalDomicile</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyForPartyOnFiscalDomicile' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyOnGeneralOwnership' originalName='Party On GeneralOwnership' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyDetailSubtypes.GeneralOwnershipInformation</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyForPartyOnGeneralOwnership' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='PartyOnTaxRegistration' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This represents the registrant (registered party) of a tax registration.</Description>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.TaxRegistration</TypeName>
      <RelationshipProperty isSynthetic='false' name='PartyForPartyOnTaxRegistration' originalName='TaxRegistration On Party' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyProvidesCustomerRelationship' originalName='Party Provides CustomerRelationship' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This represents the party (customer) in the customer relationship.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.CustomerRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyForPartyProvidesCustomerRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='Address' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.PostalContact</TypeName>
      <GetterMethod isSynthetic='false' name='getAddress' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Address'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asPostalContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Fax' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.FaxContact</TypeName>
      <GetterMethod isSynthetic='false' name='getFax' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Fax'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asFaxContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Telephone' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.TelephoneCallContact</TypeName>
      <GetterMethod isSynthetic='false' name='getTelephone' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Telephone'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asTelephoneCallContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Cell' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.TelephoneCallContact</TypeName>
      <GetterMethod isSynthetic='false' name='getCell' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Cell'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asTelephoneCallContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Web' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.WebPageContact</TypeName>
      <GetterMethod isSynthetic='false' name='getWeb' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Web'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asWebPageContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Email' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.WebPageContact</TypeName>
      <GetterMethod isSynthetic='false' name='getEmail' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Email'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asWebPageContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Pager' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPointSubtypes.PagerContact</TypeName>
      <GetterMethod isSynthetic='false' name='getPager' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Pager'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asPagerContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Addresses' assignable='true' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.ContactandPlace.ContactPointSubtypes.PostalContact&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getAddresses' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Address'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asPostalContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='Position' assignable='true' index='5' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Position</TypeName>
      <RelationshipProperty isSynthetic='false' name='PartyForPosition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='Telephones' assignable='true' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.ContactandPlace.ContactPointSubtypes.TelephoneCallContact&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getTelephones' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Telephone'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint/asTelephoneCallContact'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='NonKeyTaxID' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getNonKeyTaxID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnTaxRegistration'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='NonKeyTaxID'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='ContactPointHelper' assignable='true' index='6' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.ContactPointHelper</TypeName>
      <RelationshipProperty isSynthetic='false' name='PartyForContactPointHelper' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='Activities' assignable='false' typeInferred='true'>
      <TypeName>List&lt;org.acord.aim.Activity.Activity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getActivities' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <PathExpression isSynthetic='false' pathString='PartyRoleForPartyRoleOnParty/ActivityForActivityIdentifiedAssigneePartyRole'>
        </PathExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='ProducerAgreement' assignable='true' index='7' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.ProducerAgreement</TypeName>
      <RelationshipProperty isSynthetic='false' name='PartyForProducerAgreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='TaxID' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='ComponentParticipantHelper' assignable='true' index='9' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.ComponentParticipantHelper</TypeName>
      <RelationshipProperty isSynthetic='false' name='PartyForComponentParticipantHelper' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='CaseID' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getCaseID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyOnTaxRegistration'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='NonKeyTaxID'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='FIAgreementsHelper' assignable='true' index='10' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.FIAgreementsHelper</TypeName>
      <RelationshipProperty isSynthetic='false' name='PartyForFIAgreementsHelper' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyDetail' originalName='PartyDetail' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept is a generalizing concept providing further details about a person or an organization.
Some details regarding a party are not likely to be necessary to perform basic processes about parties. As such, they have been separated from basic party information and identified as details.
Examples are financial results of a company, family details...
Thus, a list of party details are linked to a party, being an organization or a party: asking for a detailed view of a party is tantamount to asking for this list.
Elements of this list are typed as:
- person specific details: birth and marriage details...
- organization specific details: financial results for instance
- fiscal residence
- tax file
- and membership (see Membership)

Party details are saved within instances of specialization of PartyDetail.</Description>
    <AttributeProperty isSynthetic='true' name='applicabilityCode' originalName='applicabilityCode' assignable='true' index='0'>
      <Description>A code indicating the applicability of something concerning a party (person, organization, etc.).</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.ApplicabilityCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.Person' originalName='Person' superclassName='org.acord.aim.Party.Party' isAbstract='false'>
    <Description>This concept stands for a person.

Note: Various details, such as name, occupation, education, are not included within person because persons may have multiple names, occupations and education details. These concepts are addressed via associations to related classes (PersonName, PersonDetail).</Description>
    <AttributeProperty isSynthetic='true' name='bloodTypeCode' originalName='bloodTypeCode' assignable='true' index='4'>
      <Description>The classification of the person's blood with regard to ABO and Rhesus systems in the human blood type profile. 
 
e.g: A 
 
e.g: A+ 
 
e.g: AB 
 
e.g: AB+ 
 
e.g: B- 
 
e.g: B+ 
 
e.g: O 
 
e.g: O+</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.BloodTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='deathIndicator' originalName='deathIndicator' assignable='true' index='3'>
      <Description>Indicates a person is dead. This attribute can be used when the death date is unknown.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='ethnicityCode' originalName='ethnicityCode' assignable='true' index='6'>
      <Description>Identifies the ethnic group to which an individual is associated. 
 
e.g: Afro-American. 
 
e.g: Caucasian.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.EthnicityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='genderCode' originalName='genderCode' assignable='true' index='5'>
      <Description>Person gender</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='maritalStatusCode' originalName='maritalStatusCode' assignable='true' index='8'>
      <Description>A code indicating the person's current marital status.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='missingIndicator' originalName='missingIndicator' assignable='true' index='7'>
      <Description>Indicates whether or not the person's whereabouts are known.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='birthDate' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='missingDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PersonBornAtPostalAddress' originalName='Person Born At PostalAddress' assignable='true' index='15' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.PostalAddress</TypeName>
      <RelationshipProperty isSynthetic='true' name='PersonForPersonBornAtPostalAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PersonHasNationalityOfCountry' originalName='Person Has Nationality Of Country' assignable='true' index='14' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Country</TypeName>
      <RelationshipProperty isSynthetic='true' name='PersonForPersonHasNationalityOfCountry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PersonIsCitizenOfCountry' originalName='Person Is Citizen Of Country' assignable='true' index='17' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.Country</TypeName>
      <RelationshipProperty isSynthetic='true' name='PersonForPersonIsCitizenOfCountry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PersonOwnsPersonDetail' originalName='Person Owns PersonDetail' assignable='true' index='13' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyDetailSubtypes.PersonDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='PersonForPersonOwnsPersonDetail' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PersonOwnsPersonName' originalName='Person Owns PersonName' assignable='true' index='16' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyName.PersonName</TypeName>
      <RelationshipProperty isSynthetic='true' name='PersonForPersonOwnsPersonName' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PersonRegistrationOnPerson' originalName='PersonRegistration On Person' assignable='true' index='18' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This represents the registrant (registered person) of a person registration.</Description>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='PersonForPersonRegistrationOnPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='primaryLanguageCode' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='Spouse' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Spouse</TypeName>
      <GetterMethod isSynthetic='false' name='getSpouse' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <PathExpression isSynthetic='false' pathString='PartyRoleForPartyRoleOnParty/asPartyRoleInRelationship/asSpouse/SpouseProvidesCivilRelationship/PartyRoleRelationshipInvolvesPartyRole/asPartyRoleInRelationship/asSpouse'>
        </PathExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='Role' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <GetterMethod isSynthetic='false' name='getRole' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyRoleForPartyRoleOnParty'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='Role'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='NationalProducerNumber' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getNationalProducerNumber' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PersonRegistrationOnPerson'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='NPN'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='statusReason' assignable='true' index='0'>
      <Description>The additional information to explain the latest status of the organization. 
 
e.g: Risky investment</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='statusDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='statusCode' assignable='true' index='1'>
      <Description>The current status of the organization within the life cycle model.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Enriched' assignable='true' defaultLiteral='false' index='19'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='MVR' assignable='true' typeInferred='false'>
      <Description>Motor Vehicle Records</Description>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration</TypeName>
      <GetterMethod isSynthetic='false' name='getMVR' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PersonRegistrationOnPerson'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='MVR'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='ProfLicense' assignable='true' typeInferred='false'>
      <Description>Motor Vehicle Records</Description>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration</TypeName>
      <GetterMethod isSynthetic='false' name='getProfLicense' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PersonRegistrationOnPerson'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='ProfLicense'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='.'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='BIGServices' assignable='true' typeInferred='true'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getBIGServices' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <PathExpression isSynthetic='false' pathString='BIGContextForPerson/Services'>
        </PathExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='FederalEmployerIdentificationNumber' assignable='true' typeInferred='false'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getFederalEmployerIdentificationNumber' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PersonRegistrationOnPerson'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='FEIN'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='identifier'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='statusEndDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='communicationMode' assignable='true' index='20'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='syncWithPDB' assignable='true' index='21'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='22'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='AthenePersonCustomfields' assignable='true' cardinality='One2One' containment='false'>
      <TypeName>org.acord.AthenePersonCustomFields</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Status' assignable='true' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Status</TypeName>
      <RelationshipProperty isSynthetic='false' name='PersonForStatus' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <KeyDescriptor isSynthetic='false' name='partyid' enrichment='true'>
      <PropertyName>PartyID</PropertyName>
    </KeyDescriptor>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.VirtualParty' originalName='VirtualParty' superclassName='org.acord.aim.Party.Party' isAbstract='false'>
    <Description>This concept represents a party other than a person or organization, including various types of organizations.

e.g. unknown party, system, etc.</Description>
    <RelationshipProperty isSynthetic='true' name='VirtualPartyOwnsPartyName' originalName='VirtualParty Owns PartyName' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyName.PartyName</TypeName>
      <RelationshipProperty isSynthetic='true' name='VirtualPartyForVirtualPartyOwnsPartyName' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationDetailSubtypes.EmployeeSummaryDetail' originalName='EmployeeSummaryDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.OrganizationDetail' isAbstract='false'>
    <Description>This concept summarizes employee details.</Description>
    <AttributeProperty isSynthetic='true' name='averageEmployeeAge' originalName='averageEmployeeAge' assignable='true' index='1'>
      <Description>Average age of the organization staff for the reference period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='averageEmployeeCount' originalName='averageEmployeeCount' assignable='true' index='0'>
      <Description>The average number of persons employed by the organization for the reference period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='employeeTurnoverPercentage' originalName='employeeTurnoverPercentage' assignable='true' index='4'>
      <Description>The frequency with which employees resign, are fired or retired from a company, usually computed as the percentage of a company's employees for the reference period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='femaleStaffPercentage' originalName='femaleStaffPercentage' assignable='true' index='3'>
      <Description>Percentage of woman staff of the organization for the reference period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='maleStaffPercentage' originalName='maleStaffPercentage' assignable='true' index='2'>
      <Description>Percentage of men staff of the organization for the reference period.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='totalWagesPaidAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationDetailSubtypes.FinancialResult' originalName='FinancialResult' superclassName='org.acord.aim.Party.PartyDetailSubtypes.OrganizationDetail' isAbstract='false'>
    <Description>This concept is a description of the financial results of a company.</Description>
    <AttributeProperty isSynthetic='true' name='inventoryTurnOver' originalName='inventoryTurnOver' assignable='true' index='0'>
      <Description>Turn over of the company during the considered period (resultDuration).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='changedValueAmount' assignable='true' index='14' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='dividendsPerShareAmount' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='earningsPerShareAmount' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ebitAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ebitdaAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ebtAmount' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossEarningsAmount' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossProfitAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='interestPaidAmount' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netEarningAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netResultAmount' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='operatingCostsAmount' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='profitAfterTaxAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='revenueAmount' assignable='true' index='15' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='taxesPaidAmount' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationDetailSubtypes.OperationsDetail' originalName='OperationsDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.OrganizationDetail' isAbstract='false'>
    <Description>This concept provides information that is used to describe the operations performed by this organization.</Description>
    <AttributeProperty isSynthetic='true' name='customerCount' originalName='customerCount' assignable='true' index='2'>
      <Description>Evaluation of the number of customers dealing with the company. This information is derived and its value depends on the company definition of what a customer is.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='franchisedIndicator' originalName='franchisedIndicator' assignable='true' index='1'>
      <Description>Indicates whether or not the organization has a franchise for one or more organizations.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='natureOfBusiness' originalName='natureOfBusiness' assignable='true' index='0'>
      <Description>General Liability code assigned to the business operations.
It the type of Organization's business operations.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='fiscalYearEndMonthDay' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='nafCode' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='naicsCode' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='sicCode' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationDetailSubtypes.OrganizationLegalStatus' originalName='OrganizationLegalStatus' superclassName='org.acord.aim.Party.PartyDetailSubtypes.OrganizationDetail' isAbstract='false'>
    <Description>This concept states the legal status of an organization.</Description>
    <AttributeProperty isSynthetic='true' name='abbreviationName' originalName='abbreviationName' assignable='true' index='3'>
      <Description>States the abbreviation for the full legal status name 

e.g. LLC (Limited Liability Corporation)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>Free description of the legal status</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='legalEntityTypeCode' originalName='legalEntityTypeCode' assignable='true' index='0'>
      <Description>Describes the legal entity type for the organization.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LegalEntityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='2'>
      <Description>States the full legal name of the status. Example: Limited liability</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='taxExemptIndicator' originalName='taxExemptIndicator' assignable='true' index='4'>
      <Description>This indicates the organization is exempt from revenue tax.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='OrganizationLegalStatusOnPlace' originalName='OrganizationLegalStatus On Place' assignable='true' index='5' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='OrganizationLegalStatusForOrganizationLegalStatusOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationSubtypes.Company' originalName='Company' superclassName='org.acord.aim.Party.Organization' isAbstract='false'>
    <Description>A formal, legally registered entity, created for the purpose of conducting business. 
 
e.g: Acme Insurance Company.</Description>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>The current status of the company within the life-cycle model. 
 
e.g: Active 
 
e.g: Closed out 
 
e.g: Compulsory liquidation 
 
e.g: Liquidation</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.CompanyStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusReason' originalName='statusReason' assignable='true' index='1'>
      <Description>The additional information to explain the latest status of the company. 
 
e.g: If the company status is "liquidated", the reason might be lack of revenue.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationSubtypes.GovernmentBody' originalName='GovernmentBody' superclassName='org.acord.aim.Party.Organization' isAbstract='false'>
    <Description>A government or community organization that is responsible for public policy. 
 
e.g: Bloomington Tax office.

e.g: Medina Historical Society</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationSubtypes.HealthInstitution' originalName='HealthInstitution' superclassName='org.acord.aim.Party.Organization' isAbstract='false'>
    <Description>This concept gives details about an Health Institution.</Description>
    <AttributeProperty isSynthetic='true' name='virtualIndicator' originalName='virtualIndicator' assignable='true' index='0'>
      <Description>This indicates the Health Organization is virtual.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='HealthInstitutionProducesHealthInstitutionEvaluation' originalName='HealthInstitution Produces HealthInstitutionEvaluation' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.ScoreSubtypes.HealthInstitutionEvaluation</TypeName>
      <RelationshipProperty isSynthetic='true' name='HealthInstitutionForHealthInstitutionProducesHealthInstitutionEvaluation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationSubtypes.Hospital' originalName='Hospital' superclassName='org.acord.aim.Party.OrganizationSubtypes.HealthInstitution' isAbstract='false'>
    <Description>This concept gives details about an Hospital.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationSubtypes.MedicalFacility' originalName='MedicalFacility' superclassName='org.acord.aim.Party.OrganizationSubtypes.HealthInstitution' isAbstract='false'>
    <Description>This concept define a MedicalFacility which is a specific sub type of Health Institution.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationSubtypes.OrganizationUnit' originalName='OrganizationUnit' superclassName='org.acord.aim.Party.Organization' isAbstract='false'>
    <Description>A component or subdivision of an organization established for the purpose of performing discrete functional responsibilities. This typically represents the organizational structure of the modeled organization including sections, departments, district offices, projects, and employment positions. 
 
e.g: Claims unit. 
 
e.g: Branch Office #24. 
 
e.g: Consumer Services Division 
 
e.g: Legal Department</Description>
    <AttributeProperty isSynthetic='true' name='organizationalUnitName' originalName='organizationalUnitName' assignable='true' index='0'>
      <Description>The name of the Organization Unit.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationUnitSubtypes.Branch' originalName='Branch' superclassName='org.acord.aim.Party.OrganizationSubtypes.OrganizationUnit' isAbstract='false'>
    <Description>An organization's local business establishment.
 
e.g: Antwerp office of Acme Insurance as sales and servicing branch for the Antwerp area.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationUnitSubtypes.DepartmentalUnit' originalName='DepartmentalUnit' superclassName='org.acord.aim.Party.OrganizationSubtypes.OrganizationUnit' isAbstract='false'>
    <Description>A component or subdivision of an organization unit established for the purpose of performing discrete functional responsibilities. It represents a level in the organizational structure of the modeled organization. 
 
e.g: Claims Department of Acme Insurance Company.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationUnitSubtypes.HospitalWard' originalName='HospitalWard' superclassName='org.acord.aim.Party.OrganizationUnitSubtypes.MedicalUnit' isAbstract='false'>
    <Description>This concept gives details about an HospitalWard, being a sub part of an Hospital.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationUnitSubtypes.MedicalUnit' originalName='MedicalUnit' superclassName='org.acord.aim.Party.OrganizationSubtypes.OrganizationUnit' isAbstract='false'>
    <Description>This concept gives details about a Medical Unit.</Description>
    <RelationshipProperty isSynthetic='true' name='MedicalUnitProducesHealthInstitutionEvaluation' originalName='MedicalUnit Produces HealthInstitutionEvaluation' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.ScoreSubtypes.HealthInstitutionEvaluation</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicalUnitForMedicalUnitProducesHealthInstitutionEvaluation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationUnitSubtypes.RegionalUnit' originalName='RegionalUnit' superclassName='org.acord.aim.Party.OrganizationSubtypes.OrganizationUnit' isAbstract='false'>
    <Description>A component or subdivision of an organization established on a regional basis. 
 
e.g: The EMEA (Europe Middle-East Africa) regional unit.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.OrganizationUnitSubtypes.Team' originalName='Team' superclassName='org.acord.aim.Party.OrganizationSubtypes.OrganizationUnit' isAbstract='false'>
    <Description>A organization working together for the completion of common goals. Teams can be formal (recognized by the organization) or informal (discussion groups). 
 
e.g: The cabin crew on an aircraft.</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.AlcoholTypeCodeList' originalName='AlcoholTypeCodeList' restricts='java.lang.String'>
    <Description>Defines possible Drinking habit types.</Description>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Beer' generator='Beer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Spirits' generator='Spirits'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wine' generator='Wine'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.ApplicabilityCodeList' originalName='ApplicabilityCodeList' restricts='java.lang.String'>
    <Description>A listing of the various determinants concerning the applicability of something. These values are used to specify whether a corresponding concept is known to "apply."</Description>
    <Enumerand isSynthetic='true' name='Applies' generator='Applies'>
      <Description>Known to apply. Same as a YES response to a question.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Doesnotapply' generator='Does not apply'>
      <Description>Does not apply. Same as a NO response to a question.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StatedasNotKnown' generator='Stated as Not Known'>
      <Description>May or may not apply. This is slightly different from "Unknown". If a question was asked and not answered - or if a question was never asked, then the Applicability response is "Unknown". However, if a question was asked, and a the response provided is "Unknown" (or some equivalent e.g. "don't know"), then such an answer or reply is modeled using the method representing "Stated as Not Known".</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.BloodTypeCodeList' originalName='BloodTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of human bodies according to their blood type.</Description>
    <Enumerand isSynthetic='true' name='AbPlus' generator='Ab Plus'>
      <Description>Identifies a HumanBody with blood type 'AB+'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='APlus' generator='A Plus'>
      <Description>Identifies a human body with blood type 'A+'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ab' generator='Ab'>
      <Description>Identifies a human body with blood type 'AB'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BMinus' generator='B Minus'>
      <Description>Identifies a human body with blood type 'B-'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BPlus' generator='B Plus'>
      <Description>Identifies a human body with blood type 'B+'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='O' generator='O'>
      <Description>Identifies a human body with blood type 'O'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OPlus' generator='O Plus'>
      <Description>Identifies a human body with blood type 'O+'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.CauseOfMedicalConditionCodeList' originalName='CauseOfMedicalConditionCodeList' restricts='java.lang.String'>
    <Description>Cause of Medical Condition</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Situational' generator='Situational'>
      <Description>Medical condition is onset in specific situations</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='KidneyStones' generator='Kidney Stones'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Anxiety' generator='Anxiety'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pregnancy' generator='Pregnancy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Caffeineinduced' generator='Caffeine induced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DeathofFamilyMember' generator='Death of Family Member'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Divorce' generator='Divorce'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stress' generator='Stress'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Exercise' generator='Exercise'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MitralValueProlapseMVP' generator='Mitral Value Prolapse/MVP'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Job' generator='Job'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JobLoss' generator='Job Loss'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.CommonPartyNameUsageCodeList' originalName='CommonPartyNameUsageCodeList' restricts='java.lang.String'>
    <Description>A code list representing various types of names common to all parties.</Description>
    <Enumerand isSynthetic='true' name='AlsoKnownAsNameAKA' generator='Also Known As Name (AKA)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BirthName' generator='Birth Name'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CompanyName' generator='Company Name'>
      <Description>Also known as "business name"</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DoingBusinessAsNameDBA' generator='Doing Business As Name (DBA)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LegalName' generator='Legal Name'>
      <Description>also known as "official name"</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MaidenName' generator='Maiden Name'>
      <Description>Often considered the last legal name prior to first marriage.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarriedName' generator='Married Name'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nickname' generator='Nickname'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PenName' generator='Pen Name'>
      <Description>Also called: nom de plume  an author's pseudonym.

SOURCE: http://dictionary.reference.com/browse/pen+name</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StageName' generator='Stage Name'>
      <Description>The pseudonym of an actor.

SOURCE: http://dictionary.reference.com/browse/stage+name</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TradingName' generator='Trading Name'>
      <Description>The stock trading symbol or similar designation/name associated with a stock exchange.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.CompanyStatusCodeList' originalName='CompanyStatusCodeList' restricts='java.lang.String'>
    <Description>Allowed life cycle states for a company.</Description>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Closed' generator='Closed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ForcedLiquidation' generator='Forced Liquidation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InSettlement' generator='In Settlement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SettingUp' generator='Setting Up'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VoluntaryClosing' generator='Voluntary Closing'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.ConditionStatusCodeList' originalName='ConditionStatusCodeList' restricts='java.lang.String'>
    <Description>Condition Status</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Recovered' generator='Recovered'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pending' generator='Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ongoing' generator='Ongoing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Completed' generator='Completed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderPhysiciansCare' generator='Under Physician&apos;s Care'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.CriminalIncidentCodeList' originalName='CriminalIncidentCodeList' restricts='java.lang.String'>
    <Description>A code list representing types of criminal incidents.</Description>
    <Enumerand isSynthetic='true' name='Arson' generator='Arson'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bribery' generator='Bribery'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fraud' generator='Fraud'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.CriminalIncidentStatusCodeList' originalName='CriminalIncidentStatusCodeList' restricts='java.lang.String'>
    <Description>A code list representing types of criminal incident statuses.</Description>
    <Enumerand isSynthetic='true' name='Convicted' generator='Convicted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Indicted' generator='Indicted'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.DomicileTaxCodeCodeList' originalName='DomicileTaxCodeCodeList' restricts='java.lang.String'>
    <Description>This list defines the domicile tax.</Description>
    <Enumerand isSynthetic='true' name='PrimaryTax' generator='Primary Tax'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SecondaryTax' generator='Secondary Tax'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.DrivingIncidentCodeList' originalName='DrivingIncidentCodeList' restricts='java.lang.String'>
    <Description>A code list indicating types of driving incidents.</Description>
    <Enumerand isSynthetic='true' name='Accident' generator='Accident '>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AtFaultAccident' generator='At Fault Accident '>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FailureToYield' generator='Failure To Yield'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotAtfaultAccident' generator='Not At fault Accident '>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.DrugTypeCodeList' originalName='DrugTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating types of drugs consumed.</Description>
    <Enumerand isSynthetic='true' name='Amphetamines' generator='Amphetamines'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Anticholinergics' generator='Anticholinergics'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Anytypeofsubstance' generator='Any type of substance'>
      <Description>Any of type of drug or substance, including alcohol, tobacco, marijuana, etc.

USAGE NOTE: This type code should only be used in connection with defining underwriting guidelines.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Barbiturates' generator='Barbiturates'>
      <Description>e.g. Phenobarbital, Seconal</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cannabis' generator='Cannabis'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hallucinogens' generator='Hallucinogens'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inhalants' generator='Inhalants'>
      <Description>e.g. solvents</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonBarbituratesformofSedativeHypnotics' generator='Non-Barbiturates (form of Sedative Hypnotics)'>
      <Description>e.g. Quaalude, Halcion</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OpiatesNarcotics' generator='Opiates / Narcotics'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.EducationLevelCodeList' originalName='EducationLevelCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Persons according to their education level.</Description>
    <Enumerand isSynthetic='true' name='None' generator='None'>
      <Description>Identifies a Person with education level 'None'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GED' generator='GED'>
      <Description>General Education Diploma</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighSchool' generator='High School'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Associate' generator='Associate'>
      <Description>An associate degree is an undergraduate academic degree awarded by community colleges, junior colleges, technical colleges, and bachelor's degree-granting colleges and universities upon completion of a course of study usually lasting two years. In the United States, and to some extent in Western Canada, an associate degree is equivalent to the first two years of a four-year college or university degree. It is the lowest in the hierarchy of post-secondary academic degrees offered in these countries. Although an associate degree is not usually as lucrative as a bachelor's degree, the resulting careers can still afford a respectable income with greater job security and much less student debt.

SOURCE: http://en.wikipedia.org/wiki/Associate_degree</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bachelors' generator='Bachelors'>
      <Description>A bachelor's degree is usually an academic degree awarded for an undergraduate course or major that generally lasts for four years, but can range anywhere from three to six years depending on the region of the world. In some exceptional cases, it may also be the name of a postgraduate degree, such as a bachelor of civil law, the bachelor of music, the bachelor of philosophy, or the bachelor of sacred theology degree.

SOURCE: http://en.wikipedia.org/wiki/Bachelor's_degree</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Masters' generator='Masters'>
      <Description>A master's degree is an academic degree granted to individuals who have undergone study demonstrating a mastery or high-order overview of a specific field of study or area of professional practice.[1] Within the area studied, graduates are posited to possess advanced knowledge of a specialized body of theoretical and applied topics; high order skills in analysis, critical evaluation or professional application; and the ability to solve complex problems and think rigorously and independently.

In some languages, a master's degree is called a magister, and magister or a cognate can also be used for a person who has the degree. There are various degrees of the same level, such as engineer's degrees, which have different names for historical reasons.

SOURCE: http://en.wikipedia.org/wiki/Masters_degree</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PostGraduate' generator='Post Graduate'>
      <Description>Post-graduate education (or graduate education in North America) involves learning and studying for degrees or other qualifications for which a first or Bachelor's degree generally is required, and is normally considered to be part of higher education. In North America, this level is generally referred to as graduate school.

SOURCE: http://en.wikipedia.org/wiki/Post_graduate</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProfessionalCertification' generator='Professional Certification'>
      <Description>Identifies a person with education level 'Professional certification'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SecondLevel' generator='Second Level'>
      <Description>Identifies a person with education level 'Second level'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.EthnicityCodeList' originalName='EthnicityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Persons according to their ethnicity.</Description>
    <Enumerand isSynthetic='true' name='AfroAmerican' generator='Afro American'>
      <Description>Identifies a Person with ethnicity 'Afro-American'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Caucasian' generator='Caucasian'>
      <Description>Identifies a Person with ethnicity 'Caucasian'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.IncomeTypeCodeList' originalName='IncomeTypeCodeList' restricts='java.lang.String'>
    <Description>A code list representing various types of income.</Description>
    <Enumerand isSynthetic='true' name='Alimony' generator='Alimony'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gambling' generator='Gambling'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Investment' generator='Investment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Retirement' generator='Retirement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SalaryEmployment' generator='Salary / Employment'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.MaritalStatusCodeList' originalName='MaritalStatusCodeList' restricts='java.lang.String'>
    <Description>A code list representing various marital status'.</Description>
    <Enumerand isSynthetic='true' name='CivilUnion' generator='Civil Union'>
      <Description>Civil Union is similar to marriage, which grants rights similar to marriage to same-gender couples.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonLawDefacto' generator='Common Law (Defacto)'>
      <Description>This de facto type of marriage exists in long-standing (the length of time varies) relationships that have never had a marriage ceremony. Common Law marriages have legal consequence in some countries but not others.

Some countries use this term to also include Civil Unions, but Civil Union stands alone in this enumeration.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Divorced' generator='Divorced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Estranged' generator='Estranged'>
      <Description>When a married couple is not legally separated but is living apart.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LegallySeparated' generator='Legally Separated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Married' generator='Married'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Single' generator='Single'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Widowed' generator='Widowed'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.OrganizationNameUsageCodeList' originalName='OrganizationNameUsageCodeList' restricts='java.lang.String'>
    <Description>A code list representing various types of names for parties other than persons.</Description>
    <Enumerand isSynthetic='true' name='AlsoKnownAsNameAKA' generator='Also Known As Name (AKA)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CompanyName' generator='Company Name'>
      <Description>Also known as "business name"</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DoingBusinessAsNameDBA' generator='Doing Business As Name (DBA)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LegalName' generator='Legal Name'>
      <Description>also known as "official name"</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TradingName' generator='Trading Name'>
      <Description>The stock trading symbol or similar designation/name associated with a stock exchange.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.OrganizationStatusCodeList' originalName='OrganizationStatusCodeList' restricts='java.lang.String'>
    <Description>Allowed life cycle states for an organization.  Used for all statuses other than foundation and dissolution.</Description>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InSeparation' generator='In Separation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stopped' generator='Stopped'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.OwnershipTypeCodeList' originalName='OwnershipTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating classes of ownership associated with a party.</Description>
    <Enumerand isSynthetic='true' name='FinancialAssets' generator='Financial Assets'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnedPropertys' generator='Owned Property(s)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ValuableAssets' generator='Valuable Assets'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.PersonDesignationCodeList' originalName='PersonDesignationCodeList' restricts='java.lang.String'>
    <Description>Person professional title</Description>
    <Enumerand isSynthetic='true' name='CPCU' generator='CPCU'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MBA' generator='MBA'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RN' generator='RN'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PA' generator='PA'>
      <Description>Physicians Assistant</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PAC' generator='PA-C'>
      <Description>Physicians Assistant Certified</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RPA' generator='RPA'>
      <Description>Registered Physicians Assistant</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RPAC' generator='RPA-C'>
      <Description>Registered Physicians Assistant Certified</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PEng' generator='PEng'>
      <Description>Professional Engineer</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PhD' generator='PhD'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DDS' generator='DDS'>
      <Description>Doctor of Dental Surgery</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DMD' generator='DMD'>
      <Description>Doctor of Dental Medicine</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EurChem' generator='Eur Chem'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EurIng' generator='Eur Ing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MD' generator='MD'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.PersonNameUsageCodeList' originalName='PersonNameUsageCodeList' restricts='java.lang.String'>
    <Description>A code list representing various types of names applicable only to persons.</Description>
    <Enumerand isSynthetic='true' name='AlsoKnownAsNameAKA' generator='Also Known As Name (AKA)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BirthName' generator='Birth Name'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LegalName' generator='Legal Name'>
      <Description>also known as "official name"</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MaidenName' generator='Maiden Name'>
      <Description>Often considered the last legal name prior to first marriage.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarriedName' generator='Married Name'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nickname' generator='Nickname'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PenName' generator='Pen Name'>
      <Description>Also called: nom de plume  an author's pseudonym.

SOURCE: http://dictionary.reference.com/browse/pen+name</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StageName' generator='Stage Name'>
      <Description>The pseudonym of an actor.

SOURCE: http://dictionary.reference.com/browse/stage+name</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.PrefixTitleCodeList' originalName='PrefixTitleCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of PersonNames according to their prefix titles.</Description>
    <Enumerand isSynthetic='true' name='Mr' generator='Mr'>
      <Description>Identifies a PersonName with prefix titles 'Mr'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mrs' generator='Mrs'>
      <Description>Identifies a PersonName with prefix titles 'Mrs'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dr' generator='Dr'>
      <Description>Identifies a person name with prefix titles 'Dr'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Herr' generator='Herr'>
      <Description>Identifies a person name with prefix titles 'Herr'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ms' generator='Ms'>
      <Description>Identifies a person name with prefix titles 'Ms'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Prof' generator='Prof'>
      <Description>Identifies a person name with prefix titles 'Prof'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Miss' generator='Miss'>
      <Description>Mademoiselle</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Party.PartyCodeLists.TobaccoTypeCodeList' originalName='TobaccoTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies the different smoking types</Description>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cigarette' generator='Cigarette'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cigar' generator='Cigar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pipe' generator='Pipe'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hashish' generator='Hashish'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChewingTobacco' generator='Chewing Tobacco'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NicotineGum' generator='Nicotine Gum'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NicotinePatch' generator='Nicotine Patch'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SmokelessTobacco' generator='Smokeless Tobacco'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Snuff' generator='Snuff'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyDetailSubtypes.CriminalIncident' originalName='CriminalIncident' superclassName='org.acord.aim.Party.PartyDetail' isAbstract='false'>
    <Description>This concept represents a criminal incident.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A description of the criminal incident.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='2'>
      <Description>Indicates the status of the criminal incident.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.CriminalIncidentStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>Indicates the type of criminal incident.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.CriminalIncidentCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='CriminalIncidentInvolvesParty' originalName='CriminalIncident Involves Party' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <Description>This represents a criminal incident in which a party is involved.</Description>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='CriminalIncidentForCriminalIncidentInvolvesParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='date' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyDetailSubtypes.DrivingIncident' originalName='DrivingIncident' superclassName='org.acord.aim.Party.PartyDetailSubtypes.CriminalIncident' isAbstract='false'>
    <Description>This concept represents a driving incident (e.g. driving violation, accident).</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code indicating the type of driving incident that occurred.

e.g. at fault accident, speeding, failure to yield, driving while impaired, hit and run, etc.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.DrivingIncidentCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyDetailSubtypes.GeneralOwnershipInformation' originalName='GeneralOwnershipInformation' superclassName='org.acord.aim.Party.PartyDetail' isAbstract='false'>
    <Description>This party detail subtype provides a link between parties and the physical objects they own.

This concept includes total ownership information derived from individual ownership relationships.</Description>
    <AttributeProperty isSynthetic='true' name='ownershipCount' originalName='ownershipCount' assignable='true' index='1'>
      <Description>The total count of something owned by the party (e.g. count of properties).</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='ownershipTypeCode' originalName='ownershipTypeCode' assignable='true' index='0'>
      <Description>A code indicating a class of ownership associated with a party.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.OwnershipTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='GeneralOwnershipInformationOnPhysicalObject' originalName='GeneralOwnershipInformation On PhysicalObject' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='GeneralOwnershipInformationForGeneralOwnershipInformationOnPhysicalObject' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ownershipAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyDetailSubtypes.OrganizationDetail' originalName='OrganizationDetail' superclassName='org.acord.aim.Party.PartyDetail' isAbstract='true'>
    <Description>This concept is a generalizing concept providing further details about an organization.
Some details regarding a party are not likely to be necessary to perform basic processes about parties. As such, they have been separated from basic party information and identified as details.</Description>
    <RelationshipProperty isSynthetic='true' name='referencePeriod' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' originalName='PersonDetail' superclassName='org.acord.aim.Party.PartyDetail' isAbstract='true'>
    <Description>This concept is a generalizing concept providing further details about a person.
Some details regarding a party are not likely to be necessary to perform basic processes about parties. As such, they have been separated from basic party information and identified as details.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyName.OrganizationName' originalName='OrganizationName' superclassName='org.acord.aim.Party.PartyName.PartyName' isAbstract='false'>
    <Description>This concept represents an organization's name.</Description>
    <AttributeProperty isSynthetic='true' name='usageCode' originalName='usageCode' assignable='true' index='0'>
      <Description>A code indicating the use of the organization's name.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.OrganizationNameUsageCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyName.PartyName' originalName='PartyName' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This abstract concept includes name details common to persons and organizations.</Description>
    <AttributeProperty isSynthetic='true' name='defaultIndicator' originalName='defaultIndicator' assignable='true' index='2'>
      <Description>Indicates this is the default party name.

e.g. If the party has only one name and it is designated as the "default" name, that name applies for all scenarios (party and related party roles).</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>The textual description of party name.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fullName' originalName='fullName' assignable='true' index='1'>
      <Description>The name of the party. This is an unstructured name for a person or organization.

With regards to a person's name, this can be utilized as the complete aggregated name used for identifying a person when the components of the name are unavailable or inapplicable. This may be viewed as a derived name, derived as a concatenation of the various elements that comprise the entire name or portions thereof. e.g: Dr. Mary Jane Wilson, PhD; Dr. Mary Wilson.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='languageCode' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyNameOnContactPreference' originalName='PartyName On ContactPreference' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPreference</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyNameForPartyNameOnContactPreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PartyName.PersonName' originalName='PersonName' superclassName='org.acord.aim.Party.PartyName.PartyName' isAbstract='false'>
    <Description>This concept represents a person's name.</Description>
    <AttributeProperty isSynthetic='true' name='givenName' originalName='givenName' assignable='true' index='1'>
      <Description>The name given to an individual which does not denote his/her family, tribal or geographic antecedents. It may be represented via one or more words, which collectively represent the given name.

Examples:

The name: William Shakespeare
"William" is the given name, also known as "first name" in some locales.
"Shakespeare" is the surname, also known as "last name" in some locales.

The name: Mary Beth Doe
"Mary Beth" is the given name.
"Doe" is the surname.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='middleName' originalName='middleName' assignable='true' index='2'>
      <Description>The name given to an individual which does not denote his/her family, tribal or geographic antecedents, and is not the person's given name (e.g. first name). This is known as middle name in various locales. It may be represented via one or more words, which collectively represent the middle name.

Examples:

The name: Juan Manuel Fangio
"Juan" is the given name, also known as "first name" in some locales.
"Manuel" is the middle name, also known as other given name in some locales.
"Fangio" is the surname, also known as "last name" in some locales.

The name: George Herbert Walker Bush
"George" is the given name.
"Herbert Walker" is the middle name.
"Bush" is the surname.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='prefixTitleCode' originalName='prefixTitleCode' assignable='true' index='0'>
      <Description>The honorifics or titles that precede a person's name when addressing a person in polite, somewhat formal circumstances.

e.g. Dr., Ms., Miss, Mr., Mrs., etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='suffix' originalName='suffix' assignable='true' index='4'>
      <Description>A suffix following the person's name, if applicable. This may be whatever it needs to be, including text such as "Jr.", or "III", as well as text depicting professional designations, such as "MD", "CPCU", "CLU".

Example:

The name: William Shakespeare III, CPCU
"William" is the given name.
"Shakespeare" is the surname.
"III, CPCU" is the suffix.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='surname' originalName='surname' assignable='true' index='3'>
      <Description>The name or compound name used by an individual to denote his/her familial, tribal or geographic antecedents. It may be represented via one or more words, which collectively represent the surname.

Examples

The name: William Shakespeare
"William" is the given name, also known as first name in some locales.
"Shakespeare" is the surname, also known as a family name or individual's "last name" in some locales.

The name: Elio de Angelis
"Elio" is the given name.
"de Angelis" is the surname.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='usageCode' originalName='usageCode' assignable='true' index='5'>
      <Description>A code indicating the use of the person's name.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.PersonNameUsageCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='salutation' assignable='true' index='6'>
      <Description>The name given to an individual which does not denote his/her family, tribal or geographic antecedents. It may be represented via one or more words, which collectively represent the given name.

Examples:

The name: William Shakespeare
"William" is the given name, also known as "first name" in some locales.
"Shakespeare" is the surname, also known as "last name" in some locales.

The name: Mary Beth Doe
"Mary Beth" is the given name.
"Doe" is the surname.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='alternatelastname' assignable='true' index='7'>
      <Description>The name given to an individual which does not denote his/her family, tribal or geographic antecedents. It may be represented via one or more words, which collectively represent the given name.

Examples:

The name: William Shakespeare
"William" is the given name, also known as "first name" in some locales.
"Shakespeare" is the surname, also known as "last name" in some locales.

The name: Mary Beth Doe
"Mary Beth" is the given name.
"Doe" is the surname.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='preferredname' assignable='true' index='8'>
      <Description>The name given to an individual which does not denote his/her family, tribal or geographic antecedents. It may be represented via one or more words, which collectively represent the given name.

Examples:

The name: William Shakespeare
"William" is the given name, also known as "first name" in some locales.
"Shakespeare" is the surname, also known as "last name" in some locales.

The name: Mary Beth Doe
"Mary Beth" is the given name.
"Doe" is the surname.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.AlcoholUse' originalName='AlcoholUse' superclassName='org.acord.aim.Party.PersonDetailSubtypes.SubstanceUse' isAbstract='false'>
    <Description>This concept describes a person's alcohol use.</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>Indicates the type of alcohol consumed.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.AlcoholTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.DrugUse' originalName='DrugUse' superclassName='org.acord.aim.Party.PersonDetailSubtypes.SubstanceUse' isAbstract='false'>
    <Description>This concept accounts for drug use (if any) for a person.</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code indicating a type of drug consumed.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.DrugTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.EducationDetail' originalName='EducationDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>This concept defines details about a person's education.</Description>
    <AttributeProperty isSynthetic='true' name='designationCode' originalName='designationCode' assignable='true' index='2'>
      <Description>A code identifying a professional designation.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.PersonDesignationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='educationLevelCode' originalName='educationLevelCode' assignable='true' index='0'>
      <Description>The highest level of degree obtained by the person. 
 
e.g: Associate, Masters</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.EducationLevelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fullTimeStudentIndicator' originalName='fullTimeStudentIndicator' assignable='true' index='1'>
      <Description>Indicates the person is a full-time student (as contrasted with a part-time student).</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='EducationDetailOnEducationCertificate' originalName='EducationDetail On EducationCertificate' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.EducationCertificate</TypeName>
      <RelationshipProperty isSynthetic='true' name='EducationDetailForEducationDetailOnEducationCertificate' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='ContactPreference' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPreference</TypeName>
      <RelationshipProperty isSynthetic='false' name='EducationDetailForContactPreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='description' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Location' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.FamilyDetail' originalName='FamilyDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>This concept provides family details for a person.</Description>
    <AttributeProperty isSynthetic='true' name='childrenCount' originalName='childrenCount' assignable='true' index='0'>
      <Description>Number of children of a person</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='FamilyDetailOnHouseholdRelationship' originalName='FamilyDetail On HouseholdRelationship' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.HouseholdRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='FamilyDetailForFamilyDetailOnHouseholdRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.IncomeDetail' originalName='IncomeDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>This represents general information regarding income details for a given person.

Usage Note: Use as many instances of this as necessary to adequately represent a person's income.

Example 1: Person with two different incomes (1) Salary (2) Investment

Example 2: Person with salary income for multiple years (1) Salary, effectivePeriod=current year (2) Salary, effective Period=prior year (3) Etc.</Description>
    <AttributeProperty isSynthetic='true' name='frequencyCode' originalName='frequencyCode' assignable='true' index='1'>
      <Description>A code indicating the frequency of income.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code indicating the applicable type of income.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.IncomeTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='disposableAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossAmount' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.LifestyleActivity' originalName='LifestyleActivity' superclassName='org.acord.aim.Party.PersonDetailSubtypes.LifestyleDetail' isAbstract='false'>
    <Description>Activities performed by a person as a leisure pursuit. 

e.g: Painting, photography, skydiving</Description>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>The name of the hobby.

e.g. Skydiving, photography</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='averageTimeSpentDuration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.LifestyleDetail' originalName='LifestyleDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>Types of general personal activities.

 e.g: Alcohol Use, Hobbies, Tobacco Use</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>A textual description of the lifestyle detail.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='frequencyCode' originalName='frequencyCode' assignable='true' index='0'>
      <Description>How often the person engages in this hobby/lifestyle activity on an annual basis.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='motive' originalName='motive' assignable='true' index='2'>
      <Description>The motive/reason for the lifestyle choice/activity .</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lastOccurrenceDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.MedicalDetail' originalName='MedicalDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>This concept is the main concept gathering information about the medical history of a person.
A person can be attached a medical history. This can be composed of many elements. There is no specific services to add/modify/remove such elements, the whole file must be updated through the updateMedicalHistory service. Composing elements will be added/modified/removed through it since they are attached to the file by composition links.</Description>
    <AttributeProperty isSynthetic='true' name='causeOfConditionCode' originalName='causeOfConditionCode' assignable='true' index='2'>
      <Description>Indicates the cause of a person's medical condition.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.CauseOfMedicalConditionCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='conditionStatusCode' originalName='conditionStatusCode' assignable='true' index='1'>
      <Description>Medical Condition</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.ConditionStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='generalEvaluationDescription' originalName='generalEvaluationDescription' assignable='true' index='0'>
      <Description>Free text describing the general state of the person.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='MedicalDetailOnMedicalAssessment' originalName='MedicalDetail On MedicalAssessment' assignable='true' index='4' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.MedicalAssessment</TypeName>
      <RelationshipProperty isSynthetic='true' name='MedicalDetailForMedicalDetailOnMedicalAssessment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='medicalFileLastUpdateDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.OccupationDetail' originalName='OccupationDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>This concept provides details about the occupation of a person.

Note: This is not the same as the actual employment of a person (for example, a person still has an occupation even though he or she may be unemployed). Someone may be a seller of insurance, regardless of whether the person is an employee of an insurance company, an insurance broker, or self-employed. It is also possible for parties to have more than one occupation at a given point in time.</Description>
    <AttributeProperty isSynthetic='true' name='anticipatedRetirementIndicator' originalName='anticipatedRetirementIndicator' assignable='true' index='1'>
      <Description>Defines if the person is going to retire.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='currentEmploymentIndicator' originalName='currentEmploymentIndicator' assignable='true' index='2'>
      <Description>Indicates the person is currently employed.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='occupationClass' originalName='occupationClass' assignable='true' index='0'>
      <Description>This attribute describes the person's occupation (e.g. cook, mechanic, etc.).

Note: This is not the same as the professional title, this is a general work description.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='primaryOccupationIndicator' originalName='primaryOccupationIndicator' assignable='true' index='3'>
      <Description>Indicates this occupation is the person's primary occupation.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='professionalTitle' originalName='professionalTitle' assignable='true' index='4'>
      <Description>The title of the person's occupation.

Note: This is not synonymous with "job title" which is associated with employment.

e.g. A person's occupation may be classified as "chef" and might also have a professional title of "Master Chef". The same person's job title might be "Culinary Director".</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='anticipatedRetirementDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='OccupationDetailOnEmploymentRelationship' originalName='OccupationDetail On EmploymentRelationship' assignable='true' index='7' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.EmploymentRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='OccupationDetailForOccupationDetailOnEmploymentRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='retirementDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='contractOccupationIndicator' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.PersonLegalCapacity' originalName='PersonLegalCapacity' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>The capacity of both natural and legal persons determines whether they may make binding amendments to their rights, duties and obligations, such as getting married or merging, entering into contracts, making gifts, or writing a valid will. Capacity is an aspect of status and both are defined by a person's personal law.

SOURCE: http://en.wikipedia.org/wiki/Capacity_(law)</Description>
    <AttributeProperty isSynthetic='true' name='legalCapacity' originalName='legalCapacity' assignable='true' index='0'>
      <Description>A person's legal capacity (e.g. infancy, minor, etc.)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.SubstanceUse' originalName='SubstanceUse' superclassName='org.acord.aim.Party.PersonDetailSubtypes.LifestyleDetail' isAbstract='false'>
    <Description>This concept describes a person's substance use.</Description>
    <RelationshipProperty isSynthetic='true' name='amount' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='duration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Party.PersonDetailSubtypes.TobaccoUse' originalName='TobaccoUse' superclassName='org.acord.aim.Party.PersonDetailSubtypes.SubstanceUse' isAbstract='false'>
    <Description>This concept accounts for tobacco use (if any) for a person.</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>Indicates the type of tobacco consumed.</Description>
      <TypeName>org.acord.aim.Party.PartyCodeLists.TobaccoTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.BulkMaterial' originalName='BulkMaterial' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>Any bulk material or substance generally handled in large amounts of undifferentiated objects.</Description>
    <AttributeProperty isSynthetic='true' name='cargoCount' originalName='cargoCount' assignable='true' index='1'>
      <Description>The quantity of bulk material.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='cargoTypeCode' originalName='cargoTypeCode' assignable='true' index='0'>
      <Description>A categorization of cargo, according to the type of content.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.BulkCargoTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Cargo' originalName='Cargo' superclassName='org.acord.aim.PhysicalObject.PhysicalObjectGroup' isAbstract='false'>
    <Description>The freight carried by a watercraft, an aircraft, or another vehicle.</Description>
    <RelationshipProperty isSynthetic='true' name='weightMeasurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.CraftedItem' originalName='CraftedItem' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>This concept generalizes all types of items that are not manufactured or based on a model specification.  These items tend to be handmade and of some significant value.</Description>
    <AttributeProperty isSynthetic='true' name='antiqueIndicator' originalName='antiqueIndicator' assignable='true' index='0'>
      <Description>Indicates if the valuable item is considered as an antique.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='completedDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Crop' originalName='Crop' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>This generalizing concept represents the yield from plants in a single growing season as part of agribusiness.</Description>
    <AttributeProperty isSynthetic='true' name='cropManagementTypeCode' originalName='cropManagementTypeCode' assignable='true' index='0'>
      <Description>A code indicating the applicable type of crop management.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.CropManagementCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.FinancialTransactionMedium' originalName='FinancialTransactionMedium' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>A medium used for performing financial transactions.</Description>
    <AttributeProperty isSynthetic='true' name='financialMediumTypeCode' originalName='financialMediumTypeCode' assignable='true' index='0'>
      <Description>This represents the type of medium that can be insured.

e.g. Cash, Money Order</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='expirationDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='languageCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Fleet' originalName='Fleet' superclassName='org.acord.aim.PhysicalObject.PhysicalObjectGroup' isAbstract='false'>
    <Description>This concept enables to grouping of vehicles. A fleet can either be a stand alone insurable entity or a schedule of vehicles.</Description>
    <AttributeProperty isSynthetic='true' name='firstFleetInsuranceIndicator' originalName='firstFleetInsuranceIndicator' assignable='true' index='2'>
      <Description>Yes if never been insured before</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='heavyWeightVehicleCount' originalName='heavyWeightVehicleCount' assignable='true' index='0'>
      <Description>Number of heavy weight vehicles within the fleet</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lightWeightVehicleCount' originalName='lightWeightVehicleCount' assignable='true' index='1'>
      <Description>Number of light weight vehicles within the fleet</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleCount' originalName='vehicleCount' assignable='true' index='3'>
      <Description>number of vehicles to be insured</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='averageFleetValueAmount' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='fleetinclusion' originalName='fleet inclusion' assignable='true' index='5' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle</TypeName>
      <RelationshipProperty isSynthetic='true' name='FleetForfleetinclusion' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Herd' originalName='Herd' superclassName='org.acord.aim.PhysicalObject.PhysicalObjectGroup' isAbstract='false'>
    <Description>This general concept describes a group of animals.  The animals in this concept are usually not scheduled.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.HouseholdContent' originalName='HouseholdContent' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>A group of household items that are insured collectively.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Jewelry' originalName='Jewelry' superclassName='org.acord.aim.PhysicalObject.PhysicalObjectGroup' isAbstract='false'>
    <Description>Jewelry is a form of personal adornment, manifesting itself as necklaces, rings, brooches, earrings and bracelets.

SOURCE: http://en.wikipedia.org/wiki/Jewelry</Description>
    <RelationshipProperty isSynthetic='true' name='jewlerycomposition' originalName='jewlery composition' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PieceOfJewelry</TypeName>
      <RelationshipProperty isSynthetic='true' name='JewelryForjewlerycomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Land' originalName='Land' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>This concept represents a land, which generally does not contain any construction.</Description>
    <AttributeProperty isSynthetic='true' name='soilTypeCode' originalName='soilTypeCode' assignable='true' index='0'>
      <Description>The classification of the surface layer of this place. 
 
e.g: Sand, lime, rock, swamp.</Description>
      <TypeName>org.acord.aim.ContactandPlace.ContactCodeLists.SoilTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.LifeForm' originalName='LifeForm' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>The generalizing concept that defines details about a physical nature of a living creature.  This is an animal, plant life or the physical body part such as heart, lung or liver.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Livestock' originalName='Livestock' superclassName='org.acord.aim.PhysicalObject.PhysicalObjectGroup' isAbstract='false'>
    <Description>This concept gives details on a livestock. Livestock (also cattle) refers to one or more domesticated animals raised in an agricultural setting to produce commodities such as food or fiber, or labor.

The term "livestock" is nebulous and may be defined narrowly or broadly. On a broader view, livestock refers to any breed or population of animal kept by humans for a useful, commercial purpose. This can mean domestic animals, semi-domestic animals, or captive wild animals. Semi-domesticated refers to animals which are only lightly domesticated or of disputed status. These populations may also be in the process of domestication. Some people may use the term livestock to refer just to domestic animals or even just to red meat animals.</Description>
    <AttributeProperty isSynthetic='true' name='freeRangeLivestockIndicator' originalName='freeRangeLivestockIndicator' assignable='true' index='1'>
      <Description>Indicates if the livestock is in free range or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='livestockDescription' originalName='livestockDescription' assignable='true' index='0'>
      <Description>A textual description of the livestock (e.g. cattle, sheep, etc.).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='specificanimallistingforlivestock' originalName='specific animal listing for livestock' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.LifeFormSubtypes.Animal</TypeName>
      <RelationshipProperty isSynthetic='true' name='LivestockForspecificanimallistingforlivestock' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItem' originalName='ManufacturedItem' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>A physical object that is manufactured and optionally based on a model specification.</Description>
    <AttributeProperty isSynthetic='true' name='brandName' originalName='brandName' assignable='true' index='3'>
      <Description>Identifies the brand of the manufactured item.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='colorCode' originalName='colorCode' assignable='true' index='2'>
      <Description>The color of the manufactured item.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ColourCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='movableIndicator' originalName='movableIndicator' assignable='true' index='1'>
      <Description>Indicates whether or not the manufactured item is movable. 
Note: Movable material objects may command a higher risk premium for theft.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='serialNumber' originalName='serialNumber' assignable='true' index='0'>
      <Description>The text string that uniquely identifies this manufactured item for a given manufacturer makes and models of a product. 
 
e.g: CD345-OEM-3457-ABC uniquely identifies a Canon EOS 50E camera.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='manufacturedDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='modelspecformanufactureditem' originalName='model spec for manufactured item' assignable='true' index='6' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ManufacturedItemFormodelspecformanufactureditem' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='sizeMeasurement' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' originalName='ManufacturedItemSpecification' superclassName='org.acord.aim.CommonElements.CommonClasses.Specification' isAbstract='false'>
    <Description>The specification of the characteristics of a manufactured item.   The specification pattern is used throughout the Physical Object package.  All manufactured items have a corresponding Specification.

The Manufactured Item Specification include details related to the template used in the manufacturing process.  The attributes on each specification are static for individual instances of the related physical objects.</Description>
    <AttributeProperty isSynthetic='true' name='make' originalName='make' assignable='true' index='0'>
      <Description>The classification of this model specification that identifies the family or range to which it belongs. 
 
e.g: Bayer Asperin for drugs. 
 
e.g: Ford Mondeo, Opel Vectra, Ford Taurus for cars.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='model' originalName='model' assignable='true' index='1'>
      <Description>The classification of this particular model specification that distinguishes it from other models in the same range (make). 
 
e.g: EcoWash 1100 for a Zanussi washing-machine.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='modelYear' originalName='modelYear' assignable='true' index='2'>
      <Description>The year for this model specification, and is part of the unique identification of the model. Note that model specifications may change from year to year. 
 
e.g: options than the 1995 model.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='series' originalName='series' assignable='true' index='3'>
      <Description>The classification of a collection of produced items based on a common set of construction characteristics such as construction specification, place of construction and period of construction. Series are subgroups of models.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='estimatedMarketAmount' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='firstManufacturedDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastManufacturedDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='listPriceNewAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObject' originalName='PhysicalObject' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept defines the physical object. It generalizes all physical assets likely to be involved in an insurance process.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>Describes the Insurable Object</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='physicalobjectcomposition' originalName='physical object composition' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='PhysicalObjectForphysicalobjectcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectGroup' originalName='PhysicalObjectGroup' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>A grouping of physical objects with similar or common characteristics.   These are typically not scheduled as an insurable entity.</Description>
    <AttributeProperty isSynthetic='true' name='groupCount' originalName='groupCount' assignable='true' index='1'>
      <Description>The actual number of physical objects being in this object group. 
 
e.g: 12 smoke detectors installed in a house. 
 
e.g: 500 pallets (object groups) of 40 DVD recorders (manufactured items) each, as the general cargo conveyed by a ship. 
 
e.g: A car fleet of 150 vehicles.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='maximumAllowedCount' originalName='maximumAllowedCount' assignable='true' index='0'>
      <Description>The number that represents the upper limit of physical objects that can be part of this group. 
 
e.g: The fleet of cars cannot exceed 200 cars before the agreement need to be updated (and the premium recalculated).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PieceOfArt' originalName='PieceOfArt' superclassName='org.acord.aim.PhysicalObject.CraftedItem' isAbstract='false'>
    <Description>This concept represents a piece of art.</Description>
    <AttributeProperty isSynthetic='true' name='movableIndicator' originalName='movableIndicator' assignable='true' index='3'>
      <Description>Indicates if the piece of art is mobile or transportable.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pieceOfArtName' originalName='pieceOfArtName' assignable='true' index='0'>
      <Description>A piece of art could be named as part of the unique identity of item.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pieceOfArtNature' originalName='pieceOfArtNature' assignable='true' index='1'>
      <Description>Qualifies the nature of the piece of art: painting, drawing, statute, etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='securitySystemDescription' originalName='securitySystemDescription' assignable='true' index='4'>
      <Description>Describes the security system protecting the piece of art.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='securitySystemLevel' originalName='securitySystemLevel' assignable='true' index='5'>
      <Description>Describes the security level of the security system protecting the piece of art.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='storageAreaDescription' originalName='storageAreaDescription' assignable='true' index='2'>
      <Description>Describes the piece of art's exposition or storage area.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PieceOfJewelry' originalName='PieceOfJewelry' superclassName='org.acord.aim.PhysicalObject.CraftedItem' isAbstract='false'>
    <Description>This concept represents a piece of jewelry or even just a jewel.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PreciousMetal' originalName='PreciousMetal' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>Represents precious metal.

e.g: Gold, Silver, Copper</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.Structure' originalName='Structure' superclassName='org.acord.aim.PhysicalObject.PhysicalObject' isAbstract='false'>
    <Description>This concept is the generalizing concept representing all physical structures.

To create specific instances of a structure where a specialization is not already included in the model, use the typeName attribute inherited from InformationModelObject to represent the type of structure. 

This eliminates the need for specific specializations to be created for every type of structure. It is recommended to use specializations when additional attribution is necessary.</Description>
    <AttributeProperty isSynthetic='true' name='actualUsageCode' originalName='actualUsageCode' assignable='true' index='16'>
      <Description>This indicates the actual usage of the structure independent of the official zoning registration of the structure.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureUsageTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='buildingSprinkleredPercentage' originalName='buildingSprinkleredPercentage' assignable='true' index='20'>
      <Description>The ratio of the structure that is covered by a sprinkler system.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='burglarAlarmCode' originalName='burglarAlarmCode' assignable='true' index='6'>
      <Description>Identifies the type of burglar alarm used.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AlarmTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='constructionTypeCode' originalName='constructionTypeCode' assignable='true' index='13'>
      <Description>The form of fabrication of the structure.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionMaterialCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='constructionYear' originalName='constructionYear' assignable='true' index='21'>
      <Description>Defines the year of construction of the property.</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='designStyleCode' originalName='designStyleCode' assignable='true' index='18'>
      <Description>The design style of the structure.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.BuildingDesignStyleCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='distanceToFireHydrant' originalName='distanceToFireHydrant' assignable='true' index='8'>
      <Description>The linear measurement from the structure to the nearest fire hydrant.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='doorLocksIndicator' originalName='doorLocksIndicator' assignable='true' index='9'>
      <Description>Indicates whether or not the structure has door locks.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='elevatorCount' originalName='elevatorCount' assignable='true' index='2'>
      <Description>The count of elevators in the structure.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fireAlarmCode' originalName='fireAlarmCode' assignable='true' index='7'>
      <Description>Identifies the type of fire alarm used.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AlarmTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='floorCount' originalName='floorCount' assignable='true' index='0'>
      <Description>Indicates the number of floors of a building, but the basement floors.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='generalShapeCode' originalName='generalShapeCode' assignable='true' index='22'>
      <Description>It indicates the general physical shape of the building.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.GeneralShapeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='habitableIndicator' originalName='habitableIndicator' assignable='true' index='4'>
      <Description>Defines if the property is habitable or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='habitableUnitCount' originalName='habitableUnitCount' assignable='true' index='3'>
      <Description>The count of the habitable components within the same structure.  If this number is zero, then structure is uninhabitable.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='heatingTypeCode' originalName='heatingTypeCode' assignable='true' index='5'>
      <Description>The form of heating.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.HeatingTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='prescribedUsageCode' originalName='prescribedUsageCode' assignable='true' index='17'>
      <Description>This indicates the officially listed usage of the structure based on a registration either by geographical region or a specific building registration.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureUsageTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roomCount' originalName='roomCount' assignable='true' index='1'>
      <Description>The count of rooms in the structure.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='safeIndicator' originalName='safeIndicator' assignable='true' index='11'>
      <Description>Indicates whether or not a safe is built into the structure.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='specialConstructionClassification' originalName='specialConstructionClassification' assignable='true' index='14'>
      <Description>This indicates a special classification of construction usually enforced by an official party. By indicating this classification with some cultural or historical value, restrictions would be in place as far as modifying the buildings.

For example, in the UK, Germany, France and Switzerland, buildings of certain ages are grouped under a common name, such as: houses which were built between 1850 and 1910 are called Grade 2 Georgian Buildings. This is used mainly for risk calculation and the allocation of premium amount. e.g: Grade 2 Georgian Buildings.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='specialZoningClassification' originalName='specialZoningClassification' assignable='true' index='15'>
      <Description>This indicates a special zoning classification not specific to the individual construction but of a broader geographical area usually enforced by an official party. By indicating this classification with some cultural or historical value, restrictions would be in place as far as building or modifying the structures within the classified zoning area. For example,a historical district in a particular city might have very specific construction details regarding building or modifying structures within that geographical zone.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tenancyCode' originalName='tenancyCode' assignable='true' index='19'>
      <Description>Indicates whether the structure is let, sub-let, or owner occupied.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.TenancyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vacancyIndicator' originalName='vacancyIndicator' assignable='true' index='12'>
      <Description>Determines if the structure is vacant.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='windowLocksIndicator' originalName='windowLocksIndicator' assignable='true' index='10'>
      <Description>Indicates whether or not the structure has window locks.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='adjoinedStructure' originalName='adjoined Structure' assignable='true' index='28' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.Structure</TypeName>
      <RelationshipProperty isSynthetic='true' name='StructureForadjoinedStructure' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='basementMeasurement' assignable='true' index='24' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='gradeFloorMeasurement' assignable='true' index='25' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='occupiedMeasurement' assignable='true' index='26' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ratingdetailinformation' originalName='rating detail information' assignable='true' index='30' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.StructureRatingDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='StructureForratingdetailinformation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='shelter' originalName='shelter' assignable='true' index='29' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='StructureForshelter' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='structuredetailspecification' originalName='structure detail specification' assignable='true' index='27' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.PhysicalObject.StructureDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='StructureForstructuredetailspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalFloorMeasurement' assignable='true' index='23' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetail' originalName='StructureDetail' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept gives more details on the construction of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='constructionQualityCode' originalName='constructionQualityCode' assignable='true' index='0'>
      <Description>It indicates the quality of the building, part of the building or an item.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionQualityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='constructionSolidMaterialPercentage' originalName='constructionSolidMaterialPercentage' assignable='true' index='1'>
      <Description>Defines the percentage of solid material of the structure.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='constructionStatusCode' originalName='constructionStatusCode' assignable='true' index='2'>
      <Description>The stage of completion of the construction of the structure.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='inspectedIndicator' originalName='inspectedIndicator' assignable='true' index='3'>
      <Description>Indicates if the construction was inspected.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='inspectionDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastUpdatedDate' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reconstructionValueRangeMaxAmount' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='reconstructionValueRangeMinAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.LifeFormSubtypes.Animal' originalName='Animal' superclassName='org.acord.aim.PhysicalObject.LifeForm' isAbstract='false'>
    <Description>An living creature that is not human or plant.  An animal can be a pet, a farm animal or a show animal.</Description>
    <AttributeProperty isSynthetic='true' name='animalName' originalName='animalName' assignable='true' index='0'>
      <Description>Name of the animal</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='animalTypeCode' originalName='animalTypeCode' assignable='true' index='2'>
      <Description>Type of animal.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AnimalTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='breed' originalName='breed' assignable='true' index='4'>
      <Description>States the breed of the animal</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='color' originalName='color' assignable='true' index='8'>
      <Description>Color of the animal.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='domesticationCategoryCode' originalName='domesticationCategoryCode' assignable='true' index='1'>
      <Description>A categorization of an animal's domestication.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AnimalCategoryCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='genderCode' originalName='genderCode' assignable='true' index='9'>
      <Description>The defined gender of the LifeForm.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.GenderCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='microChippedIndicator' originalName='microChippedIndicator' assignable='true' index='7'>
      <Description>States whether the animal has been incorporated an identification chip.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='neuterIndicator' originalName='neuterIndicator' assignable='true' index='6'>
      <Description>States whether the pet has been castrated.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pedigreeIndicator' originalName='pedigreeIndicator' assignable='true' index='5'>
      <Description>States whether the animal has a pedigree</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='species' originalName='species' assignable='true' index='3'>
      <Description>Species of the animal. Example: poodle or Persian cat.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='AnimalRegistrationRegistersAnimal' originalName='AnimalRegistration Registers Animal' assignable='true' index='14' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.AnimalRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='AnimalForAnimalRegistrationRegistersAnimal' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='birthDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='deathDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='heightMeasurement' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='weightMeasurement' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.LifeFormSubtypes.BodyPart' originalName='BodyPart' superclassName='org.acord.aim.PhysicalObject.LifeForm' isAbstract='false'>
    <Description>A part of the body of a Life Form. (Examples: Arm, Hand, Heart, Leg, Lung, Tooth).  There are particular types of life and health insurance that specify certain body parts as risks of insurance.  It is also critical to capture details about individual body parts in the case of health care for procedures around replacement surgery.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.LifeFormSubtypes.PlantLife' originalName='PlantLife' superclassName='org.acord.aim.PhysicalObject.LifeForm' isAbstract='false'>
    <Description>Nurseries often need the ability to insure individual plants, trees or shrubs or groups of plants, trees or shrubs that are of significant worth.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.AircraftSpecification' originalName='AircraftSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.VehicleSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of an aircraft.</Description>
    <AttributeProperty isSynthetic='true' name='aircraftTypeCode' originalName='aircraftTypeCode' assignable='true' index='2'>
      <Description>Describes the type of aircraft</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AircraftTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='aviationTypeCode' originalName='aviationTypeCode' assignable='true' index='3'>
      <Description>Describes the aviation usage.  (Private, Commercial, etc)</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AviationTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='crewSeatCount' originalName='crewSeatCount' assignable='true' index='4'>
      <Description>Number of seats for the crew of an aircraft.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='instrumentalFlightRatingIndicator' originalName='instrumentalFlightRatingIndicator' assignable='true' index='0'>
      <Description>Indicates whether or not this aircraft model has been rated for instrumental flights.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pilotSeatCount' originalName='pilotSeatCount' assignable='true' index='5'>
      <Description>Number of seats for pilots of an aircraft.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='totalSeatCount' originalName='totalSeatCount' assignable='true' index='1'>
      <Description>Total number of seats in an aircraft.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.ComputerMonitorSpecification' originalName='ComputerMonitorSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of a computer monitor.</Description>
    <RelationshipProperty isSynthetic='true' name='measurement' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.ComputerSpecification' originalName='ComputerSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of a computer.</Description>
    <AttributeProperty isSynthetic='true' name='clockSpeed' originalName='clockSpeed' assignable='true' index='0'>
      <Description>Clock speed of the computer model.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='internalMemory' originalName='internalMemory' assignable='true' index='1'>
      <Description>Size of internal memory of the computer model.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.DrugEquivalence' originalName='DrugEquivalence' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>The identification of a drug being equivalent to another drug.  This identification is used for generics being used in place of name brands.

USAGE NOTE: When describing a scenario, the equivalence code describes the "from" DrugSpecification in relation to the "to" DrugSpecification.

In other words, the three attributes essentially complete the following sentence:

fromDrugSpecification equivalenceTypeCode toDrugSpecification
e.g. Brand-A Generic Equivalent Brand-B</Description>
    <AttributeProperty isSynthetic='true' name='equivalanceTypeCode' originalName='equivalanceTypeCode' assignable='true' index='0'>
      <Description>Indicates the nature of a drug equivalence.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.DrugEquivalenceTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='DrugEquivalenceDescribesRelationFromDrugSpecification' originalName='DrugEquivalence Describes Relation From DrugSpecification' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.DrugSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='DrugEquivalenceForDrugEquivalenceDescribesRelationFromDrugSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='DrugEquivalenceDescribesRelationToDrugSpecification' originalName='DrugEquivalence Describes Relation To DrugSpecification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.DrugSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='DrugEquivalenceForDrugEquivalenceDescribesRelationToDrugSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.DrugSpecification' originalName='DrugSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of a drug.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.EngineSpecification' originalName='EngineSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' isAbstract='false'>
    <Description>The EngineSpecification class represents the (optional) motorization specification of a vehicle. All information about engine specification should exist here.</Description>
    <AttributeProperty isSynthetic='true' name='engineTypeCode' originalName='engineTypeCode' assignable='true' index='1'>
      <Description>States the type of the engine.  Could be specialized with specific engine types. (e.g. Watercraft Engine)</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.EngineTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fuelInjectionTypeCode' originalName='fuelInjectionTypeCode' assignable='true' index='2'>
      <Description>The technique used to inject fuel into the engine of the vehicle.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.FuelInjectionTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fuelTypeCode' originalName='fuelTypeCode' assignable='true' index='0'>
      <Description>It indicates the type of fuel used.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.FuelTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='ignitionCode' originalName='ignitionCode' assignable='true' index='3'>
      <Description>The technique used to ignite the fuel in the vehicle's engine.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.IgnitionTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='engineCapacityMeasurement' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='horsepowerMeasurement' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.FeatureSpecification' originalName='FeatureSpecification' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents a relationship between two manufactured item specifications, allowing for clarity on features that make-up the specification, including whether such features are optional.

USAGE NOTE: When describing a scenario, the use code describes the "from" ManufacturedItemSpecification in relation to the "to" ManufacturedItemSpecification.

In other words, the three attributes essentially complete the following sentence:

fromManufacturedItemSpecification useCode toManufacturedItemSpecification
e.g. Automobile Requires Brakes</Description>
    <AttributeProperty isSynthetic='true' name='useCode' originalName='useCode' assignable='true' index='0'>
      <Description>A code indicating the use of a feature on a manufactured item (e.g. optional, required).</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.SpecificationUseCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='FeatureSpecificationDescribesRelationFromManufacturedItemSpecification' originalName='FeatureSpecification Describes Relation From ManufacturedItemSpecification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='FeatureSpecificationForFeatureSpecificationDescribesRelationFromManufacturedItemSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='FeatureSpecificationDescribesRelationToManufacturedItemSpecification' originalName='FeatureSpecification Describes Relation To ManufacturedItemSpecification' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='FeatureSpecificationForFeatureSpecificationDescribesRelationToManufacturedItemSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.LandVehicleSpecification' originalName='LandVehicleSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.VehicleSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of road vehicles. Manufacturers normally provide this information about their own products, though it may also be available from third parties. It is used as input for the rating process.</Description>
    <AttributeProperty isSynthetic='true' name='airbagsLocationCode' originalName='airbagsLocationCode' assignable='true' index='5'>
      <Description>Identifies the location of safety airbags fitted in the land vehicle.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AirbagsLocationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='axleCount' originalName='axleCount' assignable='true' index='8'>
      <Description>The number of axles on the specified land vehicle model.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='bodyStyleCode' originalName='bodyStyleCode' assignable='true' index='7'>
      <Description>Indicates the body type of this vehicle</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.VehicleBodyTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='cylinderCount' originalName='cylinderCount' assignable='true' index='0'>
      <Description>The number of cylinders in the engine for this make and model.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='drivingWheelCount' originalName='drivingWheelCount' assignable='true' index='1'>
      <Description>The number of wheels directly propelled by the engine.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='seatBeltLocationCode' originalName='seatBeltLocationCode' assignable='true' index='2'>
      <Description>The location of seat belts fitted in this land vehicle model.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.SeatbeltsLocationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='seatBeltTypeCode' originalName='seatBeltTypeCode' assignable='true' index='3'>
      <Description>It identifies the type of seat belt available in the vehicle.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.SeatBeltTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='transmissionTypeCode' originalName='transmissionTypeCode' assignable='true' index='4'>
      <Description>The type of transmission used in this Land Vehicle Model.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.TransmissionTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleCategoryCode' originalName='vehicleCategoryCode' assignable='true' index='6'>
      <Description>It indicates the performance level of the vehicle</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.VehiclePerformanceCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.ManufacturedPartSpecification' originalName='ManufacturedPartSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of a manufactured item part.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.VehicleSpecification' originalName='VehicleSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of a vehicle.</Description>
    <AttributeProperty isSynthetic='true' name='antiqueVehicleIndicator' originalName='antiqueVehicleIndicator' assignable='true' index='4'>
      <Description>Indicates whether the vehicle's made from this vehicle model are classified as antique.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='classicVehicleIndicator' originalName='classicVehicleIndicator' assignable='true' index='5'>
      <Description>Indicates whether vehicle's made from this vehicle model are classified as classic.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='displacementSize' originalName='displacementSize' assignable='true' index='0'>
      <Description>Indication of the displacement provoked by a vehicle when in motion. For road vehicles, it is expressed as the measurement of the surface of the frontal view of the road vehicle. For ships, it is expressed as the weight of the ship's hull, machinery, equipment and spares, or the volume of water displaced.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='highPerformanceIndicator' originalName='highPerformanceIndicator' assignable='true' index='1'>
      <Description>Indicates whether the vehicle model is considered to be a high performance vehicle.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='highTheftIndicator' originalName='highTheftIndicator' assignable='true' index='2'>
      <Description>Indicates whether the vehicle model is considered to be a high theft risk.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='passengerCapacityCount' originalName='passengerCapacityCount' assignable='true' index='3'>
      <Description>The maximum number of passengers that this vehicle model is allowed to convey.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='serialNumberEtchingIndicator' originalName='serialNumberEtchingIndicator' assignable='true' index='6'>
      <Description>Indicates whether the vehicle model has the characteristic of having the vehicle identification number engraved onto various parts of its components.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='carryingWeightMeasurement' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossWeightMeasurement' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='interiorSizeMeasurement' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='specifiedengineforvehicle' originalName='specified engine for vehicle ' assignable='true' index='10' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.EngineSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='VehicleSpecificationForspecifiedengineforvehicle' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.WatercraftSpecification' originalName='WatercraftSpecification' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.VehicleSpecification' isAbstract='false'>
    <Description>The specification of the characteristics of a watercraft.</Description>
    <AttributeProperty isSynthetic='true' name='constructionMaterialCode' originalName='constructionMaterialCode' assignable='true' index='1'>
      <Description>Material in which the watercraft was built.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WatercraftMaterialTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='hullMaterialCode' originalName='hullMaterialCode' assignable='true' index='0'>
      <Description>It describes the type of hull material of the watercraft.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WatercraftMaterialTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='watercraftTypeCode' originalName='watercraftTypeCode' assignable='true' index='2'>
      <Description>Type of watercraft</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WaterUnitTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='watersNavigatedCode' originalName='watersNavigatedCode' assignable='true' index='3'>
      <Description>It indicates where the watercraft is predominantly used.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WatersNavigatedCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='baleCapacityMeasurement' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='beamMeasurement' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='draftMeasurement' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='loadedDisplacementMeasurement' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='netMeasurement' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.AgriculturalEquipment' originalName='AgriculturalEquipment' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>This concept represents specific agricultural equipment typically listed on an Commercial Auto or Agricultural Insurance policy schedule. These include tools used in part of agricultural business. This does not include complex machinery or construction vehicles.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Computer' originalName='Computer' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>This concept represents a single instance of a computer. This could be a personal laptop computer or a corporate mainframe.</Description>
    <RelationshipProperty isSynthetic='true' name='computerspecification' originalName='computer specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.ComputerSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ComputerForcomputerspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.ComputerMonitor' originalName='ComputerMonitor' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>This concept represents a single instance of a computer monitor. This could be a personal computer flat panel LCD monitor or a plasma based HD monitor.</Description>
    <RelationshipProperty isSynthetic='true' name='computermonitorspecification' originalName='computer monitor specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.ComputerMonitorSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ComputerMonitorForcomputermonitorspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.ConstructionEquipment' originalName='ConstructionEquipment' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>This concept represents specific equipment typically listed on an Inland Marine schedule. These include tools used in part of construction. This does not include complex machinery or construction vehicles.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Drug' originalName='Drug' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>A substance used in the diagnosis, treatment, or prevention of a disease or as a component of a medication.</Description>
    <AttributeProperty isSynthetic='true' name='prescriptionOnlyIndicator' originalName='prescriptionOnlyIndicator' assignable='true' index='0'>
      <Description>Indicates whether, by law, the drug cannot be dispensed without a prescription.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='drugmodelspecification' originalName='drug model specification' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.DrugSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='DrugFordrugmodelspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='DrugRegistrationRegistersDrug' originalName='DrugRegistration Registers Drug' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.DrugRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='DrugForDrugRegistrationRegistersDrug' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Engine' originalName='Engine' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>The Engine concept represents the (optional) motorization of a vehicle. Each vehicle can contain one or more engines.</Description>
    <AttributeProperty isSynthetic='true' name='engineIdentifier' originalName='engineIdentifier' assignable='true' index='0'>
      <Description>If the vehicle has more than one engine, this attribute is used to specify the unique number assigned to each engine.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='enginespecification' originalName='engine specification' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.EngineSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='EngineForenginespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.HouseholdItem' originalName='HouseholdItem' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>An individual item or specific grouping of very similar items typically insured under a household contents insurance policy and sometimes listed separately on a policy schedule.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Machinery' originalName='Machinery' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>TA representation for any kind of mechanical item, such as machines in a manufacturing facility or machines in a garage. Note that this is not an abstraction for tools, only machines (i.e., machines have some kind of motor or automation).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.ManufacturedItemPart' originalName='ManufacturedItemPart' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='false'>
    <Description>Any feature that may initially be part of a manufactured item or be added afterwards, which may influence the insurance premium.</Description>
    <RelationshipProperty isSynthetic='true' name='manufacturedpartspecification' originalName='manufactured part specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.ManufacturedPartSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ManufacturedItemPartFormanufacturedpartspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Vehicle' originalName='Vehicle' superclassName='org.acord.aim.PhysicalObject.ManufacturedItem' isAbstract='true'>
    <Description>This concept gives particular features of a vehicle. This is the generalization of all types of vehicles.

The "motor vehicle" term is commonly used in vehicle registration and financial responsibility statutes. It is generally defined to mean a device capable of transporting people or property which is self-propelled by mechanical or electrical power. However, state "motor vehicle" definitions usually contain a list of exceptions of the kinds of vehicles that do not qualify, e.g., vehicles that are not designed for use on public roads, vehicles propelled solely by human power, bicycles, motorized wheelchairs or other electric personal assisting mobility devices, farm tractors, implements of husbandry, motorized bicycles, mopeds, snowmobiles, all-terrain vehicles, motor scooters, and vehicles running only upon rails or tracks. Each state's "motor vehicle" definition must be examined closely to see what types of vehicles qualify and what types do not. Any non-exempt vehicle that qualifies under a state statutory definition of a "motor vehicle" may be subject to that state’s licensing, registration and/or financial responsibility laws.</Description>
    <RelationshipProperty isSynthetic='true' name='engineusage' originalName='engine usage' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Engine</TypeName>
      <RelationshipProperty isSynthetic='true' name='VehicleForengineusage' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='vehicleantitheftequipment' originalName='vehicle anti theft equipment' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.VehicleAntiTheftEquipment</TypeName>
      <RelationshipProperty isSynthetic='true' name='VehicleForvehicleantitheftequipment' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='VehicleRegistrationRegistersVehicle' originalName='VehicleRegistration Registers Vehicle' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.VehicleRegistration</TypeName>
      <RelationshipProperty isSynthetic='true' name='VehicleForVehicleRegistrationRegistersVehicle' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.VehicleAntiTheftEquipment' originalName='VehicleAntiTheftEquipment' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.ManufacturedItemPart' isAbstract='false'>
    <Description>This concept gives details on anti-theft equipments for a Vehicle.</Description>
    <AttributeProperty isSynthetic='true' name='antiTheftProductCode' originalName='antiTheftProductCode' assignable='true' index='1'>
      <Description>It identifies the type of anti-theft device or product.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AntiTheftProductCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleAntiTheftDeviceCode' originalName='vehicleAntiTheftDeviceCode' assignable='true' index='0'>
      <Description>It identifies the principal anti-theft device found on the vehicle.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.AutoAntiTheftDeviceCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='installationDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.Creator' originalName='Creator' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleOnPhysicalObject' isAbstract='false'>
    <Description>This concept represents a party's role as the creator of a physical object.

e.g. manufacturer, craftsman, etc.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.Lessor' originalName='Lessor' superclassName='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.PhysicalObjectUser' isAbstract='false'>
    <Description>This concept represents a party's role as the lessor of a physical object.

e.g. the party that grants a lease</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.Occupant' originalName='Occupant' superclassName='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.PhysicalObjectUser' isAbstract='false'>
    <Description>This concept represents a party's role as the occupant of a physical object.

e.g. the resident of an dwelling, the tenant of an apartment</Description>
    <AttributeProperty isSynthetic='true' name='smokerIndicator' originalName='smokerIndicator' assignable='true' index='0'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='movingInDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.Owner' originalName='Owner' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleOnPhysicalObject' isAbstract='false'>
    <Description>This concept represents a party's role as the owner of a physical object.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.PhysicalObjectUser' originalName='PhysicalObjectUser' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleOnPhysicalObject' isAbstract='false'>
    <Description>This concept represents a party's role as the user of a physical object.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.VehicleUser' originalName='VehicleUser' superclassName='org.acord.aim.PhysicalObject.PartyRoleOnPhysicalObjectSubtypes.PhysicalObjectUser' isAbstract='false'>
    <Description>This concept represents the party role using a vehicle.

NOTE: The "vehicle user" party role has relevance to the party role "driver"; however, the party role "driver" involves a relationship with an agreement, regardless of vehicles. The party role "vehicle user" is always associated with a corresponding vehicle.</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AirbagsLocationCodeList' originalName='AirbagsLocationCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of land vehicles and of land vehicle models according to the location of their airbags.</Description>
    <Enumerand isSynthetic='true' name='AllSeats' generator='All Seats'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'All'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Driver' generator='Driver'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'Driver'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DriverAndFrontPassenger' generator='Driver And Front Passenger'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'Driver and front passenger'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'None'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FrontAndRear' generator='Front And Rear'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'Side or rear'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RearSeatsOnly' generator='Rear Seats Only'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'Rear seats only'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FrontOnly' generator='Front Only'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'Front only'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SideOrRear' generator='Side Or Rear'>
      <Description>Identifies a road vehicle or road vehicle model with airbags location 'Side or rear'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AircraftTypeCodeList' originalName='AircraftTypeCodeList' restricts='java.lang.String'>
    <Description>Aircraft Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesJetSingleEngine' generator='General Types - Jet Single Engine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TypesspecifictomilitaryuseMediumorheavybomber' generator='Types specific to military use - Medium or heavy bomber'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TypesspecifictomilitaryuseTransportortanker' generator='Types specific to military use - Transport or tanker'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TypesspecifictomilitaryuseReconnaissanceorpatrol' generator='Types specific to military use - Reconnaissance or patrol'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Experimental' generator='Experimental'>
      <Description>Flying an experimental aircraft is one of the questions on the aviation supplemental form</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SelfAssembled' generator='Self Assembled'>
      <Description>Flying an aircraft that is built or assembled by the proposed insured is one of the questions on the aviation supplemental form</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MilitaryObservation' generator='Military Observation'>
      <Description>Flying in a military observation aircraft by the proposed insured is one of the questions on the aviation supplemental form</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Trainer' generator='Trainer'>
      <Description>Trainer Aircraft:  Flying in a trainer aircraft by the proposed insured is one of the questions on some aviation supplemental forms for life insurance

Flying in a trainer aircraft by the proposed insured is one of the questions on some aviation supplemental forms for life insurance</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Attackgeneral' generator='Attack (general)'>
      <Description>Categorize all attack aircraft into a general category  - not specific.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bombergeneral' generator='Bomber (general)'>
      <Description>Categorize all bomber aircraft into a general category - not specific.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Reconnaissanceonly' generator='Reconnaissance only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesJetMultiengine' generator='General Types - Jet Multi-engine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Transportonly' generator='Transport only'>
      <Description>Transport aircraft specifically</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fightergeneral' generator='Fighter (general)'>
      <Description>Categorize all fighter aircraft into a general category - not specific.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Supersonicbombers' generator='Supersonic bombers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Subsonicbombers' generator='Subsonic bombers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Interceptors' generator='Interceptors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirMobilityCommandaircraftotherthantankers' generator='Air Mobility Command aircraft other than tankers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Spotting' generator='Spotting'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TacticalSupportofCombatpersonnel' generator='Tactical Support of Combat personnel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesPropellerSingleEngine' generator='General Types - Propeller Single Engine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesPropellerMultiengine' generator='General Types - Propeller Multi-engine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesHelicopter' generator='General Types - Helicopter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesGlider' generator='General Types - Glider'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralTypesBiPlane' generator='General Types - Bi-Plane'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TypesspecifictomilitaryuseLandbasedfighterorattackbomber' generator='Types specific to military use - Land based fighter or attack bomber'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TypesspecifictomilitaryuseCarrierbasedfighterorattackbomber' generator='Types specific to military use - Carrier based fighter or attack bomber'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AlarmTypeCodeList' originalName='AlarmTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structures according to their alarm.</Description>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CentralStationCallDialing' generator='Central Station Call Dialing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StandAloneAudible' generator='Stand Alone Audible'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AnimalCategoryCodeList' originalName='AnimalCategoryCodeList' restricts='java.lang.String'>
    <Description>It qualifies the category of an animal.</Description>
    <Enumerand isSynthetic='true' name='Domesticanimal' generator='Domestic animal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Semidomesticanimal' generator='Semi domestic animal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Captivewildanimal' generator='Captive wild animal'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AnimalTypeCodeList' originalName='AnimalTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of animal</Description>
    <Enumerand isSynthetic='true' name='Cattle' generator='Cattle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dog' generator='Dog'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Horse' generator='Horse'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.AviationTypeCodeList' originalName='AviationTypeCodeList' restricts='java.lang.String'>
    <Description>Aviation Type</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Private' generator='Private'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Commercial' generator='Commercial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Military' generator='Military'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.BulkCargoTypeCodeList' originalName='BulkCargoTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of bulk materials according to their cargo type.</Description>
    <Enumerand isSynthetic='true' name='DryBulkCargo' generator='Dry Bulk Cargo'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LiquidCargo' generator='Liquid Cargo'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionMaterialCodeList' originalName='ConstructionMaterialCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of construction of the object to which it applies.</Description>
    <Enumerand isSynthetic='true' name='AsbestosandStucco' generator='Asbestos and Stucco'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Aluminum' generator='Aluminum'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Asphalt' generator='Asphalt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConcreteBlock' generator='Concrete Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BarnPlank' generator='Barn Plank'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodBasketWeave' generator='Wood Basket Weave'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BeveledWoodClapboards' generator='Beveled Wood/Clapboards'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BlockDecorativePainted' generator='Block Decorative Painted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BlockPainted' generator='Block Painted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Board' generator='Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoardandBatten' generator='Board and Batten'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Brick' generator='Brick'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrickandBlock' generator='Brick and Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrickandBlockCustom' generator='Brick and Block Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonSolidBrick' generator='Common (Solid) Brick'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FaceBrick' generator='Face Brick'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolidBrick' generator='Solid Brick'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolidBrickCustom' generator='Solid Brick Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrickVeneer' generator='Brick Veneer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrickVeneerCustom' generator='Brick Veneer Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolidBrownstone' generator='Solid Brownstone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CastIron' generator='Cast Iron'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CategoryI' generator='Category I'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CategoryII' generator='Category II'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CategoryIII' generator='Category III'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CementConcreteBlock' generator='Cement/Concrete Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CedarShakes' generator='Cedar Shakes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CementFiber' generator='Cement Fiber'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChainLink' generator='Chain Link'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Clapboard' generator='Clapboard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClapboardRedwood' generator='Clapboard/Redwood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PouredConcrete' generator='Poured Concrete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EarthShelter' generator='Earth Shelter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EIFSonConcreteBlock' generator='EIFS on Concrete Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EIFSonStuds' generator='EIFS on Studs'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electric' generator='Electric'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Frame' generator='Frame'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Adobe' generator='Adobe'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreenhouseWall' generator='Greenhouse Wall'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hedge' generator='Hedge'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HollowTile' generator='Hollow Tile'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlasticVinylSiding' generator='Plastic/Vinyl Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='JoistedMasonry' generator='Joisted Masonry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Log' generator='Log'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LogSiding' generator='Log Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LogCustomCedar' generator='Log Custom Cedar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ModifiedFireResistive' generator='Modified Fire Resistive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MillHeavyTimberJoistedMasonry' generator='Mill (Heavy Timber Joisted Masonry)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MineralFiber' generator='Mineral Fiber'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MasonryNonCombustible' generator='Masonry Non-Combustible'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Masonry' generator='Masonry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalAluminumSiding' generator='Metal/Aluminum Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonCombustible' generator='Non-Combustible'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreFabricated' generator='Pre-Fabricated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlainConcrete' generator='Plain Concrete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PlateSteel' generator='Plate Steel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plywood' generator='Plywood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PaintedMasonry' generator='Painted Masonry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pole' generator='Pole'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrecastConcrete' generator='Precast Concrete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreEngineeredMetal' generator='PreEngineered Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrecastStone' generator='Precast Stone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProtectedSteelFrame' generator='Protected Steel Frame'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PVC' generator='PVC'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireResistiveSuperior' generator='Fire Resistive/Superior'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rail' generator='Rail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReinforcedConcrete' generator='Reinforced Concrete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalPlasticSiding' generator='Metal/Plastic Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SheetMetal' generator='Sheet Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SlumpBlock' generator='Slump Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SuperiorMasonryNonCombustive' generator='Superior Masonry Non-Combustive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SuperiorNonCombustible' generator='Superior Non Combustible'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SplitBlock' generator='Split Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SplitRail' generator='Split Rail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolidStone' generator='Solid Stone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Steel' generator='Steel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SteelFrame' generator='Steel Frame'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SteelSiding' generator='Steel Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GraniteStone' generator='Granite/Stone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StoneandBlock' generator='Stone and Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StoneandBlockCustom' generator='Stone and Block Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArtificialCulturedStone' generator='Artificial (Cultured) Stone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NativeStone' generator='Native Stone'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolidStoneCustom' generator='Solid Stone Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StoneVeneer' generator='Stone Veneer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StoneVeneerCustom' generator='Stone Veneer Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StuccoonConcreteBlock' generator='Stucco on Concrete Block'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StuccoonFrame' generator='Stucco on Frame'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StuccoonMasonry' generator='Stucco on Masonry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspension' generator='Suspension'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ManufacturedHomeMobileHomeTrailer' generator='Manufactured Home / Mobile Home / Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='T111Siding' generator='T111 Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TempHardboard' generator='Temp. Hardboard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MasonryVeneer' generator='Masonry Veneer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Vinyl' generator='Vinyl'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VictorianScallopedShakes' generator='Victorian Scalloped Shakes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WindowWall' generator='Window Wall'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BarbedWire' generator='Barbed Wire'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodandorPlasterBoard' generator='Wood and/or Plaster Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodSiding' generator='Wood Siding'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WovenWirewithoutBarbedWire' generator='Woven Wire without Barbed Wire'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WovenWirewithBarbedWire' generator='Woven Wire with Barbed Wire'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodShakes' generator='Wood Shakes'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionQualityCodeList' originalName='ConstructionQualityCodeList' restricts='java.lang.String'>
    <Description>It indicates the quality of the building, part of the building or an item.</Description>
    <Enumerand isSynthetic='true' name='Basic' generator='Basic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CustomLuxury' generator='Custom/Luxury'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Custom' generator='Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Designer' generator='Designer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Economy' generator='Economy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EconomyStandard' generator='Economy/Standard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Luxury' generator='Luxury'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Minimum' generator='Minimum'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AverageStandardBuildersGrade' generator='Average/Standard Builders Grade'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StandardCustom' generator='Standard/Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Superior' generator='Superior'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionStatusCodeList' originalName='ConstructionStatusCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structures according to their construction status.</Description>
    <Enumerand isSynthetic='true' name='NotYetStarted' generator='Not Yet Started'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Completed' generator='Completed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderConstruction' generator='Under Construction'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderRenovation' generator='Under Renovation'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.CropManagementCodeList' originalName='CropManagementCodeList' restricts='java.lang.String'>
    <Description>A code list indicating types of crop management.</Description>
    <Enumerand isSynthetic='true' name='IntensiveFarming' generator='Intensive Farming'>
      <Description>Intensive farming - also known as intensive agriculture is an agricultural production system characterized by the high inputs of capital, labor, or heavy usage of technologies such as pesticides and chemical fertilizers relative to land area.

SOURCE: http://en.wikipedia.org/wiki/Intensive_farming</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OrganicFarming' generator='Organic Farming'>
      <Description>Organic farming - the form of agriculture that relies on techniques such as crop rotation, green manure, compost and biological pest control to maintain soil productivity and control pests on a farm.

SOURCE: http://en.wikipedia.org/wiki/Organic_farming</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.DrugEquivalenceTypeCodeList' originalName='DrugEquivalenceTypeCodeList' restricts='java.lang.String'>
    <Description>Possible types of equivalence for a drug equivalence relationship.</Description>
    <Enumerand isSynthetic='true' name='ChemicalEquivalent' generator='Chemical Equivalent'>
      <Description>Identifies a drug equivalence of type 'chemical equivalent'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GenericEquivalent' generator='Generic Equivalent'>
      <Description>Identifies a drug equivalence of type 'generic equivalent'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TherapeuticAlternative' generator='Therapeutic Alternative'>
      <Description>Identifies a drug equivalence of type 'therapeutic alternative'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TherapeuticEquivalent' generator='Therapeutic Equivalent'>
      <Description>Identifies a drug equivalence of type 'therapeutic equivalent'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.DwellingStyleCodeList' originalName='DwellingStyleCodeList' restricts='java.lang.String'>
    <Description>It identifies the style of the dwelling.</Description>
    <Enumerand isSynthetic='true' name='OneandThreeQuarterStories' generator='One and Three Quarter Stories'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TwoandThreeQuarterStories' generator='Two and Three Quarter Stories'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ThreeandThreeQuarterStories' generator='Three and Three Quarter Stories'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ThreeandOneHalfStories' generator='Three and One Half Stories'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BackSplit' generator='Back Split'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bungalow' generator='Bungalow'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CapeCod' generator='Cape Cod'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Colonial' generator='Colonial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Contemporary' generator='Contemporary'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cottage' generator='Cottage'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dome' generator='Dome'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EarthHome' generator='Earth Home'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Envelope' generator='Envelope'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FederalColonial' generator='Federal Colonial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Log' generator='Log'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mediterranean' generator='Mediterranean'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OrnateVictorian' generator='Ornate Victorian'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='QueenAnne' generator='Queen Anne'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RaisedRanch' generator='Raised Ranch'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rambler' generator='Rambler'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RowHouseCenterUnit' generator='Row House Center Unit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RowHouseEndUnit' generator='Row House End Unit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SplitFoyer' generator='Split Foyer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SplitLevel' generator='Split Level'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SteelFrame' generator='Steel Frame'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubStandard' generator='Sub Standard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SouthwestAdobe' generator='Southwest Adobe'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TownHouseCenterUnit' generator='Town House Center Unit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TownHouseEndUnit' generator='Town House End Unit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TimberFrame' generator='Timber Frame'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Victorian' generator='Victorian'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.EngineTypeCodeList' originalName='EngineTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of vehicle models according to their engine type.</Description>
    <Enumerand isSynthetic='true' name='SolarEnergy' generator='Solar Energy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electric' generator='Electric'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Steam' generator='Steam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gasoline' generator='Gasoline'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Diesel' generator='Diesel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lpg' generator='Lpg'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wind' generator='Wind'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.FuelInjectionTypeCodeList' originalName='FuelInjectionTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of vehicle models according to their fuel injection types.</Description>
    <Enumerand isSynthetic='true' name='Carburation' generator='Carburation'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DirectInjection' generator='Direct Injection'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.FuelTypeCodeList' originalName='FuelTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of VehicleModels according to their fuel type.</Description>
    <Enumerand isSynthetic='true' name='DieselFuel' generator='Diesel Fuel'>
      <Description>Identifies a VehicleModel with fuel type 'D (Diesel)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
      <Description>Identifies a VehicleModel with fuel type 'O (Other)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Petrol' generator='Petrol'>
      <Description>Identifies a VehicleModel with fuel type 'P (Petrol)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lpg' generator='Lpg'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ethanol' generator='Ethanol'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Biodiesel' generator='Biodiesel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DieselOil' generator='Diesel Oil'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Coal' generator='Coal'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.GarageTypeCodeList' originalName='GarageTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating garage types.</Description>
    <Enumerand isSynthetic='true' name='Attached' generator='Attached'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Basement' generator='Basement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuiltIn' generator='Built-In'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Carport' generator='Carport'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.GeneralShapeCodeList' originalName='GeneralShapeCodeList' restricts='java.lang.String'>
    <Description>It indicates the general physical shape of the building.</Description>
    <Enumerand isSynthetic='true' name='LShaped' generator='L-Shaped'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RectangleBox' generator='Rectangle/Box'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SlightlyIrregular' generator='Slightly Irregular'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TShaped' generator='T-Shaped'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unique' generator='Unique'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UShaped' generator='U-Shaped'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VeryIrregular' generator='Very Irregular'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VeryUnique' generator='Very Unique'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.GlassTypeCodeList' originalName='GlassTypeCodeList' restricts='java.lang.String'>
    <Description>It indicates the type of glass used for the windows of a dwelling.</Description>
    <Enumerand isSynthetic='true' name='Annealedglass' generator='Annealed glass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Laminatedglass' generator='Laminated glass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Otherglass' generator='Other glass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Temperedglass' generator='Tempered glass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.HeatingTypeCodeList' originalName='HeatingTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structures according to their heating type.</Description>
    <Enumerand isSynthetic='true' name='CentrallySuppliedGas' generator='Centrally Supplied Gas'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Electricity' generator='Electricity'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Solar' generator='Solar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherGas' generator='Other Gas'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SolidFuel' generator='Solid Fuel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PropaneGas' generator='Propane Gas'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Oil' generator='Oil'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wood' generator='Wood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Coal' generator='Coal'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.HeatingUnitTypeCodeList' originalName='HeatingUnitTypeCodeList' restricts='java.lang.String'>
    <Description>It indicates the type of the heating unit.</Description>
    <Enumerand isSynthetic='true' name='AcornStove' generator='Acorn Stove'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BarrelType' generator='Barrel Type'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BoxStove' generator='Box Stove'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CookStove' generator='Cook Stove'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricBaseboard' generator='Electric Baseboard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fireplace' generator='Fireplace'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireplaceZeroClearance' generator='Fireplace, Zero Clearance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireplaceInsert' generator='Fireplace Insert'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireplacewithDoors' generator='Fireplace with Doors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ForcedAirFurnace' generator='Forced Air Furnace'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FranklinStove' generator='Franklin Stove'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireplaceSolidMasonry' generator='Fireplace, Solid Masonry'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HeatPump' generator='Heat Pump'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotWaterCentralBoiler' generator='Hot Water Central (Boiler)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotWaterBaseboard' generator='Hot Water Baseboard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PotBellyWithDoors' generator='Pot Belly With Doors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PelletStove' generator='Pellet Stove'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PotBellyWithoutDoors' generator='Pot Belly Without Doors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadiantCeiling' generator='Radiant Ceiling'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RadiantFloor' generator='Radiant Floor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpaceHeater' generator='Space Heater'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WallFurnace' generator='Wall Furnace'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodFurnaceAddon' generator='Wood Furnace, Add-on'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodStoveAirtight' generator='Wood Stove, Airtight'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodFurnace' generator='Wood Furnace'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodStoveNotAirtight' generator='Wood Stove, Not Airtight'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodOilCombination' generator='Wood/Oil Combination'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.IgnitionTypeCodeList' originalName='IgnitionTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of vehicle models according to their ignition.</Description>
    <Enumerand isSynthetic='true' name='ElectronicallyControlledSparkIgnition' generator='Electronically Controlled Spark Ignition'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HeatIgnition' generator='Heat Ignition'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MechanicallyControlledSparkIgnition' generator='Mechanically Controlled Spark Ignition'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.InsulationTypeCodeList' originalName='InsulationTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of insulation.</Description>
    <Enumerand isSynthetic='true' name='Cellulose' generator='Cellulose'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Exposed' generator='Exposed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fiberboard' generator='Fiberboard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fiberglass' generator='Fiberglass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Foam' generator='Foam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Paper' generator='Paper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Polyurethane' generator='Polyurethane'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RigidFoam' generator='Rigid Foam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SprayedPolyurethane' generator='Sprayed Polyurethane'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Straw' generator='Straw'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Styrene' generator='Styrene'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ureaformaldehyde' generator='Urea formaldehyde'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.InteriorBuiltInsCodeList' originalName='InteriorBuiltInsCodeList' restricts='java.lang.String'>
    <Description>It indicates the type of built in appliances, structures, etc. used in the dwelling.</Description>
    <Enumerand isSynthetic='true' name='AirConditioner' generator='Air Conditioner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirExchanger' generator='Air Exchanger'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirHumidifier' generator='Air Humidifier'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ApplianceCenter' generator='Appliance Center'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Aquarium' generator='Aquarium'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BathroomHeater' generator='Bathroom Heater'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuiltinHardwoodHutch' generator='Built-in Hardwood Hutch'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Chandelier' generator='Chandelier'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Cooktop' generator='Cooktop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dehumidifier' generator='Dehumidifier'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dishwasher' generator='Dishwasher'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dryer' generator='Dryer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricAirCleaner' generator='Electric Air Cleaner'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Elevator' generator='Elevator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EmergencyGenerator' generator='Emergency Generator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HomeEntertainmentCenter' generator='Home Entertainment Center'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CeilingFan' generator='Ceiling Fan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WholeHouseFan' generator='Whole House Fan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FrenchDoors' generator='French Doors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Freezer' generator='Freezer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Refrigerator' generator='Refrigerator'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GarbageDisposal' generator='Garbage Disposal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GarageDoorOpener' generator='Garage Door Opener'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotTub' generator='Hot Tub'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HotTubnotjetted' generator='Hot Tub (not jetted)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IndoorBarbecue' generator='Indoor Barbecue'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Microwave' generator='Microwave'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Oven' generator='Oven'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RangeHoodStainlessorCopper' generator='Range Hood, Stainless or Copper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RangeHoodStandard' generator='Range Hood Standard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RestaurantRangewithHood' generator='Restaurant Range with Hood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FixedRoofWindow' generator='Fixed Roof Window'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WallorFloorSafe' generator='Wall or Floor Safe'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SatelliteReceiverDSS' generator='Satellite Receiver, DSS'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sauna' generator='Sauna'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SmokeAlarm' generator='Smoke Alarm'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SodaFountain' generator='Soda Fountain'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialtyDoors' generator='Specialty Doors'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpiralStaircaseMetal' generator='Spiral Staircase - Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpiralStaircaseWood' generator='Spiral Staircase - Wood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StairLift' generator='Stair Lift'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrashCompactor' generator='Trash Compactor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VanityCustom' generator='Vanity Custom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VideoDoorAnsweringSystem' generator='Video Door Answering System'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Washer' generator='Washer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InstantHotWaterDispenser' generator='Instant Hot Water Dispenser'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterPurificationSystem' generator='Water Purification System'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WaterSoftener' generator='Water Softener'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DomesticSolarHotWater' generator='Domestic Solar Hot Water'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodBurningStoveZeroClearancePrefab' generator='Wood Burning Stove - Zero Clearance, Prefab'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodBurningStoveFreeStanding' generator='Wood Burning Stove - Free Standing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WetBar' generator='Wet Bar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WineCellar' generator='Wine Cellar'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.MobileHomeCookingLocationCodeList' originalName='MobileHomeCookingLocationCodeList' restricts='java.lang.String'>
    <Description>This list defines locations for cooking in a mobile home.</Description>
    <Enumerand isSynthetic='true' name='End' generator='End'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Middle' generator='Middle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.PlumbingMaterialCodeList' originalName='PlumbingMaterialCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structures according to their plumbing material.</Description>
    <Enumerand isSynthetic='true' name='Plastic' generator='Plastic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Lead' generator='Lead'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Copper' generator='Copper'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofCoverageAttachmentCodeList' originalName='RoofCoverageAttachmentCodeList' restricts='java.lang.String'>
    <Description>It indicates the type of attachment used to secure the roof cover material to the roof deck of the dwelling.</Description>
    <Enumerand isSynthetic='true' name='AdhesiveEpoxy' generator='Adhesive / Epoxy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mortar' generator='Mortar'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nail' generator='Nail'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Screw' generator='Screw'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Staple' generator='Staple'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofDeckAttachmentCodeList' originalName='RoofDeckAttachmentCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of attachment used to secure the roof deck to the framing supports of the dwelling.</Description>
    <Enumerand isSynthetic='true' name='AdhesiveEpoxy' generator='Adhesive / Epoxy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bolts' generator='Bolts'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nails' generator='Nails'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Screws' generator='Screws'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StructurallyConnected' generator='Structurally Connected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofDeckMaterialCodeList' originalName='RoofDeckMaterialCodeList' restricts='java.lang.String'>
    <Description>It identifies the material used to construct a roof deck of a dwelling.</Description>
    <Enumerand isSynthetic='true' name='PrecastConcreteSlab' generator='Precast Concrete Slab'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LightMetal' generator='Light Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalDeckwithConcrete' generator='Metal Deck with Concrete'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MetalDeckwithInsulationBoard' generator='Metal Deck with Insulation Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OrientedStrandBoard' generator='Oriented Strand Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ParticleBoard' generator='Particle Board'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodPlanks' generator='Wood Planks'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plywood' generator='Plywood'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ReinforcedConcreteSlab' generator='Reinforced Concrete Slab'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofGeometryTypeCodeList' originalName='RoofGeometryTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies the architecture/geometry of the dwelling's roof.</Description>
    <Enumerand isSynthetic='true' name='Complex' generator='Complex'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Flat' generator='Flat'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GableEndwithoutBracing' generator='Gable End without Bracing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GableEndwithBracing' generator='Gable End with Bracing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gambrel' generator='Gambrel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hip' generator='Hip'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Mansard' generator='Mansard'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pyramid' generator='Pyramid'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Shed' generator='Shed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Stepped' generator='Stepped'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofMaterialTypeCodeList' originalName='RoofMaterialTypeCodeList' restricts='java.lang.String'>
    <Description>it identifies the type of roofing material used on the building.</Description>
    <Enumerand isSynthetic='true' name='AluminumShingles' generator='Aluminum Shingles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ArchitecturalShingles' generator='Architectural Shingles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Asbestos' generator='Asbestos'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AsphaltShingle' generator='Asphalt Shingle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BuiltUpwithoutGravel' generator='Built Up without Gravel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CedarShakes' generator='Cedar Shakes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CedarShingles' generator='Cedar Shingles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClayTileorSlate' generator='Clay Tile or Slate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CompositionFiberglassAsphaltetc' generator='Composition (Fiberglass, Asphalt, etc.)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConcreteTile' generator='Concrete Tile'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConcreteNotTile' generator='Concrete (Not Tile)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Copper' generator='Copper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fiberglass' generator='Fiberglass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Foam' generator='Foam'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Gravel' generator='Gravel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LightMetalPanel' generator='Light Metal Panel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SinglePlyMembraneBallasted' generator='Single Ply Membrane Ballasted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Metal' generator='Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MineralFiber' generator='Mineral Fiber'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MissionTile' generator='Mission Tile'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NewEnglandPineShingle' generator='New England Pine Shingle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Plastic' generator='Plastic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Poured' generator='Poured'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RecycledRoofingProducts' generator='Recycled Roofing Products'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rock' generator='Rock'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RolledRoofing' generator='Rolled Roofing'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RubberRoof' generator='Rubber Roof'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SeamMetal' generator='Seam Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Slate' generator='Slate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SinglePlyMembraneSystems' generator='Single Ply Membrane Systems'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpanishTile' generator='Spanish Tile'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorrugatedSteel' generator='Corrugated Steel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SteelPorcelainShingles' generator='Steel/Porcelain Shingles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TarandGravel' generator='Tar and Gravel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TarandGravelBuiltup' generator='Tar and Gravel (Built-up)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tile' generator='Tile'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tin' generator='Tin'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VictorianScallopedShake' generator='Victorian Scalloped Shake'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodFiberShingles' generator='Wood Fiber Shingles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodShakes' generator='Wood Shakes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodShingles' generator='Wood Shingles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WoodShakeShingle' generator='Wood Shake/Shingle'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofWallAttachmentCodeList' originalName='RoofWallAttachmentCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of connection used to attach the roof to the walls of a dwelling.</Description>
    <Enumerand isSynthetic='true' name='AnchorBolts' generator='Anchor Bolts'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdhesiveEpoxy' generator='Adhesive / Epoxy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GravityFriction' generator='Gravity Friction'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HurricaneTies' generator='Hurricane Ties'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Nails' generator='Nails'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Screws' generator='Screws'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StructurallyConnected' generator='Structurally Connected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.SeatbeltsLocationCodeList' originalName='SeatbeltsLocationCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of road vehicles and road vehicle models according to their seat-belts location.</Description>
    <Enumerand isSynthetic='true' name='AllSeats' generator='All Seats'>
      <Description>Identifies a road vehicle or road vehicle model with seat-belts location 'All seats'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FrontAndRear' generator='Front And Rear'>
      <Description>Identifies a road vehicle or road vehicle model with seat-belts location 'Front and rear'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FrontOnly' generator='Front Only'>
      <Description>Identifies a road vehicle or road vehicle model with seat-belts location 'Front only'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
      <Description>Identifies a road vehicle or road vehicle model with seat-belts location 'None'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RearOnly' generator='Rear Only'>
      <Description>Identifies a road vehicle or road vehicle model with seat-belts location 'Rear only'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.SeatBeltTypeCodeList' originalName='SeatBeltTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of seat belt available in the vehicle.</Description>
    <Enumerand isSynthetic='true' name='ActiveSeatBelt' generator='Active Seat Belt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PassiveBothFrontSeatBelts' generator='Passive Both Front Seat Belts'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PassiveDriverSeatBelt' generator='Passive Driver Seat Belt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SeatBeltsandorAirBagsapplicableinthestateofMAonly' generator='Seat Belts and/or Air Bags (applicable in the state of MA only)'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureComponentCodeList' originalName='StructureComponentCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the type of structure component.</Description>
    <Enumerand isSynthetic='true' name='Basement' generator='Basement'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bedroom' generator='Bedroom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FullBathroom' generator='Full Bathroom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HalfBathroom' generator='Half Bathroom'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Porch' generator='Porch'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureFeatureCodeList' originalName='StructureFeatureCodeList' restricts='java.lang.String'>
    <Description>A code list indicating structure feature types (e.g. dishwasher).</Description>
    <Enumerand isSynthetic='true' name='Dishwaher' generator='Dishwaher'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sauna' generator='Sauna'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureUsageTypeCodeList' originalName='StructureUsageTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structure's according to their usage.</Description>
    <Enumerand isSynthetic='true' name='Commercial' generator='Commercial'>
      <Description>Identifies a Structure with occupation type 'Commercial'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Industrial' generator='Industrial'>
      <Description>Identifies a Structure with occupation type 'Industrial'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Residential' generator='Residential'>
      <Description>Identifies a Structure with occupation type 'Residential'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Retail' generator='Retail'>
      <Description>Identifies a Structure with occupation type 'Retail'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.TenancyCodeList' originalName='TenancyCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Structures according to their tenancy.</Description>
    <Enumerand isSynthetic='true' name='LetOrLeased' generator='Let Or Leased'>
      <Description>Identifies a Structure with tenancy 'Let (leased)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OwnerOccupied' generator='Owner Occupied'>
      <Description>Identifies a Structure with tenancy 'Owner occupied'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SubLetOrSubLeased' generator='Sub Let Or Sub Leased'>
      <Description>Identifies a Structure with tenancy 'Sub-let (sub-leased)'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VacationRental' generator='Vacation Rental'>
      <Description>Identifies a Structure with tenancy 'Vacation rental'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rented' generator='Rented'>
      <Description>Identifies a tenancy of kind 'rented'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.TieDownCodeList' originalName='TieDownCodeList' restricts='java.lang.String'>
    <Description>A code list that identifies how the mobile home is secured.</Description>
    <Enumerand isSynthetic='true' name='ChassisOnly' generator='Chassis Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Full' generator='Full'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OverTheTopOnly' generator='Over The Top Only'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='None' generator='None'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.TransmissionTypeCodeList' originalName='TransmissionTypeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of land vehicle models according to their transmission type.</Description>
    <Enumerand isSynthetic='true' name='FourGearAutomatic' generator='Four Gear Automatic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FiveGearManual' generator='Five Gear Manual'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SixGearManual' generator='Six Gear Manual'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FourGearManual' generator='Four Gear Manual'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.VehicleBodyTypeCodeList' originalName='VehicleBodyTypeCodeList' restricts='java.lang.String'>
    <Description>it indicates the body type of this vehicle</Description>
    <Enumerand isSynthetic='true' name='TwoDoorSedan' generator='Two Door Sedan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TwoDoorHardtop' generator='Two Door Hardtop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TwoDoorHatchback' generator='Two Door Hatchback'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TwoDoorLiftback' generator='Two Door Liftback'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TwoDoorWagon' generator='Two Door Wagon'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_3DoorExtendedCabChassis' generator='3 Door Extended Cab/Chassis'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='_4DoorExtendedCabChassis' generator='4 Door Extended Cab/Chassis'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FourDoorHardtop' generator='Four Door Hardtop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FourDoorHatchback' generator='Four Door Hatchback'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FourDoorLiftback' generator='Four Door Liftback'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FourDoorWagon' generator='Four Door Wagon'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FourWheelDrive' generator='Four-Wheel Drive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FiveDoorSedan' generator='Five Door Sedan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AntiqueAuto' generator='Antique Auto'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AmphibiousAuto' generator='Amphibious Auto'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ambulance' generator='Ambulance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ambulanceemergency' generator='Ambulance (emergency)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Ambulancenonemergency' generator='Ambulance (non emergency)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportLimousine' generator='Airport Limousine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AllTerrainVehicle' generator='All Terrain Vehicle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bus' generator='Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AirportBus' generator='Airport Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ChurchBus' generator='Church Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InterCityBus' generator='Inter City Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BusesOtherwiseNotClassified' generator='Buses Otherwise Not Classified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrivatePassengerRatedfromCLMBusinessUse' generator='Private Passenger Rated from CLM, Business Use'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolBusOwnedbyPoliticalSubdivisionorSchoolDistrict' generator='School Bus Owned by Political Subdivision or School District'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SightseeingBus' generator='Sightseeing Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UrbanBus' generator='Urban Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DetachableCamperBody' generator='Detachable Camper Body'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CompactCar' generator='Compact Car'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DriverTrainingCommercial' generator='Driver Training - Commercial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommercialDrivingSchoolwithDualControls' generator='Commercial Driving School with Dual Controls'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommercialDrivingSchoolwithoutDualControls' generator='Commercial Driving School without Dual Controls'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CharterBus' generator='Charter Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ClassicAuto' generator='Classic Auto'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Convertible' generator='Convertible'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Coupe' generator='Coupe'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CamperTrailer' generator='Camper Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DuneBuggy' generator='Dune Buggy'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DumpSemiTrailer' generator='Dump Semi-Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DumpTrailer' generator='Dump Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ElectricAuto' generator='Electric Auto'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireDepartmentsnonPPT' generator='Fire Departments (non-PPT)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FireDepartmentsPPT' generator='Fire Departments (PPT)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralcombinationHearseAmbulanceEmergency' generator='Funeral (combination Hearse-Ambulance, Emergency)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralFlowerCar' generator='Funeral Flower Car'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralHearse' generator='Funeral Hearse'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralLimousine' generator='Funeral Limousine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FuneralcombinationHearseAmbulancenonEmergency' generator='Funeral (combination Hearse-Ambulance, non-Emergency)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FoldingorPopupCampers' generator='Folding or Pop-up Campers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GolfCart' generator='Golf Cart'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GoCart' generator='Go Cart'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HatchBack' generator='Hatch Back'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Hardtop' generator='Hardtop'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LawEnforcementAgencyMotorcycle' generator='Law Enforcement Agency (Motorcycle)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LawEnforcementAgencyPPT' generator='Law Enforcement Agency (PPT)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LawEnforcementAgencynonPPTnonMotorcycle' generator='Law Enforcement Agency (non-PPT, non-Motorcycle)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SuburbanorCarryAll' generator='Suburban or Carry All'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Limousine' generator='Limousine'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Motorbike' generator='Motorbike'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Motorcycle' generator='Motorcycle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotorHome' generator='Motor Home'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Minibike' generator='Minibike'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MobileHomeTrailerOther' generator='Mobile Home Trailer Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MobileHomeTrailerUnspecified' generator='Mobile Home Trailer Unspecified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Moped' generator='Moped'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MotorScooter' generator='Motor Scooter'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherMotorizedCycles' generator='Other Motorized Cycles'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OtherSchoolBus' generator='Other School Bus'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrivatePassengerAutomobileMake' generator='Private Passenger Automobile Make'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrivatePassengerRatedfromCLMPleasureUseIllinoisOnly' generator='Private Passenger Rated from CLM, Pleasure Use (Illinois Only)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrivatePassengerRatedfromCLM' generator='Private Passenger Rated from CLM'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PrivatePassengerRatedfromCLMFarm' generator='Private Passenger Rated from CLM (Farm)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PickupTruck' generator='Pickup Truck'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PickupwithCamperBody' generator='Pickup with Camper Body'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PublicVehicleNotOtherwiseClassified' generator='Public Vehicle Not Otherwise Classified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RecreationalTrailer' generator='Recreational Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RecreationalVehicle' generator='Recreational Vehicle'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportCoupe' generator='Sport Coupe'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SedanDeliveryorPanelTruck' generator='Sedan Delivery or Panel Truck'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolDriverTraining' generator='School Driver Training'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolDriverTrainingwithDualControls' generator='School Driver Training with Dual Controls'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SchoolDriverTrainingwithoutDualControls' generator='School Driver Training without Dual Controls'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sedan' generator='Sedan'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShowroomTrailer' generator='Showroom Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialorMobileEquipmentFarm' generator='Special or Mobile Equipment (Farm)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialorMobileEquipmentnonFarm' generator='Special or Mobile Equipment (non-Farm)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Snowmobile' generator='Snowmobile'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ServiceorUtilityTrailer' generator='Service or Utility Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SocialServicesAutoEmployeeOperated' generator='Social Services Auto (Employee Operated)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SocialServicesAutoallother' generator='Social Services Auto (all other)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SemiTrailer' generator='Semi-Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StationWagon' generator='Station Wagon'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Taxi' generator='Taxi'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TrailBike' generator='Trail Bike'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommercialDrivingSchoolwithDualControlsTrucksTractorsTrailers' generator='Commercial Driving School with Dual Controls (Trucks-Tractors-Trailers)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommercialDrivingSchoolwithoutDualControlsTrucksTractorsTrailers' generator='Commercial Driving School without Dual Controls (Trucks-Tractors-Trailers)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Trailer' generator='Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TransportationofAthletesandEntertainers' generator='Transportation of Athletes and Entertainers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TransportationofEmployeesallother' generator='Transportation of Employees (all other)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TransportationofEmployeesPPT' generator='Transportation of Employees (PPT)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DumpTruck' generator='Dump Truck'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Truck' generator='Truck'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TruckTractor' generator='Truck-Tractor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UtilityTrailer' generator='Utility Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Van' generator='Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EightPassengerSportVan' generator='Eight Passenger Sport Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CargoVan' generator='Cargo Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExtendedCargoVan' generator='Extended Cargo Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExtendedSportVan' generator='Extended Sport Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ExtendedWindowVan' generator='Extended Window Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiniVan' generator='Mini Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PanelVan' generator='Panel Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VanPoolsEmployerFurnished' generator='Van Pools (Employer Furnished)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VanPoolsAllOther' generator='Van Pools (All Other)'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StepVan' generator='Step Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportVan' generator='Sport Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UtilityVan' generator='Utility Van'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='VanCamper' generator='Van Camper'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='WindowVan' generator='Window Van'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.VehiclePerformanceCodeList' originalName='VehiclePerformanceCodeList' restricts='java.lang.String'>
    <Description>It indicates the performance level of the vehicle</Description>
    <Enumerand isSynthetic='true' name='Basic' generator='Basic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='High' generator='High'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Intermediate' generator='Intermediate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsPremium' generator='Sports Premium'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SportsCar' generator='Sports Car'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WatercraftMaterialTypeCodeList' originalName='WatercraftMaterialTypeCodeList' restricts='java.lang.String'>
    <Description>It describes the type of hull material of the watercraft.</Description>
    <Enumerand isSynthetic='true' name='Aluminum' generator='Aluminum'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fiberglass' generator='Fiberglass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InflatableFabric' generator='Inflatable/Fabric'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Metal' generator='Metal'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Steel' generator='Steel'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wood' generator='Wood'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WatersNavigatedCodeList' originalName='WatersNavigatedCodeList' restricts='java.lang.String'>
    <Description>It indicates where the watercraft is predominantly used.</Description>
    <Enumerand isSynthetic='true' name='Atlantic' generator='Atlantic'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AtlanticandGulfofMexico' generator='Atlantic and Gulf of Mexico'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatLakes' generator='Great Lakes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InlandWaterways' generator='Inland Waterways'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GulfofMexico' generator='Gulf of Mexico'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pacific' generator='Pacific'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rivers' generator='Rivers'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.WaterUnitTypeCodeList' originalName='WaterUnitTypeCodeList' restricts='java.lang.String'>
    <Description>It identifies the type of watercraft</Description>
    <Enumerand isSynthetic='true' name='Ski' generator='Ski'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CabinCruiser' generator='Cabin Cruiser'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='OpenCockpit' generator='Open Cockpit'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Sailboat' generator='Sailboat'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Houseboat' generator='Houseboat'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Trailer' generator='Trailer'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PersonalWatercraft' generator='Personal Watercraft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Bass' generator='Bass'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Equipment' generator='Equipment'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Motor' generator='Motor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PortableAccessories' generator='Portable Accessories'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.ElectricalDetail' originalName='ElectricalDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about the electrical of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='electricalFittingsComplianceIndicator' originalName='electricalFittingsComplianceIndicator' assignable='true' index='1'>
      <Description>Indicates whether the electrical fittings are compliant with the local regulations.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='stateOfElectricalFittings' originalName='stateOfElectricalFittings' assignable='true' index='0'>
      <Description>Describes the general state of the electrical wiring</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.GarageComponentDetail' originalName='GarageComponentDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetailSubtypes.StructureComponentDetail' isAbstract='false'>
    <Description>This concept gives additional details about a garage.</Description>
    <AttributeProperty isSynthetic='true' name='garageTypeCode' originalName='garageTypeCode' assignable='true' index='1'>
      <Description>A code indicating the type of garage.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.GarageTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleCount' originalName='vehicleCount' assignable='true' index='0'>
      <Description>The count of vehicles for which the garage was designed.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.HeatingAndCoolingDetail' originalName='HeatingAndCoolingDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about the heating and/or air conditioning of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='centralAirConditioningIndicator' originalName='centralAirConditioningIndicator' assignable='true' index='1'>
      <Description>Indicates whether or not there is a central air conditioning system within the structure.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='heatingUnitCode' originalName='heatingUnitCode' assignable='true' index='0'>
      <Description>It indicates the type of the heating unit.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.HeatingUnitTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.InsulationDetail' originalName='InsulationDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about the insulation of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='insulationTypeCode' originalName='insulationTypeCode' assignable='true' index='1'>
      <Description>It identifies the type of insulation.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.InsulationTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='interiorBuiltInsCode' originalName='interiorBuiltInsCode' assignable='true' index='0'>
      <Description>It indicates the type of built in appliances, structures, etc. used in the dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.InteriorBuiltInsCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.PlumbingDetail' originalName='PlumbingDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about the plumbing of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='plumbingMaterialCode' originalName='plumbingMaterialCode' assignable='true' index='1'>
      <Description>Type of material used in plumbing.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.PlumbingMaterialCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='stateOfWasteWaterPipes' originalName='stateOfWasteWaterPipes' assignable='true' index='3'>
      <Description>Free description of the state of the waste water pipes</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='stateOfWaterSupplyPipes' originalName='stateOfWaterSupplyPipes' assignable='true' index='2'>
      <Description>Free description of the state of the water supply pipes</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='wasteWaterComplianceIndicator' originalName='wasteWaterComplianceIndicator' assignable='true' index='4'>
      <Description>Indicates whether the waste water pipes are compliant with the local regulations.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='waterSupplyComplianceIndicator' originalName='waterSupplyComplianceIndicator' assignable='true' index='0'>
      <Description>Indicates whether the water supply pipes are compliant with the local regulations.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.RoofDetail' originalName='RoofDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about the roof of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='roofCoverageAttachmentCode' originalName='roofCoverageAttachmentCode' assignable='true' index='5'>
      <Description>It indicates the type of attachment used to secure the roof cover material to the roof deck of the dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofCoverageAttachmentCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roofDeckAttachmentCode' originalName='roofDeckAttachmentCode' assignable='true' index='4'>
      <Description>It identifies the type of attachment used to secure the roof deck to the framing supports of the dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofDeckAttachmentCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roofDeckMaterialCode' originalName='roofDeckMaterialCode' assignable='true' index='3'>
      <Description>It identifies the material used to construct a roof deck of a dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofDeckMaterialCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roofGeometryTypeCode' originalName='roofGeometryTypeCode' assignable='true' index='2'>
      <Description>It identifies the architecture/geometry of the dwelling's roof.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofGeometryTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roofMaterialTypeCode' originalName='roofMaterialTypeCode' assignable='true' index='1'>
      <Description>it identifies the material used to construct a roof deck of a dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofMaterialTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roofSolidMaterialPercentage' originalName='roofSolidMaterialPercentage' assignable='true' index='6'>
      <Description>Defines the percentage of the solid material of the roof of the property.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roofWallAttachmentCode' originalName='roofWallAttachmentCode' assignable='true' index='0'>
      <Description>It identifies the type of connection used to attach the roof to the walls of a dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.RoofWallAttachmentCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.StructureComponentDetail' originalName='StructureComponentDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives additional details about a structure. Most of these details could be calculated from a complete description of the structure.</Description>
    <AttributeProperty isSynthetic='true' name='componentTypeCode' originalName='componentTypeCode' assignable='true' index='0'>
      <Description>A code indicating the type of structure component.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureComponentCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='areaMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.StructureFeatureDetail' originalName='StructureFeatureDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives additional details about the features of a structure (e.g. 1 sauna).</Description>
    <AttributeProperty isSynthetic='true' name='featureCount' originalName='featureCount' assignable='true' index='0'>
      <Description>The count of structure features (e.g. 1 dishwasher).</Description>
      <TypeName>java.lang.Integer</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='featureTypeCode' originalName='featureTypeCode' assignable='true' index='1'>
      <Description>A code indicating the type of structure feature (e.g. dishwasher).</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.StructureFeatureCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.WallDetail' originalName='WallDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about the walls of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='wallMaterialCode' originalName='wallMaterialCode' assignable='true' index='1'>
      <Description>States the material the walls are made of.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.ConstructionMaterialCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='wallSolidMaterialPercentage' originalName='wallSolidMaterialPercentage' assignable='true' index='0'>
      <Description>Defines the percentage of the solid material of the walls of a building.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureDetailSubtypes.WindowDetail' originalName='WindowDetail' superclassName='org.acord.aim.PhysicalObject.StructureDetail' isAbstract='false'>
    <Description>This concept gives details about a window of a structure.</Description>
    <AttributeProperty isSynthetic='true' name='glassTypeCode' originalName='glassTypeCode' assignable='true' index='0'>
      <Description>It indicates the type of glass used for the windows of a structure.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.GlassTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='plateGlassWindowAmount' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='plateGlassWindowAreaMeasurement' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.ApartmentBuilding' originalName='ApartmentBuilding' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents an apartment building. As such, it may contain apartment units.</Description>
    <RelationshipProperty isSynthetic='true' name='apartmentbuildingcomposition' originalName='apartment building composition' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.ApartmentUnit</TypeName>
      <RelationshipProperty isSynthetic='true' name='ApartmentBuildingForapartmentbuildingcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.ApartmentUnit' originalName='ApartmentUnit' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' isAbstract='false'>
    <Description>This concept gives particular features of an apartment unit. An apartment unit can be further described by a dwelling description (DwellingDetail) and completely described by specifying each of its composing elements: rooms, cellars, garages, etc.

An apartment unit is part of an ApartmentBuilding structure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Bridge' originalName='Bridge' superclassName='org.acord.aim.PhysicalObject.Structure' isAbstract='false'>
    <Description>A specialized structure built above and across a river, road, or other obstacle to allow people or vehicles to cross it.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Building' originalName='Building' superclassName='org.acord.aim.PhysicalObject.Structure' isAbstract='false'>
    <Description>This concept represents a building.</Description>
    <AttributeProperty isSynthetic='true' name='basementFloorCount' originalName='basementFloorCount' assignable='true' index='1'>
      <Description>Indicates the number of basement floors of a building.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='highRiseBuildingIndicator' originalName='highRiseBuildingIndicator' assignable='true' index='0'>
      <Description>Indicates whether the building is classified as a high rise.  This attribute helps determine</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='investmentPropertyIndicator' originalName='investmentPropertyIndicator' assignable='true' index='2'>
      <Description>Indicates the building was acquired primarily for investment purposes (e.g. income, value/re-sale).</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='buildingoccupancy' originalName='building occupancy' assignable='true' index='3' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.OccupancyDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='BuildingForbuildingoccupancy' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' originalName='BuildingEntity' superclassName='org.acord.aim.PhysicalObject.Structure' isAbstract='false'>
    <Description>A building entity represents the part of a structure that can be represented separately from the entire structure. For example, an apartment building has details around the entire structure, but the individual apartments contain details specific to the individual apartment.</Description>
    <AttributeProperty isSynthetic='true' name='floor' originalName='floor' assignable='true' index='0'>
      <Description>The level of a building entity within a building.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='buildingentityoccupancy' originalName='building entity occupancy' assignable='true' index='1' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.OccupancyDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='BuildingEntityForbuildingentityoccupancy' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.CondominiumBuilding' originalName='CondominiumBuilding' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents a condominium building. As such, it may contain condominium units.</Description>
    <RelationshipProperty isSynthetic='true' name='condominiumbuildingcomposition' originalName='condominium building composition' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.CondominiumUnit</TypeName>
      <RelationshipProperty isSynthetic='true' name='CondominiumBuildingForcondominiumbuildingcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.CondominiumUnit' originalName='CondominiumUnit' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' isAbstract='false'>
    <Description>This concept gives particular features of a condominium unit. A condominium unit can be further described by a dwelling description (DwellingDetail) and completely described by specifying each of its composing elements: rooms, cellars, garages, etc.

A condominium unit is part of a CondominiumBuilding structure.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Dam' originalName='Dam' superclassName='org.acord.aim.PhysicalObject.Structure' isAbstract='false'>
    <Description>A specialized structured designed to create a barrier of concrete or earth  built across a river or stream to obstruct or control the flow of water.  This structure is usually designed to create a reservoir.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Dwelling' originalName='Dwelling' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept gives particular features of a dwelling. A dwelling can be further described by a dwelling description (DwellingDetail) and completely described by specifying each of its composing elements: rooms, cellars, garages, etc.</Description>
    <AttributeProperty isSynthetic='true' name='dwellingTypeCode' originalName='dwellingTypeCode' assignable='true' index='0'>
      <Description>It identifies the style of the dwelling.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.DwellingStyleCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='furnishedIndicator' originalName='furnishedIndicator' assignable='true' index='1'>
      <Description>An indicator the premises is furnished.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='livingSpaceMeasurement' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.FarmBuilding' originalName='FarmBuilding' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents a farm building.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.MobileHome' originalName='MobileHome' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Dwelling' isAbstract='false'>
    <Description>This concept represents a mobile home.</Description>
    <AttributeProperty isSynthetic='true' name='cookingLocationCode' originalName='cookingLocationCode' assignable='true' index='9'>
      <Description>A code identifying where the cooking facilities are located in the mobile home or trailer.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.MobileHomeCookingLocationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='doublewideIndicator' originalName='doublewideIndicator' assignable='true' index='3'>
      <Description>Indicates if the mobile home is a double-wide construction.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='manufacturerName' originalName='manufacturerName' assignable='true' index='0'>
      <Description>Identifies the manufacturer of the machinery.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='permanentConnectionToElectricityIndicator' originalName='permanentConnectionToElectricityIndicator' assignable='true' index='6'>
      <Description>Indicates whether the mobile home has a permanent connection to electricity.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='permanentConnectionToSewerIndicator' originalName='permanentConnectionToSewerIndicator' assignable='true' index='8'>
      <Description>Indicates whether the mobile home has a permanent connection to sewer.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='permanentConnectionToWaterIndicator' originalName='permanentConnectionToWaterIndicator' assignable='true' index='7'>
      <Description>Indicates whether the mobile home has a permanent connection to water.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='purchasedNewIndicator' originalName='purchasedNewIndicator' assignable='true' index='2'>
      <Description>Indicates if the mobile home was purchased new.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='serialNumber' originalName='serialNumber' assignable='true' index='1'>
      <Description>The text string that uniquely identifies this manufactured item for a given manufacturer makes and models of a product. 
 
e.g: CD345-OEM-3457-ABC uniquely identifies a Canon EOS 50E camera.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='skirtedIndicator' originalName='skirtedIndicator' assignable='true' index='4'>
      <Description>Indicates if the mobile home is skirted.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='tieDownCode' originalName='tieDownCode' assignable='true' index='5'>
      <Description>A code that identifies how the mobile home/trailer is secured.</Description>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObjectCodeLists.TieDownCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='lengthMeasurement' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='manufacturedDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='mobilehomespecification' originalName='mobile home specification' assignable='true' index='13' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='MobileHomeFormobilehomespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='widthMeasurement' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.MultiuseBuilding' originalName='MultiuseBuilding' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>A building that can be any combination of uses. Shops and dwelling are shown for illustrative purposes, but any number of Building Entities can be connected.</Description>
    <RelationshipProperty isSynthetic='true' name='multiusebuildingcomposition' originalName='multiuse building composition' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity</TypeName>
      <RelationshipProperty isSynthetic='true' name='MultiuseBuildingFormultiusebuildingcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.OccupancyDetail' originalName='OccupancyDetail' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents the occupancy or unoccupancy of a building or some portion of a building.</Description>
    <AttributeProperty isSynthetic='true' name='occupancyPercentage' originalName='occupancyPercentage' assignable='true' index='2'>
      <Description>Indicates percentage occupied</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='occupancyTypeCode' originalName='occupancyTypeCode' assignable='true' index='1'>
      <Description>Defines how the structure is inhabited.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.OccupancyTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='occupiedAreaSurface' originalName='occupiedAreaSurface' assignable='true' index='3'>
      <Description>Determines the occupied surface of the construction.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='occupiedIndicator' originalName='occupiedIndicator' assignable='true' index='0'>
      <Description>Defines if the property is occupied or not.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='annualUnoccupancyPeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastOccupantLeavingDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Office' originalName='Office' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' isAbstract='false'>
    <Description>The part of a structure that represents an office.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.OfficeBlock' originalName='OfficeBlock' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents an office block (office building).</Description>
    <RelationshipProperty isSynthetic='true' name='officebuildingcomposition' originalName='office building composition' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.Office</TypeName>
      <RelationshipProperty isSynthetic='true' name='OfficeBlockForofficebuildingcomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Outbuilding' originalName='Outbuilding' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents an outbuilding</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.ParkingArea' originalName='ParkingArea' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' isAbstract='false'>
    <Description>The part of a structure that represents a parking area.</Description>
    <AttributeProperty isSynthetic='true' name='openAirIndicator' originalName='openAirIndicator' assignable='true' index='0'>
      <Description>Indicates the parking area is in an open place (no enclosure) - e.g. outdoors.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='parkingSpaceCount' originalName='parkingSpaceCount' assignable='true' index='1'>
      <Description>The count of parking spaces in a parking area.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.ParkingLot' originalName='ParkingLot' superclassName='org.acord.aim.PhysicalObject.Structure' isAbstract='false'>
    <Description>A parking lot (Commonwealth English: car park), also known as car lot, is a cleared area that is more or less level and is intended for parking vehicles. Usually, the term refers to a dedicated area that has been provided with a durable or semi-durable surface.

SOURCE: http://en.wikipedia.org/wiki/Parking_lot</Description>
    <AttributeProperty isSynthetic='true' name='parkingSpaceCount' originalName='parkingSpaceCount' assignable='true' index='0'>
      <Description>The count of parking spaces in a parking lot.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Plant' originalName='Plant' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents a plant.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Shop' originalName='Shop' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' isAbstract='false'>
    <Description>The part of a structure that represents a shop (e.g. space utilized for non-automotive mercantile use: card shop, grocery store, electronics store, etc.).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.ShoppingCenter' originalName='ShoppingCenter' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents a shopping center.</Description>
    <RelationshipProperty isSynthetic='true' name='shoppingCenterComposition' originalName='shoppingCenterComposition' assignable='true' index='0' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.StructureSubtypes.Shop</TypeName>
      <RelationshipProperty isSynthetic='true' name='ShoppingCenterForshoppingCenterComposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.StorageSpace' originalName='StorageSpace' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.BuildingEntity' isAbstract='false'>
    <Description>The part of a structure that represents a storage space. It can be indoor or outdoor.</Description>
    <AttributeProperty isSynthetic='true' name='openAirIndicator' originalName='openAirIndicator' assignable='true' index='0'>
      <Description>Indicates the storage location is in an open place (no enclosure) - e.g. outdoors.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='storageVolumeMeasurement' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.StructureRatingDetail' originalName='StructureRatingDetail' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept accommodates data items relevant to premium development via rating calculation(s) as related to structures.</Description>
    <AttributeProperty isSynthetic='true' name='brushFireZone' originalName='brushFireZone' assignable='true' index='5'>
      <Description>An industry code identifying the brush/fire zone. The source of this code list is State or Insurer manuals.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='buildingCodeEffectivenessGrade' originalName='buildingCodeEffectivenessGrade' assignable='true' index='4'>
      <Description>A code used to indicate the type of Building Code Effectiveness Grade (BCEG).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='earthquakeZone' originalName='earthquakeZone' assignable='true' index='0'>
      <Description>An industry code identifying a particular area for the sole purpose of rating Earthquake Coverage. The source of this code list is the company or state/province earthquake manuals.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fireProtectionClass' originalName='fireProtectionClass' assignable='true' index='3'>
      <Description>An industry code denoting the level of protection provided in the geographic area. Generally refers to the fire protection available. The source of this code list is local fire protection manuals or individual insurer.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='floodZone' originalName='floodZone' assignable='true' index='2'>
      <Description>A code indicating the flood zone the property is located in. The source of this code list is the Flood Insurance Rate Map.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='renieSquare' originalName='renieSquare' assignable='true' index='6'>
      <Description>Identifies brush fire parameter areas. It is derived from the Admap Fire Insurance Dwelling Rate Atlas, published by Renie Admap Company.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='windZone' originalName='windZone' assignable='true' index='1'>
      <Description>A code indicating the wind zone the property is located in. The source of this code list is the Insurance Services Office.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='StructureRatingDetailOnPlace' originalName='StructureRatingDetail On Place' assignable='true' index='7' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='StructureRatingDetailForStructureRatingDetailOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.StructureSubtypes.Warehouse' originalName='Warehouse' superclassName='org.acord.aim.PhysicalObject.StructureSubtypes.Building' isAbstract='false'>
    <Description>This concept represents a warehouse.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.AgriculturalVehicle' originalName='AgriculturalVehicle' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of an agricultural vehicle.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Aircraft' originalName='Aircraft' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Vehicle' isAbstract='false'>
    <Description>This concept describes common features of aircraft.</Description>
    <AttributeProperty isSynthetic='true' name='hangarIndicator' originalName='hangarIndicator' assignable='true' index='0'>
      <Description>Indicates if the insured aircraft is parked in a hangar.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='regularPilotCount' originalName='regularPilotCount' assignable='true' index='1'>
      <Description>Indicates the number of regular pilots of the insured aircraft.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='aircraftpilot' originalName='aircraft pilot' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.PartyRoleInAgreement.Pilot</TypeName>
      <RelationshipProperty isSynthetic='true' name='AircraftForaircraftpilot' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='aircraftspecification' originalName='aircraft specification' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.AircraftSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='AircraftForaircraftspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Bus' originalName='Bus' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of a bus.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Car' originalName='Car' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of a car.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.ConstructionVehicle' originalName='ConstructionVehicle' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of a construction vehicle.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' originalName='LandVehicle' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Vehicle' isAbstract='false'>
    <Description>This concept gives particular features of a land vehicle.This concept provides a generalization of all vehicles that travel via land.</Description>
    <AttributeProperty isSynthetic='true' name='newVehicleAtPurchaseIndicator' originalName='newVehicleAtPurchaseIndicator' assignable='true' index='3'>
      <Description>Values are :
Yes for New
No for Second-hand</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='regularDriverCount' originalName='regularDriverCount' assignable='true' index='2'>
      <Description>The count of drivers who regularly use the vehicle.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='useModeCode' originalName='useModeCode' assignable='true' index='0'>
      <Description>Specifies the utilization of the insurable object.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.VehicleUseCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleDamageabilityCode' originalName='vehicleDamageabilityCode' assignable='true' index='5'>
      <Description>A code indicating the relative degree of damageability of the vehicle.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.VehicleDamageabilityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleLeasedCode' originalName='vehicleLeasedCode' assignable='true' index='4'>
      <Description>A code indicating the nature of the lease associated with the vehicle.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.VehicleLeasedCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleSpecialUseCode' originalName='vehicleSpecialUseCode' assignable='true' index='1'>
      <Description>It indicates any special use of this vehicle. If more than one code is appropriate, the code representing the majority use should apply.</Description>
      <TypeName>org.acord.aim.Agreement.AgreementCodeLists.VehicleSpecialUseCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='accessoriesValueAmount' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='averageAnnualDistanceMeasurement' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='firstCirculationDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='landvehiclespecification' originalName='land vehicle specification' assignable='true' index='11' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.LandVehicleSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='LandVehicleForlandvehiclespecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalAvailableTrailerWeightMeasurement' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='vehicleUseDuration' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Motorcycle' originalName='Motorcycle' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of a motorcycle.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Trailer' originalName='Trailer' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Vehicle' isAbstract='false'>
    <Description>This concept gives particular features of a trailer.</Description>
    <AttributeProperty isSynthetic='true' name='trailerType' originalName='trailerType' assignable='true' index='0'>
      <Description>Describes the type of trailer.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Train' originalName='Train' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of a train.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Truck' originalName='Truck' superclassName='org.acord.aim.PhysicalObject.VehicleSubtypes.LandVehicle' isAbstract='false'>
    <Description>This concept gives particular features of a truck.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.PhysicalObject.VehicleSubtypes.Watercraft' originalName='Watercraft' superclassName='org.acord.aim.PhysicalObject.ManufacturedItemSubtypes.Vehicle' isAbstract='false'>
    <Description>This concept describes particular attributes of a water vehicle.</Description>
    <RelationshipProperty isSynthetic='true' name='watercraftspecification' originalName='watercraft specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.ManufacturedItemSpecificationSubtypes.WatercraftSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='WatercraftForwatercraftspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductComponentSpecification' originalName='ProductComponentSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecification' isAbstract='true'>
    <Description>This concept is generalizing any component, which participate in a given product content definition (e.g: Coverage in an insurance contract).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductComposition' originalName='ProductComposition' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>ProductComposition establishes the relationship of one ProductSpecification with another, making clear the nature of the composition of the result.

USAGE NOTE: When describing a scenario involving a "minimum component count", the count expected by the "is component of" ProductSpecification with regards to the "is composed of" ProductSpecification.

In other words, the three attributes essentially complete the following sentence:

is component of | minimum component count | is composed of
e.g. Four cylinder engine | minimum component count = 4 | spark plug</Description>
    <AttributeProperty isSynthetic='true' name='maximumComponentCount' originalName='maximumComponentCount' assignable='true' index='0'>
      <Description>The maximum count of components for a given product specification.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='minimumComponentCount' originalName='minimumComponentCount' assignable='true' index='1'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='countryelementlimitation' originalName='country element limitation' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.PlaceSubtypes.CountryElement</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductCompositionForcountryelementlimitation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ProductCompositionOnPlace' originalName='ProductComposition On Place' assignable='true' index='5' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductCompositionForProductCompositionOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ProductCompositionOnProductSpecification' originalName='ProductComposition On ProductSpecification' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductCompositionForProductCompositionOnProductSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductRequestSpecification' originalName='ProductRequestSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecification' isAbstract='false'>
    <Description>The specification of an agreement request. It represents a type of transactions that may be requested for the specified agreement. It also describes the circumstances under which this transaction is considered valid.</Description>
    <RelationshipProperty isSynthetic='true' name='requestAllowance' originalName='requestAllowance' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductRequestSpecificationForrequestAllowance' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='requestspeccomposition' originalName='request spec composition' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductRequestSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductRequestSpecificationForrequestspeccomposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecification' originalName='ProductSpecification' superclassName='org.acord.aim.CommonElements.CommonClasses.Specification' isAbstract='false'>
    <Description>This concept defines the key characteristics of a product associated with an insurance company. It acts as the blueprint for the design of an agreement. A product may be designed to include risks, coverages, rules, clauses and data elements associated with them.

NOTE: An insurance company might create designs for an agreement for sale in the open market (e.g. life insurance policy, personal auto policy) and/or it might create designs for an agreement that does not involve re-sale (e.g. producer agreement, employment agreement).</Description>
    <AttributeProperty isSynthetic='true' name='marketableIndicator' originalName='marketableIndicator' assignable='true' index='2'>
      <Description>Indicates whether the product is designed to be marketed.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusChangeReasonCode' originalName='statusChangeReasonCode' assignable='true' index='1'>
      <Description>The reason explaining why there was a status change.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.StatusReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>The current status of a specification within the life-cycle model.</Description>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.ProductStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='marketablePeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='productReplacement' originalName='productReplacement' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductSpecificationForproductReplacement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ProductSpecificationOnProductComposition' originalName='ProductSpecification On ProductComposition' assignable='true' index='6' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductComposition</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductSpecificationForProductSpecificationOnProductComposition' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusChangeDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElement' originalName='ProductSpecificationElement' superclassName='org.acord.aim.ProductSpecification.ProductSpecification' isAbstract='true'>
    <Description>This abstract concept is the super-type of most of the detail elements for a particular product definition. These elements provide the details associated to a given product element or request.  

e.g Premiums, limits, rules, etc.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.PartyRoleInProduct.ProductAdministrator' originalName='ProductAdministrator' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInProduct' isAbstract='false'>
    <Description>Defines the administrator of a product offer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.PartyRoleInProduct.ProductDistributor' originalName='ProductDistributor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInProduct' isAbstract='false'>
    <Description>Defines the distributor of a product offer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.PartyRoleInProduct.ProductManager' originalName='ProductManager' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInProduct' isAbstract='false'>
    <Description>This concept describes one's role as insurance products manager.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.BeneficiaryClauseSpecification' originalName='BeneficiaryClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This concept stands for a clause specifically defining for designating beneficiaries within a financial services agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.EffectiveDateClauseSpecification' originalName='EffectiveDateClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This concept defines a contract start date option.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.ExclusionClauseSpecification' originalName='ExclusionClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This clause is used to provide exclusions for a given agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.FreeClauseSpecification' originalName='FreeClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This specialization of clause defines a clause which can be adapted and redefined for each contract (during Underwriting).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductClauseSpecificationSubtypes.TerminationClauseSpecification' originalName='TerminationClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' isAbstract='false'>
    <Description>This concept specifies contract termination term. Particularly used for savings life insurance.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductClauseSpecification' originalName='ProductClauseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecification' isAbstract='false'>
    <Description>This concept defines a clause of a product. Similar to rules that help govern the conditions of an insurance policy, clauses usually result in a specific form attached as part of the policy document.

e.g: Life insurance policy includes a circumstance clause that excludes coverage for hazardous hobbies.</Description>
    <AttributeProperty isSynthetic='true' name='additionalDetailsRequiredIndicator' originalName='additionalDetailsRequiredIndicator' assignable='true' index='0'>
      <Description>Indicates that more details are required to provide the full list of conditions around this particular clause.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductCoverageSpecification' originalName='ProductCoverageSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecification' isAbstract='false'>
    <Description>This concept defines the characteristics of a coverage.</Description>
    <AttributeProperty isSynthetic='true' name='ageDateUseCode' originalName='ageDateUseCode' assignable='true' index='1'>
      <Description>Represents the kind of date to be reminded to evaluate the coverage definition</Description>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.AgeDateUseCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='coveredRiskOccurrenceCount' originalName='coveredRiskOccurrenceCount' assignable='true' index='0'>
      <Description>Indicates the number of occurrences a risk will be covered by a coverage.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='excludedperil' originalName='excluded peril' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.CommonClasses.Peril</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductCoverageSpecificationForexcludedperil' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='perilinclusion' originalName='peril inclusion' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.CommonElements.CommonClasses.Peril</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductCoverageSpecificationForperilinclusion' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' originalName='ProductFeatureSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecification' isAbstract='false'>
    <Description>This concept defines a feature of a product. The product might offer a variety of different features that are not directly related to coverages.

e.g. loan, surrender, profit sharing</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.RoleSpecification' originalName='RoleSpecification' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecification' isAbstract='false'>
    <Description>This specification defines data needed  for a given subject associated with a product (e.g. party, physical object, place, activity, event - including related roles).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.AgreementAnnuityFeature' originalName='AgreementAnnuityFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept represents the annuity features available for a given annuity product.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.BenefitPaymentFeature' originalName='BenefitPaymentFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines all the characteristics of a benefit payment mode (remittances and premium).</Description>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='1'>
      <Description>Frequency of payment</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentMeanUseCode' originalName='paymentMeanUseCode' assignable='true' index='0'>
      <Description>A code indicating the method utilized to make a payment.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.BillingPaymentFeature' originalName='BillingPaymentFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines all the characteristics of a billing payment mode.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.LoanFeature' originalName='LoanFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines a loan feature.</Description>
    <AttributeProperty isSynthetic='true' name='interestRateRange' originalName='interestRateRange' assignable='true' index='1'>
      <Description>An interest rate is calculated for the reimbursement of the loan</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='limitRules' originalName='limitRules' assignable='true' index='0'>
      <Description>The loan is limited to a percentage of the value of the contract.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='loanTypeCode' originalName='loanTypeCode' assignable='true' index='3'>
      <Description>Type of loan</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LoanTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='refundRules' originalName='refundRules' assignable='true' index='2'>
      <Description>Values are 
Capital
Capital + Interest
Interest</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.MembershipFeature' originalName='MembershipFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept specifies a type of membership/subscription relevant to a product.

e.g. The policy is eligible for a discount for those policyholders who subscribe to/are members of AARP (American Association of Retired Persons).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.ProfitSharingFeature' originalName='ProfitSharingFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept represents the specification for a profit sharing option available on a Financial Services Agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.RemittanceFeature' originalName='RemittanceFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines all the characteristics of a payment mode (remittances and premium).</Description>
    <AttributeProperty isSynthetic='true' name='annuityPremiumTypeCode' originalName='annuityPremiumTypeCode' assignable='true' index='3'>
      <Description>Annuity Premium Type</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.AnnuityPremiumTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='2'>
      <Description>Frequency of payment</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='remittanceMeansCode' originalName='remittanceMeansCode' assignable='true' index='1'>
      <Description>A code indicating the means by which remittance is handled.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='remittanceTypeCode' originalName='remittanceTypeCode' assignable='true' index='0'>
      <Description>Remittance Type</Description>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.RemittanceTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.ServiceFeature' originalName='ServiceFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines a service feature.

e.g. The service provided often comes with the coverage, such as legal assistance/support, roadside assistance, medical assistance, etc.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.SurrenderFeature' originalName='SurrenderFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept defines a feature that has been chosen for surrender.</Description>
    <AttributeProperty isSynthetic='true' name='fiscalSurrenderOption' originalName='fiscalSurrenderOption' assignable='true' index='0'>
      <Description>Country-specific field.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentFrequencyCode' originalName='paymentFrequencyCode' assignable='true' index='2'>
      <Description>Frequency of payments</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.PaymentFrequencyCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='paymentMeansCode' originalName='paymentMeansCode' assignable='true' index='1'>
      <Description>Mean of payment (checks, creditCard, etc.)</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.FinancialMediumTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='currencyCode' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductFeatureSpecificationSubtypes.TaxDeductionFeature' originalName='TaxDeductionFeature' superclassName='org.acord.aim.ProductSpecification.ProductComponentSpecificationSubtypes.ProductFeatureSpecification' isAbstract='false'>
    <Description>This concept specifies a tax deduction fiscal feature.

e.g. Individual Savings Life Insurance</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.AgeDateUseCodeList' originalName='AgeDateUseCodeList' restricts='java.lang.String'>
    <Description>Age Date Use

A listing of various ways an age can be used to determine a maturity or expiry date.</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Birthday' generator='Birthday'>
      <Description>Determine date as the exact birthday when the age is attained.                                                  Example: Coverage effective 4/20/2001 at issue age 61.  Date set based on age 65 date would be the actual 65th birthday.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoverageAnniversaryBeginning' generator='Coverage Anniversary Beginning'>
      <Description>Determine date as beginning of the coverage duration during which the age is attained.                                                  Example: Coverage effective 4/20/2001 at issue age 61.  Date set based on age 65 date would be 4/20/2005.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CoverageAnniversaryEnd' generator='Coverage Anniversary End'>
      <Description>Determine date as end of the coverage duration during which the age is attained.                                                  Example: Coverage effective 4/20/2001 at issue age 61.  Date set based on age 65 date would be 4/20/2006.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.CalculationKindCodeList' originalName='CalculationKindCodeList' restricts='java.lang.String'>
    <Description>Identifies a conceptualization of Calculation Specifications according to their kind.</Description>
    <Enumerand isSynthetic='true' name='AdjustmentCalculation' generator='Adjustment Calculation'>
      <Description>Identifies a Calculation specification with kind 'adjustment calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AmendmentPremiumCalculation' generator='Amendment Premium Calculation'>
      <Description>Identifies a Calculation specification with kind 'amendment premium calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PremiumCalculation' generator='Premium Calculation'>
      <Description>Identifies a Calculation specification with kind 'premium calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BenefitCalculation' generator='Benefit Calculation'>
      <Description>Identifies a Calculation specification with kind 'benefit calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommissionCalculation' generator='Commission Calculation'>
      <Description>Identifies a Calculation specification with kind 'commission calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InterestCalculation' generator='Interest Calculation'>
      <Description>Identifies a Calculation specification with kind 'interest calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LoanBalanceCalculation' generator='Loan Balance Calculation'>
      <Description>Identifies a Calculation specification with kind 'loan balance calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PremiumPaymentCalculation' generator='Premium Payment Calculation'>
      <Description>Identifies a Calculation specification with kind 'premium payment calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PriceCalculation' generator='Price Calculation'>
      <Description>Identifies a Calculation specification with kind 'price calculation'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SurrenderCalculation' generator='Surrender Calculation'>
      <Description>Identifies a Calculation specification with kind 'surrender calculation'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.InvestmentProductObjectiveCodeList' originalName='InvestmentProductObjectiveCodeList' restricts='java.lang.String'>
    <Description>Investment Product Objective 
A set of various objectives to be associated with the appropriate Client, Holding, or Product information.</Description>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AggressiveGrowth' generator='Aggressive Growth'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TaxFree' generator='Tax Free'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MoneyMarket' generator='Money Market'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='IncomePurposes' generator='Income Purposes'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConservativeIncome' generator='Conservative Income'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ConservativeGrowth' generator='Conservative Growth'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CapitalPreservation' generator='Capital Preservation'>
      <Description>Preservation of capital is more important then income</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateBondGeneral' generator='Corporate Bond General'>
      <Description>A general Bond investment</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Fixedinterest' generator='Fixed interest'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LargeBlend' generator='Large Blend'>
      <Description>A category for domestic equity funds that invest in a mixture of large companies whose share prices are expected to increase (growth) and large companies whose share are priced below the market (value). Stocks held in these funds typically have a market cap greater than $5 billion and a combined Price/Earnings ratio + Price/Book value between 1.75 and 2.25.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LargeGrowth' generator='Large Growth'>
      <Description>A category for domestic equity funds that invest in large companies whose share prices are expected to increase. Stocks held in these funds typically have a market cap greater than $5 billion and a combined Price/Earnings ratio plus Price/Book value greater than 2.25.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Balanced' generator='Balanced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LargeValue' generator='Large Value'>
      <Description>A category for domestic equity funds that invest in large companies whose shares are priced below the market compared to their peers. Stocks held in these funds typically have a market cap greater than $5 billion and a combined Price/Earnings ratio + Price/Book value less than 1.75.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MidBlend' generator='Mid Blend'>
      <Description>A category for domestic equity funds that invest in a mixture of mid-size companies whose share prices are expected to increase (growth stocks) and mid-size companies whose share are priced below the market (value stocks). Stocks held in these funds typically have a market cap from $1 billion to $5 billion and a combined Price/Earnings ratio plus Price/Book value between 1.75 and 2.25</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MidGrowth' generator='Mid Growth'>
      <Description>A category for domestic equity funds that invest in mid-size companies whose share prices are expected to increase significantly. Stocks held in these funds typically have a market cap from $1 billion to $5 billion and their combined Price/Earnings ratio and Price/Book value is greater than 2.25.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Moderate' generator='Moderate'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MidValue' generator='Mid Value'>
      <Description>A category for domestic equity funds that invest in mid-size companies whose shares are priced below the market compared to their peers. Stocks held in these funds typically have a market cap from $1 billion to $5 billion and a combined Price/Earnings ratio + Price/Book value of less than 1.75.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SmallBlend' generator='Small Blend'>
      <Description>A category for domestic equity funds that invest in a mixture of small companies whose share prices are expected to increase (growth stocks) and small companies whose share are priced below the market (value stocks). Stocks held in these funds typically have a market cap of less than $1 billion and a combined Price/Earnings ratio plus Price/Book value between 1.75 and 2.25.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SmallGrowth' generator='Small Growth'>
      <Description>A category for domestic equity funds that invest in small companies whose share prices are expected to increase significantly. Stocks held in these funds typically have a market cap of less than $1 billion and their combined Price/Earnings ratio plus Price/Book value is greater than 2.25.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentBondTreasury' generator='Government Bond Treasury'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ShortTermBond' generator='Short Term Bond'>
      <Description>A category for taxable bond funds that invest at least 70% of their assets in bonds with a focus on corporate and investment-grade bonds. These bonds usually have an average duration from 1 to 3.5 years or an average effective maturity from 1 to 4 years.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SmallValue' generator='Small Value'>
      <Description>A category for domestic equity funds that invest in small companies whose share are priced below the market compared to their peers. Stocks held in these funds typically have a market cap of less than $1 billion and a combined Price/Earnings ratio + Price/Book value of less than 1.75.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EquityIncome' generator='Equity Income'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SmallCompany' generator='Small Company'>
      <Description>Small Company Equities</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BalancedIncome' generator='Balanced/Income'>
      <Description>A balanced investment that targets an Income objective</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BalancedInternational' generator='Balanced/International'>
      <Description>A balanced International investment</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BalancedConvertible' generator='Balanced/Convertible'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateHighQualityBond' generator='Corporate High Quality Bond'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CorporateHighYieldBond' generator='Corporate High Yield Bond'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InternationalBond' generator='International Bond'>
      <Description>International Bond 

Notes: A category for bond funds which invest in Foreign (non-US) Governments investment grade bonds.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentBondGeneral' generator='Government Bond General'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentBondMtgeBacked' generator='Government Bond Mtge-Backed'>
      <Description>Mortgage Backed Government Bond investments</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ObjectiveGlobalBond' generator='Objective- Global Bond'>
      <Description>A category for bond funds which invest in US and Foreign Governments investment grade bonds.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Growth' generator='Growth'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ObjectiveGlobalStock' generator='Objective- Global Stock'>
      <Description>A category for funds which invest in stocks of companies in the US and foreign countries.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ObjectiveGlobalSmallCap' generator='Objective- Global Small Cap'>
      <Description>A category for small cap funds which invest in stocks of small companies in the US and foreign countries.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighIncome' generator='High Income'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InternationalStock' generator=' International Stock'>
      <Description>International Bond 

Notes: A category for bond funds which invest in Foreign (non-US) Governments investment grade bonds.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BalancedAssetAllocation' generator='Balanced/Asset Allocation'>
      <Description>A balanced investment that targets a particular asset allocation</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GrowthandIncome' generator='Growth and Income'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SpecialInterest' generator='Special Interest'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.ProductStatusCodeList' originalName='ProductStatusCodeList' restricts='java.lang.String'>
    <Description>Product Status</Description>
    <Enumerand isSynthetic='true' name='InDevelopment' generator='In Development'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Open' generator='Open'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Closed' generator='Closed'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.RemittanceTypeCodeList' originalName='RemittanceTypeCodeList' restricts='java.lang.String'>
    <Description>Remittance Type</Description>
    <Enumerand isSynthetic='true' name='InitialRemittance' generator='Initial Remittance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='AdditionalRemittance' generator='Additional Remittance'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProgrammedRemittance' generator='Programmed Remittance'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.RuleKindCodeList' originalName='RuleKindCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Rule Specifications according to their kind.</Description>
    <Enumerand isSynthetic='true' name='ClaimValidityRule' generator='Claim Validity Rule'>
      <Description>Identifies a Rule specification with kind 'claim validity rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='DataCaptureRule' generator='Data Capture Rule'>
      <Description>Identifies a Rule specification with kind 'data capture rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EligibilityRule' generator='Eligibility Rule'>
      <Description>Identifies a Rule specification with kind 'eligibility rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ProductCompositionRule' generator='Product Composition Rule'>
      <Description>Identifies a Rule specification with kind 'product composition rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='RequestValidityRule' generator='Request Validity Rule'>
      <Description>Identifies a Rule specification with kind 'request validity rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TriggerCondition' generator='Trigger Condition'>
      <Description>Identifies a Rule specification with kind 'trigger condition'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='UnderwritingRule' generator='Underwriting Rule'>
      <Description>Identifies a Rule specification with kind 'underwriting rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ValidityRule' generator='Validity Rule'>
      <Description>Identifies a Rule specification with kind 'validity rule'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ValuationRule' generator='Valuation Rule'>
      <Description>Identifies a Rule specification with kind 'valuation rule'.</Description>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeDataValue' originalName='AttributeDataValue' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents the type and possible values of a given attribute specification.

e.g: The liability coverage has limits of $15,000, $25,000 and $50,000 US</Description>
    <AttributeProperty isSynthetic='true' name='dataTypeCode' originalName='dataTypeCode' assignable='true' index='1'>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ComplexDataTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='dataValue' originalName='dataValue' assignable='true' index='0'>
      <Description>The value of the property specification.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='defaultIndicator' originalName='defaultIndicator' assignable='true' index='2'>
      <Description>An optional attribute used to indicate this value is the default value.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification' originalName='AttributeSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElement' isAbstract='false'>
    <Description>This concept represents the general data attribute associated to Product Components

This can be use generically or specialized for more specific details.</Description>
    <AttributeProperty isSynthetic='true' name='isConstantIndicator' originalName='isConstantIndicator' assignable='true' index='2'>
      <Description>This attribute indicates that the value of this property specification cannot be changed within this version of the ProductDefinition

These are typically used as inputs into Rules and Calculations</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='maxValue' originalName='maxValue' assignable='true' index='1'>
      <Description>The specified maximum value of this specification.  Used in conjunction with min value to provide a range rule in place for this property specification.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='minValue' originalName='minValue' assignable='true' index='0'>
      <Description>The specified minimum value of this specification.  Used in conjunction with max value to provide a range rule in place for this property specification.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='allowablevalues' originalName='allowable values' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeDataValue</TypeName>
      <RelationshipProperty isSynthetic='true' name='AttributeSpecificationForallowablevalues' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.CalculationSpecification' originalName='CalculationSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElement' isAbstract='false'>
    <Description>A mathematical formula used to compute any value needed in the context of a financial services request or on a financial services agreement. 
 
e.g: The calculation of the premium of a term-life agreement based on mortality tables and customer information.</Description>
    <AttributeProperty isSynthetic='true' name='businessDescription' originalName='businessDescription' assignable='true' index='0'>
      <Description>A free-text statement in business language used to explain the content of the calculation specification</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='calculationKindCode' originalName='calculationKindCode' assignable='true' index='2'>
      <Description>An indication of when to use the calculation specification. 
 
e.g: Benefit calculations are used for fixed-contribution products, for which the premium amount is decided by the customer. 
 
e.g: Commission calculations can be of different kinds: initial commissions are calculated at the creation of the agreement, while renewal commissions are calculated at every policy anniversary. You will also have different calculations for charges taken from the policy and commission expenses paid to the intermediaries. 

e.g: Initialization calculations are general calculations executed at the creation of the agreement. An example would be to calculate the value of deductible properties. 

e.g: Premium calculations are executed when the agreements are created. They can also be executed later on, for example at every renewal or when special events occur that have an impact on the agreements.

e.g: Profit share calculations are usually executed at policy anniversary dates to determine how much of the company's profit the policyholder is entitled to. 

e.g: Reserve calculations are usually calculated on the anniversary dates of a life insurance policy. They can also be calculated on demand, for example when a customer wants to surrender a life insurance policy, or to stop paying the premium so that the policy becomes paid-up. 

e.g: Surrender value calculations are executed in order to determine how much the policy is worth when a customer wants to surrender a life-insurance policy. 

e.g: Tax calculations are executed every time tax needs to be paid, which depending on the country can occur at the creation of the agreement, on each premium payment, on each benefit payment, or on special events that have an impact on the policy.</Description>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.CalculationKindCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='formalDefinition' originalName='formalDefinition' assignable='true' index='1'>
      <Description>The statement in formal language, actuarial mathematics or pseudo-code used to explain the content of the calculation specification</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='calculationinputparamentassociation' originalName='calculation input parament association' assignable='true' index='3' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CalculationSpecificationForcalculationinputparamentassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='calculationoutputparamentassociation' originalName='calculation output parament association' assignable='true' index='4' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='CalculationSpecificationForcalculationoutputparamentassociation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.DeductibleSpecification' originalName='DeductibleSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification' isAbstract='false'>
    <Description>This concept defines one deductible of a product coverage.

In an insurance policy, the deductible (North American term) or excess (UK term) is the portion of any claim that is not covered by the insurance provider. It is the amount of expenses that must be paid out of pocket before an insurer will cover any expenses. It is normally quoted as a fixed quantity and is a part of most policies covering losses to the policy holder. The deductible must be paid by the insured, before the benefits of the policy can apply. Typically, a general rule is: the higher the deductible, the lower the premium, and vice versa.

In a typical automobile insurance policy, a deductible will apply to claims arising from damage to or loss of the policy holder's own vehicle, whether this damage/loss is caused by accidents for which the holder is responsible, or vandalism and theft. Third-party liability coverage generally has no deductible, since the third party will likely attempt to recover any loss, however small, for which the policy holder is liable.

Most health insurance policies and some travel insurance policies have deductibles as well. The type of health insurance deductibles can also vary, as individual amounts and family amounts. Major medical insurance policies are known for often having a deductible which does not cover the cost of routine visits (e.g., to a doctor's office).

For example, a person might have an auto insurance policy with a $500 deductible on collision coverage. If this person were in an accident that did $800 worth of damage to the car, then the insurance company would pay him or her $300. The insured is responsible for the first $500 of damage (the deductible), and the insurance company pays the balance. In industrial risks it is also common for the deductible to be expressed as a percentage of the loss, often though not always, with a minimum and maximum amount, for example 10% of loss minimum 1,500USD max 5,000USD. Therefore in the event of a claim totaling 25,000USD the applicable deductible is 2,500 (i.e. 10% of the loss), meaning that the assured would receive an indemnity payment from the insurer of 22,500USD. If the claim only amounts to 7,500USD then the applicable deductible is 1,500USD and not 10% of the loss, since 10% is below the minimum deductible level. Similarly, in this instance, for losses above 50,000USD the deductible will never be more than 5,000USD. Deductibles can also differ depending on the cause of the claim: the same policy can contain varying deductibles which are applied to loss or damage arising from theft, fire, natural perils, etc.

For example a plastics factory may have a deductible of 10,000 for theft, 50,000 for natural perils and 100,000 for fire.

There are two types of deductibles:
- Straight deductible: A straight deductible is a deductible that applies to each separate loss, and is the type of deductible in most personal lines of insurance. For instance, if, during the course of a year, you are involved in 2 separate auto accidents, then the deductible will be subtracted for each accident.
- Aggregate deductible:
Commercial insurance often has an aggregate deductible, which is the total deductible for a given policy period. For instance, if a business has property insurance with an aggregate deductible of $10,000, then the business will have to cover the 1st $10,000 worth of losses for each policy period - usually a year. So if, during the course of a year, a business has 3 separate losses of $2,000, then $6,000, then $4,000, the business will be have to cover $10,000 of its losses, but will receive $2,000 from its insurance company for the last loss. Any more losses that occur within the same policy period will be fully covered. So if the business has another loss of $3,000, it will receive the full amount from its insurer.
An aggregate deductible makes more sense in commercial insurance, since businesses can have many separate losses during the course of a year, but would be unusual for an individual to experience multiple losses within a year.


A deductible should never be confused with a franchise, the latter representing a threshold which needs to be exceeded in order for the insurer to be liable for the entirety of the claim. In other words, with a franchise of 20,000 USD a claim of 19,900 USD is borne entirely by the assured whereas in the event of a claim totaling 20,500 USD the insurer would be liable for the whole amount.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.FranchiseSpecification' originalName='FranchiseSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification' isAbstract='false'>
    <Description>This concept defines one franchise of a product coverage.

A franchise is similar to a deductible in that the insurer makes no settlement if the total claim is below the franchise figure. However, if the claim is above the franchise figure, the claim is paid in full. Franchises are very unusual in modern insurance practice though machinery breakdown covers sometimes use time franchises.
It can be interpreted in amount, percentage, time unit.

Franchise clause: Clause found in a marine insurance policy that states that the policy will not pay any claims less than a given amount but will pay claims in excess of that amount. The purpose of this clause is to eliminate the costs associated with processing small claims because their costs could easily exceed the actual amount of the claim. This is a form of deductible insurance.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.LimitSpecification' originalName='LimitSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification' isAbstract='false'>
    <Description>This concept represents a more specific property specification that outlines details around a limit of a given benefit.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.PremiumSpecification' originalName='PremiumSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification' isAbstract='false'>
    <AttributeProperty isSynthetic='true' name='exposureBase' originalName='exposureBase' assignable='true' index='0'>
      <Description>The basis to which rates are applied to determine premium. Exposures may be measured by payroll (as in workers compensation or general liability), receipts, sales, square footage, area, man hours, etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.RuleSpecification' originalName='RuleSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElement' isAbstract='false'>
    <Description>A business rule that governs the administration of the agreement, or of a  request issued under such an agreement.

These rules offer a place to capture very specific composition rules regarding product definition.

e.g: A particular product can only be sold to residents of Belgium.</Description>
    <AttributeProperty isSynthetic='true' name='canBeOverwrittenIndicator' originalName='canBeOverwrittenIndicator' assignable='true' index='3'>
      <Description>Indicates an allowance for an override of a business rule that governs the administration of an agreement, or of a request issued under such an agreement.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='commentOnFailure' originalName='commentOnFailure' assignable='true' index='2'>
      <Description>A free-text string used to comment on the failure of the rule specification. This comment may reveal useful information to an end-user, such as the corrective or alternative actions to take when the rule is violated.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='formalDefinition' originalName='formalDefinition' assignable='true' index='0'>
      <Description>The statement in formal language, actuarial mathematics or pseudo-code used to explain the content of the calculation specification</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='ruleKindCode' originalName='ruleKindCode' assignable='true' index='1'>
      <Description>An indication of when to use the rule specification. 
 
e.g: Communication rule. 
 
e.g: Data capture rule. 
 
e.g: Eligibility rule. 
 
e.g: Producer rule. 
 
e.g: Payment-related rule. 
 
e.g: Process rule. 
 
e.g: Product rule. 
 
e.g: Risk assessment rule.</Description>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationCodeLists.RuleKindCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='inputparameter' originalName='input parameter' assignable='true' index='4' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='RuleSpecificationForinputparameter' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.WaitingPeriodDeductibleSpecification' originalName='WaitingPeriodDeductibleSpecification' superclassName='org.acord.aim.ProductSpecification.ProductSpecificationElementSubtypes.AttributeSpecification' isAbstract='false'>
    <Description>This concept defines one waiting period of a product coverage.

Waiting period deductible: 
(1) A deductible provision sometimes used in business interruption and other time element policies, in lieu of a currency amount deductible, that establishes that the insurer is not responsible for loss suffered during a specified period of time (such as 72 hours) immediately following a direct damage loss. 
(2) A deductible mechanism in disability income policies and under workers compensation statutes that establishes a period of time which must pass following an accident or illness causing disability before salary continuation benefits are payable.
Synonym: Elimination period.

SOURCE: http://www.irmi.com/online/insurance-glossary/terms/w/waiting-period-deductible.aspx</Description>
    <RelationshipProperty isSynthetic='true' name='maximumWaitingPeriodDuration' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='minimumWaitingPeriodDuration' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.AgreementRegistration' originalName='AgreementRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>The formal registering of an agreement with a recognized authority. Note: Some types of agreements need to be registered with a governing authority.
 
e.g: The retirement agreement of Michel Beau being registered as a 401K plan.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.AnimalRegistration' originalName='AnimalRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>The formal registering of an animal with a recognized authority.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.CatastropheRegistration' originalName='CatastropheRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>A catastrophe registration represents the official recognition that a catastrophic event has taken place.</Description>
    <RelationshipProperty isSynthetic='true' name='CatastropheRegistrationOnCatastropheCategory' originalName='CatastropheRegistration On CatastropheCategory' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.CatastropheCategory</TypeName>
      <RelationshipProperty isSynthetic='true' name='CatastropheRegistrationForCatastropheRegistrationOnCatastropheCategory' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CatastropheRegistrationOnPlace' originalName='CatastropheRegistration On Place' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='CatastropheRegistrationForCatastropheRegistrationOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CatastropheRegistrationRegistersEvent' originalName='CatastropheRegistration Registers Event' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <Description>This relationship links a catastrophe registration with one or more corresponding events.</Description>
      <TypeName>org.acord.aim.Event.Event</TypeName>
      <RelationshipProperty isSynthetic='true' name='CatastropheRegistrationForCatastropheRegistrationRegistersEvent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.DrugRegistration' originalName='DrugRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>A recording by the official health care authorities of drug identifying information.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.FundRegistration' originalName='FundRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>A formal recording by an authorized body of a fund managed by a financial services company.</Description>
    <AttributeProperty isSynthetic='true' name='exchangeTradedCode' originalName='exchangeTradedCode' assignable='true' index='0'>
      <Description>It identifies the Exchange upon which the organization is traded.

It is the name of the Stock Market.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ExchangeTradedCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistration' originalName='PartyRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>This super-type is used for the identification of a party through specific country attributes.
Some data about a party can be used as a way to identify it. For example, the tax file id can be used to quickly identify a person or an organization. 
This relationship allows to attach such identification data to a party.  Some identification data can be common to several parties: for example a social security id can be shared with the children of a person.

An official recognition related to a role player. 
 
e.g: A driving license.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.ProductRegistration' originalName='ProductRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>The formal registering of a marketable product with a recognized authority.</Description>
    <RelationshipProperty isSynthetic='true' name='ProductRegistrationRegistersProductSpecification' originalName='ProductRegistration Registers ProductSpecification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProductRegistrationForProductRegistrationRegistersProductSpecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.Registration' originalName='Registration' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>A formal recording, by an authorized body, of the granting of rights, privileges, favors, statuses, or qualifications. Registrations are important from the perspective of being a qualified source of information. They are similar to assessments in the respect that the associated information can be considered more reliable than the same information not associated with a registration.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>A free-text statement used to explain the meaning of the registration.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='disqualificationReasonCode' originalName='disqualificationReasonCode' assignable='true' index='1'>
      <Description>The reason explaining why the registration was disqualified. 
Derived from the status related information.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.StatusReasonCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='identifier' originalName='identifier' assignable='true' index='4'>
      <Description>This is the registration identifier assigned by the registration authority.

e.g. driver's license number, vehicle registration number, passport number, tax id number, social security number (SSN), Federal Employment Information Number (FEIN), National Insurance Producer Registry Number (NIPR), International Securities Identification Number (ISIN), etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='registrationAuthorityTypeCode' originalName='registrationAuthorityTypeCode' assignable='true' index='5'>
      <Description>A code indicating the type of registration authority.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusCode' originalName='statusCode' assignable='true' index='2'>
      <Description>The current status of the registration within the life-cycle model.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusReasonCode' originalName='statusReasonCode' assignable='true' index='3'>
      <Description>The reason explaining why there was a status change.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='disqualificationDate' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastUsedDate' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='lastVerifiedDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='RegistrationOnPlace' originalName='Registration On Place' assignable='true' index='12' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='RegistrationForRegistrationOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='requestDate' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.Registry' originalName='Registry' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents a repository of registrations (e.g. the department of motor vehicles registry of vehicle registrations).</Description>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>This concept represents the name of a registry.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='RegistryIncludesRegistration' originalName='Registry Includes Registration' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.Registration</TypeName>
      <RelationshipProperty isSynthetic='true' name='RegistryForRegistryIncludesRegistration' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.RegistryAuthority' originalName='RegistryAuthority' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRegistration' isAbstract='false'>
    <Description>A party role, in the context of a registration, where a party provides a registration and the related details for the resulting registry and its registrations.</Description>
    <RelationshipProperty isSynthetic='true' name='RegistryAuthorityAdministersRegistry' originalName='RegistryAuthority Administers Registry' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.Registry</TypeName>
      <RelationshipProperty isSynthetic='true' name='RegistryAuthorityForRegistryAuthorityAdministersRegistry' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='RegistryAuthorityOnPlace' originalName='RegistryAuthority On Place' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='RegistryAuthorityForRegistryAuthorityOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.VehicleRegistration' originalName='VehicleRegistration' superclassName='org.acord.aim.Registration.Registration' isAbstract='false'>
    <Description>A recording by the Vehicle authorities of Vehicle identifying information. 
 
e.g: Car registration number HAN606K.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.BankRegistration' originalName='BankRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.FinancialServicesCompanyRegistration' isAbstract='false'>
    <Description>An authorization, often by a regulatory body, granting the right to conduct certain classes of banking or investment business in given territories. This has usually to be granted on top of a normal company registration.

A bank registration is authorized by a central bank, a Bank Supervisory Body or a Bankers Association in a country assigned to all its licensed member banks. The rules vary to great extent between the countries.</Description>
    <RelationshipProperty isSynthetic='true' name='BankRegistrationOnBank' originalName='BankRegistration On Bank' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Bank</TypeName>
      <RelationshipProperty isSynthetic='true' name='BankRegistrationForBankRegistrationOnBank' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.BirthCertificate' originalName='BirthCertificate' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>An official recognition of the birth of a person.</Description>
    <RelationshipProperty isSynthetic='true' name='registeredBirthDate' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.CivilRegistration' originalName='CivilRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>This concept defines the characteristics of a civil registration that associates two persons (e.g. marriage, common-law marriage, civil union, etc.).</Description>
    <RelationshipProperty isSynthetic='true' name='CivilRegistrationOnPerson' originalName='CivilRegistration On Person' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <Description>This represents the civil registration to which a person is a registrant.</Description>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='true' name='CivilRegistrationForCivilRegistrationOnPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.DeathCertificate' originalName='DeathCertificate' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>An official recognition that a person has died. The registering of death impacts the insurer from the perspective of payments. Although notification of death will usually stop the insurer from trying to contact the deceased, it is only the formal registration of death that authorizes the payment of the life insurance policy value.</Description>
    <RelationshipProperty isSynthetic='true' name='DeathCertificateOnDeath' originalName='DeathCertificate On Death' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.AssessmentandCondition.AssessmentResultSubtypes.Death</TypeName>
      <RelationshipProperty isSynthetic='true' name='DeathCertificateForDeathCertificateOnDeath' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='registeredDeathDate' assignable='true' index='0' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.DriverLicense' originalName='DriverLicense' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>This concept defines the characteristics of a Driving License of a person.</Description>
    <AttributeProperty isSynthetic='true' name='drivingPointsCount' originalName='drivingPointsCount' assignable='true' index='2'>
      <Description>The total driving points attributed to the driver by the driving license authority. The points count are decreased (or increased) as the driver gets convicted or fined for driving violations.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='restrictionsCode' originalName='restrictionsCode' assignable='true' index='1'>
      <Description>Any driving restrictions applying to the driving license. 
 
e.g: Corrective lenses 
 
e.g: Miscellaneous restriction 
 
e.g: No driving on weekend 
 
e.g: No passengers. 
 
e.g: Temporary license</Description>
      <TypeName>org.acord.aim.Registration.RegistrationCodeLists.DrivingRestrictionsCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>A code indicating the status of a driver license.</Description>
      <TypeName>org.acord.aim.Registration.RegistrationCodeLists.LicenseStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='DriverLicenseOnDriverLicenseClassification' originalName='DriverLicense On DriverLicenseClassification' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.DriverLicenseClassification</TypeName>
      <RelationshipProperty isSynthetic='true' name='DriverLicenseForDriverLicenseOnDriverLicenseClassification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.DriverLicenseClassification' originalName='DriverLicenseClassification' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept represents the classification of a driver license as related to authorization granted for various types of vehicles and the like.</Description>
    <AttributeProperty isSynthetic='true' name='commercialEndorsement' originalName='commercialEndorsement' assignable='true' index='2'>
      <Description>The classification of certain types of vehicles and/or cargo being transported for which driving authority has been granted by the driving license.

Example:
USA: M (Metal coil)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleClassCode' originalName='vehicleClassCode' assignable='true' index='0'>
      <Description>The kind of road vehicle that may be driven with the driving license. 
 
e.g: A (Motorcycles) 
 
e.g: B (Cars and light trucks) 
 
e.g: C (B plus Vehicles carrying 16 or more passengers) 
 
e.g: D (B plus Heavy trucks with trailers)</Description>
      <TypeName>org.acord.aim.Registration.RegistrationCodeLists.VehicleClassCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vehicleSubClass' originalName='vehicleSubClass' assignable='true' index='1'>
      <Description>A further refinement of the classification of a driving license.

Examples:
Alberta, Canada: Learner's Permit (Class 7)
USA: Class A - Combination (tractor plus trailer) vehicle of 26,000 lb (11,790 kg) or more. Includes split (coupled) buses.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.EducationCertificate' originalName='EducationCertificate' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>A record of information about an individual's professional, academic, or other qualifications. 
 
e.g: Chris Mahon's Degree certificate B.S. Actuarial Science.</Description>
    <AttributeProperty isSynthetic='true' name='gradeCode' originalName='gradeCode' assignable='true' index='2'>
      <Description>The rating awarded for the education certificate. 
 
e.g: 3.7 
 
e.g: B 
 
e.g: honors 
 
e.g: II.I 
 
e.g: magna cum laude 
 
e.g: Black Belt 
 
e.g: Brown Belt 
 
e.g: Fail 
 
e.g: Pass 
 
e.g: Senior</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.EducationGradeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='levelCode' originalName='levelCode' assignable='true' index='1'>
      <Description>The academic level of the education certificate. 
 
e.g: Professional certification</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.EducationCertificateLevelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='3'>
      <Description>The formal name of the education certificate. 
 
e.g: Degree in Information Technology</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='subjectAreaCode' originalName='subjectAreaCode' assignable='true' index='0'>
      <Description>The subject area, skill, or area of expertise for the education certificate. 
 
e.g: Accountancy 
 
e.g: Actuarial 
 
e.g: Information Technology 
 
e.g: Insurance</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.SubjectAreaCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='titleCode' originalName='titleCode' assignable='true' index='4'>
      <Description>The abbreviation of the qualification name, typically used as a suffix to a person's name. 
 
e.g: BSc 
 
e.g: CLU 
 
e.g: FCII 
 
e.g: Ph.D.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.EducationCertificateTitleCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.FinancialServicesCompanyRegistration' originalName='FinancialServicesCompanyRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PartyRoleRegistration' isAbstract='true'>
    <Description>This is the super type for all financial services company registrations.</Description>
    <RelationshipProperty isSynthetic='true' name='FinancialServicesCompanyRegistrationOnProductGroup' originalName='FinancialServicesCompanyRegistration On ProductGroup' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Category.ProductGroup</TypeName>
      <RelationshipProperty isSynthetic='true' name='FinancialServicesCompanyRegistrationForFinancialServicesCompanyRegistrationOnProductGroup' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.HealthCareProviderRegistration' originalName='HealthCareProviderRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PartyRoleRegistration' isAbstract='false'>
    <Description>An official registration of a health care provider by the modeled organization or any other official authority. 
 
e.g: Dr. Luigi's health care provider registration as a member of the Belgian National Council of Physicians</Description>
    <AttributeProperty isSynthetic='true' name='taxonomyCode' originalName='taxonomyCode' assignable='true' index='0'>
      <Description>Code designating the provider type, classification, and specialization.</Description>
      <TypeName>org.acord.aim.Registration.RegistrationCodeLists.TaxonomyCodeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='HealthCareProviderRegistrationOnHealthCareProvider' originalName='HealthCareProviderRegistration On HealthCareProvider' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.HealthCareProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='HealthCareProviderRegistrationForHealthCareProviderRegistrationOnHealthCareProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.HospitalLicense' originalName='HospitalLicense' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.HealthCareProviderRegistration' isAbstract='false'>
    <Description>An indication of legal authority granting the hospital the right to conduct health-care activities.</Description>
    <AttributeProperty isSynthetic='true' name='bedCount' originalName='bedCount' assignable='true' index='0'>
      <Description>Registered number of licensed beds in a hospital.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.IdentityCard' originalName='IdentityCard' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>This concept stands for an Identity Card.</Description>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>Status of the ID card</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.IncomeTaxRegistration' originalName='IncomeTaxRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.TaxRegistration' isAbstract='false'>
    <Description>A registration issued by a tax assessing and collection authority to identify the tax paying status and history of a party. An income tax  number is expressed in the external reference. 
 
e.g: Wilson Grayson's personal income tax (tax type) number 93667ME and status of fully taxed (tax status).</Description>
    <AttributeProperty isSynthetic='true' name='estimatedTaxBracketPercentage' originalName='estimatedTaxBracketPercentage' assignable='true' index='0'>
      <Description>Estimated marginal tax bracket. This is the total percentage of additional tax paid on each additional amount of income. It contains the total of all taxes that apply to a party such as city, state, and country taxes.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.InsuranceProviderRegistration' originalName='InsuranceProviderRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.FinancialServicesCompanyRegistration' isAbstract='false'>
    <Description>An authorization, often by a regulatory body, granting the right to conduct certain classes of insurance or investment business in given territories. This has usually to be granted on top of a normal company registration. 
 
e.g: DTI authorization for Acme Insurance Company to operate in the United Kingdom.
 
e.g: Registration of Acme Insurance Company, registered by the National Association of Insurance Commissioners (NAIC).</Description>
    <RelationshipProperty isSynthetic='true' name='InsuranceProviderRegistrationOnInsuranceProvider' originalName='InsuranceProviderRegistration On InsuranceProvider' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsuranceProviderRegistrationForInsuranceProviderRegistrationOnInsuranceProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.MembershipRegistration' originalName='MembershipRegistration' superclassName='org.acord.aim.Registration.PartyRegistration' isAbstract='false'>
    <Description>This concept is a generalizing concept describing how a party is a member of a society, club, etc.

e.g. AARP, Rotary Club, Society of CPCU, etc.</Description>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>Defines the status of the membership, such as Active, Inactive, Suspended, etc.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.MembershipStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='MembershipRegistrationRegistersParty' originalName='MembershipRegistration Registers Party' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <Description>This represents the membership registration to which a party is a member.</Description>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='MembershipRegistrationForMembershipRegistrationRegistersParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.MilitaryRegistration' originalName='MilitaryRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>This concept defines the characteristics of a military registration of a person.</Description>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.OrganizationRegistration' originalName='OrganizationRegistration' superclassName='org.acord.aim.Registration.PartyRegistration' isAbstract='false'>
    <Description>This concept provides information identifying an organization. The unique identifier is represented by the RegistrationIdentifier attribute on Registration and the IsRegisteredBy represents the authority providing the identifier.

e.g: The DUNS number assigned to the company by Dun &amp; Bradstreet
Source: www.dnb.com

e.g. The SIREN number is an official identification number for companies registered in France.</Description>
    <AttributeProperty isSynthetic='true' name='registrationAuthorityTypeCode' originalName='registrationAuthorityTypeCode' assignable='true' index='0'>
      <Description>A code indicating the type of registration authority associated with an organization.</Description>
      <TypeName>org.acord.aim.Registration.RegistrationCodeLists.OrganizationRegistrationAuthorityTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.PartyRoleRegistration' originalName='PartyRoleRegistration' superclassName='org.acord.aim.Registration.PartyRegistration' isAbstract='true'>
    <Description>This is the super type for all party role registrations.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.Passport' originalName='Passport' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>This concept represents a country registration stands for a passport.</Description>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>Status of the passport</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.ValidityStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonalActivityLicense' originalName='PersonalActivityLicense' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>A license to perform a particular activity either as a hobby or as an occupation.</Description>
    <AttributeProperty isSynthetic='true' name='competitionLicenseIndicator' originalName='competitionLicenseIndicator' assignable='true' index='0'>
      <Description>Indicates whether this activity license allows the holder of the license to take part in competition for this activity.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='1'>
      <Description>The formal name of the activity license.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='renewalIntentionIndicator' originalName='renewalIntentionIndicator' assignable='true' index='2'>
      <Description>Indicates whether the holder of this activity license intents to renew his license when it expires.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='requiredInstructionDuration' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' originalName='PersonRegistration' superclassName='org.acord.aim.Registration.PartyRegistration' isAbstract='false'>
    <Description>A set of registrations covering all nationality-dependent registrations such as social security, taxes, passport, identity card. This concept provides a means of recording identifications of persons that relate to official identification (example : documents such as passport ids, driving licenses ids, national identities, etc ...).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerRegistration' originalName='ProducerRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PartyRoleRegistration' isAbstract='false'>
    <Description>A registration by an authorized body granting individuals or organizations the right to conduct insurance business in a particular jurisdiction (such as a county or state) in general or as part of a certain network. 
 
e.g: Registration of the agent John in the Lloyd's network of agents and underwriters, registered by the LLoyd's signing office.

e.g: John Doe's broker registration.

NOTE: The registration of a producer does not involve the relationship producers have with insurance companies.</Description>
    <AttributeProperty isSynthetic='true' name='registrationAuthorityTypeCode' originalName='registrationAuthorityTypeCode' assignable='true' index='0'>
      <Description>A code indicating the type of registration authority associated with a producer.</Description>
      <TypeName>org.acord.aim.Registration.RegistrationCodeLists.ProducerRegistrationAuthorityTypeCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='ProducerRegistrationOnInsuranceProducer' originalName='ProducerRegistration On InsuranceProducer' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProducer</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProducerRegistrationForProducerRegistrationOnInsuranceProducer' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.ResidentRegistration' originalName='ResidentRegistration' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <Description>This concept defines the characteristics of a resident registration of a person.

For example, in the USA a Green Card or Permanent Resident Card is the card that shows that someone who is not a United States citizen is a permanent resident of the United States. The holder of the card is allowed to live, work and study in the United States.

SOURCE: http://simple.wikipedia.org/wiki/Green_card</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.Registration.PartyRegistrationSubtypes.TaxRegistration' originalName='TaxRegistration' superclassName='org.acord.aim.Registration.PartyRegistration' isAbstract='false'>
    <Description>A registration issued by a tax assessing and collection authority to identify the tax paying status and history of a party.

e.g. The Social Security Number (SSN) for a person in the USA.

The Federal Employment Information Number (FEIN) for an organization in the USA.</Description>
    <AttributeProperty isSynthetic='true' name='calculationTypeCode' originalName='calculationTypeCode' assignable='true' index='0'>
      <Description>A code indicating how taxation has been taken into consideration when calculating the values represented by analytical measures.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.TaxCalculationCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='membershipType' originalName='membershipType' assignable='true' index='1'>
      <Description>For instance, it specifies the social security membership type such a principal contract holder, or an attached one.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.CommonRegistrationAuthorityTypeCodeList' originalName='CommonRegistrationAuthorityTypeCodeList' restricts='java.lang.String'>
    <Enumerand isSynthetic='true' name='DunBradstreet' generator='Dun &amp; Bradstreet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentAgency' generator='Government Agency'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NAIC' generator='NAIC'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NIPR' generator='NIPR'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.DrivingRestrictionsCodeList' originalName='DrivingRestrictionsCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of DrivingLicenses according to their driving restrictions.</Description>
    <Enumerand isSynthetic='true' name='CorrectiveLenses' generator='Corrective Lenses'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MiscellaneousRestriction' generator='Miscellaneous Restriction'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NoDrivingOnWeekend' generator='No Driving On Weekend'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NoPassengers' generator='No Passengers'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='TemporaryLicense' generator='Temporary License'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.LicenseStatusCodeList' originalName='LicenseStatusCodeList' restricts='java.lang.String'>
    <Description>It identifies the status of this license</Description>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Expired' generator='Expired'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LapsedIntentionally' generator='Lapsed Intentionally'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Pending' generator='Pending'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Revoked' generator='Revoked'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Temporary' generator='Temporary'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.OrganizationRegistrationAuthorityTypeCodeList' originalName='OrganizationRegistrationAuthorityTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the type of registration authority associated with an organization.</Description>
    <Enumerand isSynthetic='true' name='DunBradstreet' generator='Dun &amp; Bradstreet'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NAIC' generator='NAIC'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentAgency' generator='Government Agency'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.ProducerRegistrationAuthorityTypeCodeList' originalName='ProducerRegistrationAuthorityTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the type of registration authority associated with a producer.</Description>
    <Enumerand isSynthetic='true' name='NAIC' generator='NAIC'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NIPR' generator='NIPR'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GovernmentAgency' generator='Government Agency'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.RegistrationAuthorityTypeCodeList' originalName='RegistrationAuthorityTypeCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the type of registration authority.</Description>
    <Enumerand isSynthetic='true' name='GovernmentAgency' generator='Government Agency'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.RegistrationStatusCodeList' originalName='RegistrationStatusCodeList' restricts='java.lang.String'>
    <Description>Possible life cycle states for registration.</Description>
    <Enumerand isSynthetic='true' name='Draft' generator='Draft'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Requested' generator='Requested'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Issued' generator='Issued'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Effective' generator='Effective'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Expired' generator='Expired'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Rejected' generator='Rejected'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Disqualified' generator='Disqualified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Temporary' generator='Temporary'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Revoked' generator='Revoked'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inactive' generator='Inactive'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.TaxonomyCodeCodeList' originalName='TaxonomyCodeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of HealthCareProviders according to their taxonomy code.</Description>
    <Enumerand isSynthetic='true' name='_1579' generator='1579'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.Registration.RegistrationCodeLists.VehicleClassCodeList' originalName='VehicleClassCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of DrivingLicenses according to their vehicle class.</Description>
    <Enumerand isSynthetic='true' name='Chauffeur' generator='Chauffeur'>
      <Description>Chauffeur</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Commercial' generator='Commercial'>
      <Description>Commercial</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Enhanced' generator='Enhanced'>
      <Description>Enhanced</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Motorcycle' generator='Motorcycle'>
      <Description>Motorcycle</Description>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.Capability' originalName='Capability' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <Description>This concept defines the abilities of a given role, at a specified level for a range of dates. NOTE: This is not a substitution for the concept of occupation or employment functions. Rather, this provides for the function of a party role and the degree or scale to which it is capable of performing said function.

e.g. An insurance company may have the capability to issue and administer only personal automobile policies.

e.g. An underwriter may have the capability / authorization to quote and/or issue policies up to a certain limit and/or premium amount.

e.g. A loss adjuster may have authority to settle and/or pay claims up to certain limits.

e.g: An auto repair shop may be full service or only provide for glass repair.</Description>
    <AttributeProperty isSynthetic='true' name='authorizationLevel' originalName='authorizationLevel' assignable='true' index='2'>
      <Description>The authorization level of the party as related to a given capability.

e.g. An underwriter has authorization to quote and/or issue policies up to certain coverage limits and/or up to a certain premium amount.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='1'>
      <Description>Description of the expert competence to define in which type of claim the expert can intervene.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='0'>
      <Description>Name of the expert competence.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='proficiencyLevelCode' originalName='proficiencyLevelCode' assignable='true' index='3'>
      <Description>This is the degree to which a party is proficient with a particular capability/function/skill.

e.g. An underwriter trainee is not as proficient as a seasoned underwriter who may have several years of experience.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProficiencyLevelCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='availablePeriod' assignable='true' index='4' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='CapabilityOwnsCapability' originalName='Capability Owns Capability' assignable='true' index='5' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.Capability</TypeName>
      <RelationshipProperty isSynthetic='true' name='CapabilityForCapabilityOwnsCapability' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRole' originalName='PartyRole' superclassName='org.acord.aim.RoleandRelationship.Role' isAbstract='false'>
    <Description>This concept is the generalizing concept of all types of party roles.</Description>
    <RelationshipProperty isSynthetic='true' name='PartyRoleOnContactPreference' originalName='PartyRole On ContactPreference' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPreference</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleForPartyRoleOnContactPreference' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRoleOnParty' originalName='PartyRole On Party' assignable='true' index='3' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleForPartyRoleOnParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRoleOnPartyName' originalName='PartyRole On PartyName' assignable='true' index='2' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PartyName.PartyName</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleForPartyRoleOnPartyName' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRoleOwnsCapability' originalName='PartyRole Owns Capability' assignable='true' index='1' cardinality='One2Many' containment='true' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.Capability</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleForPartyRoleOwnsCapability' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='WebAddress' assignable='true' typeInferred='false'>
      <TypeName>org.acord.aim.ContactandPlace.ContactPoint</TypeName>
      <GetterMethod isSynthetic='false' name='getWebAddress' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <SelectExpression isSynthetic='false' variableName='element'>
          <PathExpression isSynthetic='false' pathString='PartyRoleOnContactPreference'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='typeName'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
            <Literal isSynthetic='false' typeName='java.lang.String' literalString='WebAddress'>
            </Literal>
          </MethodExpression>
          <PathExpression isSynthetic='false' pathString='ContactPreferenceOnContactPoint'>
            <VariablePathRoot isSynthetic='false' variableName='element'>
            </VariablePathRoot>
          </PathExpression>
        </SelectExpression>
      </GetterMethod>
    </CustomProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationship' originalName='PartyRoleRelationship' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept is the general notion gathering all relationships between party roles (played by person or organizations).</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='status' originalName='status' assignable='true' index='1'>
      <Description>Status of the relationship</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRoleRelationshipInvolvesPartyRole' originalName='PartyRoleRelationship Involves PartyRole' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRole</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleRelationshipForPartyRoleRelationshipInvolvesPartyRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRole' originalName='PhysicalObjectRole' superclassName='org.acord.aim.RoleandRelationship.Role' isAbstract='false'>
    <Description>This concept is the generalizing concept of all types of physical object roles.</Description>
    <RelationshipProperty isSynthetic='true' name='PhysicalObjectRolePlayedByPhysicalObject' originalName='PhysicalObjectRole Played By PhysicalObject' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='PhysicalObjectRoleForPhysicalObjectRolePlayedByPhysicalObject' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.Role' originalName='Role' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='true'>
    <Description>This concept is the generalizing concept of all types of roles. 

e.g. Jane Doe is a person who, within the context of insurance, may play the role of "insured" and "driver" on a policy.</Description>
    <AttributeProperty isSynthetic='true' name='description' originalName='description' assignable='true' index='0'>
      <Description>Free text describing the role</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='effectivePeriod' assignable='true' index='1' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='rolePeriod' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.TimePeriod</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='RolePlayingRole' originalName='Role Playing Role' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This represents the role player playing a role.

For example, an "insurance producer" (role) playing the role of "agreement producer" on an insurance agreement. The "insurance producer" role is the "playerRole".</Description>
      <TypeName>org.acord.aim.RoleandRelationship.Role</TypeName>
      <RelationshipProperty isSynthetic='true' name='RoleForRolePlayingRole' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes.Child' originalName='Child' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' isAbstract='false'>
    <Description>This concept represents a child.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes.Cousin' originalName='Cousin' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' isAbstract='false'>
    <Description>This concept represents a cousin.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes.Parent' originalName='Parent' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' isAbstract='false'>
    <Description>This concept represents a parent.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes.ParentSibling' originalName='ParentSibling' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' isAbstract='false'>
    <Description>This concept represents a parent's sibling (e.g. aunt, uncle).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes.Sibling' originalName='Sibling' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' isAbstract='false'>
    <Description>This concept represents a sibling.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.FamilyMemberSubtypes.SiblingChild' originalName='SiblingChild' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' isAbstract='false'>
    <Description>This concept represents a sibling's child (e.g. niece, nephew).</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ChildOrganization' originalName='ChildOrganization' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This concept represents an organization's role as a child in relation to another organization's related role of parent (e.g. child organization or subsidiary and its parent organization, the child organization unit/department and its parent organization).

e.g. Chevrolet is a child/subsidiary of General Motors Company.

e.g. The accounting department is an organization unit within General Motors Company.</Description>
    <RelationshipProperty isSynthetic='true' name='ChildOrganizationParticipatesInOrganizationRelationship' originalName='ChildOrganization Participates In OrganizationRelationship' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.OrganizationRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ChildOrganizationForChildOrganizationParticipatesInOrganizationRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Customer' originalName='Customer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>A party (e.g. person or organization) to whom services, goods or benefits are currently, have been previously or will be supplied.

A party to whom another party has sold or wants to sell products and/or services. 

e.g: Jane Doe as a prospective customer of Acme Insurance Company. John Smith as a current customer of Acme Services Company.</Description>
    <AttributeProperty isSynthetic='true' name='claimCount' originalName='claimCount' assignable='true' index='1'>
      <Description>The total number of claims, across all line of business, related to this customer. It only  includes claims made to the modeled organization.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='importanceLevelCode' originalName='importanceLevelCode' assignable='true' index='0'>
      <Description>The level of importance the customer has to the modeled organization. 
 
e.g: 1 (Highest priority/ VIP) 
 
e.g: 2 (High priority) 
 
e.g: 3 (Normal priority) 
 
e.g: 4 (Low priority)</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CustomerImportanceLevelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='2'>
      <Description>The current status of the customer within the life-cycle model. 
 
e.g: Active 
 
e.g: Ex-Customer 
 
e.g: Prospect 
 
e.g: Suspect</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CustomerStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimAmount' assignable='true' index='3' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Employee' originalName='Employee' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>The role played by the person who is employed in an employment agreement by an employer (even if the employment agreement itself is not instantiated). An employee is not considered a contractor.
 
e.g: John Doe, as the employee of a company under an employment agreement starting 06/11/95</Description>
    <AttributeProperty isSynthetic='true' name='exemptIndicator' originalName='exemptIndicator' assignable='true' index='4'>
      <Description>Indicates whether the employee is exempt or non-exempt.

In the USA, this is associated with being paid on a basis that is not subject to the 40 hour work week, minimum wage, and overtime rules. Such jobs are therefore considered "exempt". Conversely, jobs that are non-exempt pay salaries subject to concepts such as time worked, overtime rules, etc.

SOURCES:
http://blogs.payscale.com/ask_dr_salary/2007/01/hourly_wage_vs_.html

http://en.wikipedia.org/wiki/Salary</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='jobDescription' originalName='jobDescription' assignable='true' index='0'>
      <Description>The textual description of the job the employee executes under the terms of his employment agreement.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='jobTitleCode' originalName='jobTitleCode' assignable='true' index='2'>
      <Description>The job title of the position held by the employee. 
 
e.g: Chief Executive Officer 
 
e.g: Clerk 
 
e.g: Managing Director 
 
e.g: Marketing Manager</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.JobTitleCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pensionableIndicator' originalName='pensionableIndicator' assignable='true' index='3'>
      <Description>Indicates whether the employee has a job that gives him rights to a pension.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='salaryGradeCode' originalName='salaryGradeCode' assignable='true' index='5'>
      <Description>Indicates the salary or wage level of an employee.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.SalaryGradeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='skillLevelCode' originalName='skillLevelCode' assignable='true' index='1'>
      <Description>The overall skill level of the employee. 
 
e.g: Professional 
 
e.g: Semi-skilled 
 
e.g: Skilled 
 
e.g: Unskilled</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProficiencyLevelCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='annualTaxableBenefitAmount' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='baseSalaryAmount' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='bonusSalaryAmount' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='EmployeeServicesEmploymentRelationship' originalName='Employee Services EmploymentRelationship' assignable='true' index='9' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.EmploymentRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='EmployeeForEmployeeServicesEmploymentRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Employer' originalName='Employer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>An employer is a party role where the party (e.g. organization or person) is utilizing the skills or services of an employee or contractor usually for some form of compensation.</Description>
    <RelationshipProperty isSynthetic='true' name='EmployerProvidesEmploymentRelationship' originalName='Employer Provides EmploymentRelationship' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.EmploymentRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='EmployerForEmployerProvidesEmploymentRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.FamilyMember' originalName='FamilyMember' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='true'>
    <Description>This concept represents a family member (e.g. father, mother, son, daughter, aunt, etc.)</Description>
    <AttributeProperty isSynthetic='true' name='relationNatureCode' originalName='relationNatureCode' assignable='true' index='0'>
      <Description>A code indicating the nature of a family member in relation to another family member.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.FamilyRelationNatureCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='FamilyMemberProvidesForFamilyRelationship' originalName='FamilyMember Provides For FamilyRelationship' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.FamilyRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='FamilyMemberForFamilyMemberProvidesForFamilyRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.HeadOfHousehold' originalName='HeadOfHousehold' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>The role played by the person designated as "Head of Household" in a given household.

Head of Household is a filing status for individual American taxpayers.

SOURCE: http://en.wikipedia.org/wiki/Head_of_Household</Description>
    <AttributeProperty isSynthetic='true' name='maintenancePercentage' originalName='maintenancePercentage' assignable='true' index='0'>
      <Description>Head Of Household has several meanings:

1. The leader or person primarily responsible for a family.
2. An American tax filing status, the definition of which is:

Generally, to qualify for head of household status you must be unmarried, not entitled to file as a qualifying widow or widower, and have a dependent child. You must also have provided more than half the cost of maintaining, as your home, a household that was the main home for a qualifying dependent. You may also qualify for head of household status if you, though married, file a separate return and your spouse was not a member of your household during the last six months of the tax year and you provided more than half of the cost of maintaining, as your home, a household that was the main home, for more than one half of your tax year, of a child who is a qualifying dependent. 

SOURCE: http://en.wikipedia.org/wiki/Head_of_Household</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='HeadOfHouseholdHeadsHouseholdRelationship' originalName='HeadOfHousehold Heads HouseholdRelationship' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.HouseholdRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='HeadOfHouseholdForHeadOfHouseholdHeadsHouseholdRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.OtherHouseholdMember' originalName='OtherHouseholdMember' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This represents another household member. Other household members can include children, dependent adults, or independent adults living within the same household.</Description>
    <RelationshipProperty isSynthetic='true' name='OtherHouseholdMemberWithinHouseholdRelationship' originalName='OtherHouseholdMember Within HouseholdRelationship' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.HouseholdRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='OtherHouseholdMemberForOtherHouseholdMemberWithinHouseholdRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ParentOrganization' originalName='ParentOrganization' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This concept represents an organization's role as a parent in relation to another organization's related role of child (e.g. parent organization and its subsidiary, the parent organization and its organization unit/department).

e.g. General Motors Company includes Chevrolet, Cadillac and Buick

e.g. General Motors Company includes a design department and a manufacturing department.</Description>
    <RelationshipProperty isSynthetic='true' name='ParentOrganizationOwnsOrganizationRelationship' originalName='ParentOrganization Owns OrganizationRelationship' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.OrganizationRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ParentOrganizationForParentOrganizationOwnsOrganizationRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Proprietor' originalName='Proprietor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This concept represents a person's role as a proprietor in relation to a proprietorship (business entity).

For example, William Shakespeare may own and run the business entity "Shakespeare Books" where there is no legal distinction between the owner (William Shakespeare) and the business. In this scenario, William plays the role of "proprietor".</Description>
    <AttributeProperty isSynthetic='true' name='interestPercentage' originalName='interestPercentage' assignable='true' index='0'>
      <Description>The percentage of interest in the related proprietorship (e.g. percent of ownership).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='ProprietorProvidesProprietorRelationship' originalName='Proprietor Provides ProprietorRelationship' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProprietorRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProprietorForProprietorProvidesProprietorRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Proprietorship' originalName='Proprietorship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This concept represents an organization's role as a proprietorship (business entity) in relation to a proprietor (the person who owns and operates the business).

For example, William Shakespeare may own and run the business entity "Shakespeare Books" where there is no legal distinction between the owner (William Shakespeare) and the business. In this scenario, "Shakespeare Books" plays the role of "proprietorship".</Description>
    <RelationshipProperty isSynthetic='true' name='ProprietorshipProvidesProprietorRelationship' originalName='Proprietorship Provides ProprietorRelationship' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProprietorRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ProprietorshipForProprietorshipProvidesProprietorRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Representative' originalName='Representative' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This concept defines the representative role. For example : representative of an Organization or a BusinessEstablishment.</Description>
    <AttributeProperty isSynthetic='true' name='activeIndicator' originalName='activeIndicator' assignable='true' index='1'>
      <Description>Indicates whether the Representative is active or inactive.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='function' originalName='function' assignable='true' index='0'>
      <Description>Specifies the function of the representative in a business relation.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='legalIndicator' originalName='legalIndicator' assignable='true' index='2'>
      <Description>Indicates the representative is authorized as a "legal" representative.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='RepresentativeProvidesLegalRepresentation' originalName='Representative Provides LegalRepresentation' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.LegalRepresentation</TypeName>
      <RelationshipProperty isSynthetic='true' name='RepresentativeForRepresentativeProvidesLegalRepresentation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.RepresentedParty' originalName='RepresentedParty' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>The role played by a party being represented by another party.

e.g. Jane Doe was involved in an accident, which led to an insurance claim, which led to litigation and the need for legal representation by an attorney. Jane Doe is the represented party.</Description>
    <RelationshipProperty isSynthetic='true' name='lRepresentedPartyParticipatesInLegalRepresentation' originalName='lRepresentedParty Participates In LegalRepresentation' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.LegalRepresentation</TypeName>
      <RelationshipProperty isSynthetic='true' name='RepresentedPartyForlRepresentedPartyParticipatesInLegalRepresentation' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' originalName='ServiceProvider' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>A party (e.g. person or organization) that provides services to or for the organization. Examples include: physicians, inspectors, laboratories, paramedics, garages, experts, vendors and other financial institutions.

This concept is a generalizing concept for the roles possibly played by a party as a professional services provider.</Description>
    <RelationshipProperty isSynthetic='true' name='ServiceProviderProvidesCustomerRelationship' originalName='ServiceProvider Provides CustomerRelationship' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.CustomerRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ServiceProviderForServiceProviderProvidesCustomerRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ServiceProviderProvidesProfessionalServiceRelationship' originalName='ServiceProvider Provides ProfessionalServiceRelationship' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ServiceProviderForServiceProviderProvidesProfessionalServiceRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='ServiceProviderRequestsProfessionalServiceRelationship' originalName='ServiceProvider Requests ProfessionalServiceRelationship' assignable='true' index='2' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='ServiceProviderForServiceProviderRequestsProfessionalServiceRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.Spouse' originalName='Spouse' superclassName='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' isAbstract='false'>
    <Description>This concept represents a spouse (husband or wife) as related to a civil relationship.</Description>
    <AttributeProperty isSynthetic='true' name='civilRelationNatureCode' originalName='civilRelationNatureCode' assignable='true' index='0'>
      <Description>A code indicating the nature of a spouse in relation to another spouse in the context of a civil relationship.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CivilRelationNatureCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='SpouseProvidesCivilRelationship' originalName='Spouse Provides CivilRelationship' assignable='true' index='1' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.CivilRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='SpouseForSpouseProvidesCivilRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.BankDistributionRelationship' originalName='BankDistributionRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProducerRelationship' isAbstract='false'>
    <Description>This concept describes a bank distribution relationship: i.e. a bank selling insurance products on behalf of an insurance provider.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.CivilRelationship' originalName='CivilRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This represents a relationship between spouses.  The spouses may or may not reside in the same household.</Description>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='1'>
      <Description>The name of the civil relationship.

e.g. Mr. and Mrs. John and Jane Doe

NOTE: In addition to serving as the name of the civil relationship, this may also have relevance beyond the relationship. For example, a personal auto insurance policy may be issued in the names of a husband and wife and they explicitly request the policy declarations page display the named insured as  "Mr. and Mrs. John and Jane Doe" (declarations name). The declarations name is not specific to either person, or any lone party, and is technically not a party name - it is a name utilized for print or a similar function.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='0'>
      <Description>Civil status of the person.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CivilStatusCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='statusDate' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.CustomerRelationship' originalName='CustomerRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the relationship between a party acting as a Customer and another party  providing or offering products and/or services to the Customer.</Description>
    <AttributeProperty isSynthetic='true' name='benefitingFromCommercialAssistanceIndicator' originalName='benefitingFromCommercialAssistanceIndicator' assignable='true' index='2'>
      <Description>Indicator of whether Customer has benefited from commercial assistance for one particular insurer.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimCount' originalName='claimCount' assignable='true' index='11'>
      <Description>The total number of claims, across all line of business, related to this customer. It only  includes claims made to the modeled organization.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimDuringClaimPeriodCount' originalName='claimDuringClaimPeriodCount' assignable='true' index='0'>
      <Description>Total number of claims declared during a claim period in one particular insurer system.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='commercialAssistanceDescription' originalName='commercialAssistanceDescription' assignable='true' index='3'>
      <Description>Description of the commercial assistance that the Customer has already benefited by.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='customerEvaluation' originalName='customerEvaluation' assignable='true' index='6'>
      <Description>Defined the evaluation of the Customer by the insurer on a rating scale from excellent to bad.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='fileWatchAlertIndicator' originalName='fileWatchAlertIndicator' assignable='true' index='1'>
      <Description>Defined if there is a file watch alert on the person/organization for one particular insurer.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='firstContactMethod' originalName='firstContactMethod' assignable='true' index='8'>
      <Description>States how the customer was first contacted</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='importanceLevelCode' originalName='importanceLevelCode' assignable='true' index='10'>
      <Description>The level of importance the customer has to the modeled organization. 
 
e.g: 1 (Highest priority/ VIP) 
 
e.g: 2 (High priority) 
 
e.g: 3 (Normal priority) 
 
e.g: 4 (Low priority)</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CustomerImportanceLevelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='legalEntityCode' originalName='legalEntityCode' assignable='true' index='9'>
      <Description>It identifies the legal designation of this customer.</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.LegalEntityCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='potentialCommercialAssistanceDescription' originalName='potentialCommercialAssistanceDescription' assignable='true' index='5'>
      <Description>Description of the potential commercial assistance.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='qualifiedForCommercialAssistanceIndicator' originalName='qualifiedForCommercialAssistanceIndicator' assignable='true' index='4'>
      <Description>Defines if the Customer has qualified for a specific commercial assistance in the commercial organization of one particular insurer.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='statusCode' originalName='statusCode' assignable='true' index='12'>
      <Description>The current status of the customer within the life-cycle model. 
 
e.g: Active 
 
e.g: Ex-Customer 
 
e.g: Prospect 
 
e.g: Suspect</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CustomerStatusCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='vipIndicator' originalName='vipIndicator' assignable='true' index='7'>
      <Description>Defines the importance the insurer gives to the person/organization.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='claimAmount' assignable='true' index='20' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='claimPeriodDuration' assignable='true' index='16' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Measurement</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='customershipDate' assignable='true' index='13' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='establishedAmount' assignable='true' index='17' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='estimationOfLifeAgreementAmount' assignable='true' index='15' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='latestBatchProcessingDate' assignable='true' index='19' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='potentialAmount' assignable='true' index='18' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='totalAnnualSubscriptionsAmount' assignable='true' index='14' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.EmploymentRelationship' originalName='EmploymentRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the business relationship between an employee and his/her employer.</Description>
    <AttributeProperty isSynthetic='true' name='businessUnit' originalName='businessUnit' assignable='true' index='3'>
      <Description>Business Unit of the employee</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='currentIndicator' originalName='currentIndicator' assignable='true' index='4'>
      <Description>An indicator this is the current employment.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='exemptIndicator' originalName='exemptIndicator' assignable='true' index='9'>
      <Description>Indicates whether the employee is exempt or non-exempt.

In the USA, this is associated with being paid on a basis that is not subject to the 40 hour work week, minimum wage, and overtime rules. Such jobs are therefore considered "exempt". Conversely, jobs that are non-exempt pay salaries subject to concepts such as time worked, overtime rules, etc.

SOURCES:
http://blogs.payscale.com/ask_dr_salary/2007/01/hourly_wage_vs_.html

http://en.wikipedia.org/wiki/Salary</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='jobDescription' originalName='jobDescription' assignable='true' index='1'>
      <Description>Job description of the employee (claims handler, sales, underwriter, etc.).</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='jobTitleCode' originalName='jobTitleCode' assignable='true' index='5'>
      <Description>The job title of the position held by the employee. 
 
e.g: Chief Executive Officer 
 
e.g: Clerk 
 
e.g: Managing Director 
 
e.g: Marketing Manager</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.JobTitleCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='location' originalName='location' assignable='true' index='2'>
      <Description>Main location of the employee (headquarter, agency, etc.)</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='occupationClassCode' originalName='occupationClassCode' assignable='true' index='0'>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.EmploymentTypeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='pensionableIndicator' originalName='pensionableIndicator' assignable='true' index='7'>
      <Description>Indicates whether the employee has a job that gives him rights to a pension.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='salaryGradeCode' originalName='salaryGradeCode' assignable='true' index='8'>
      <Description>Indicates the salary or wage level of an employee.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.SalaryGradeCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='skillLevelCode' originalName='skillLevelCode' assignable='true' index='6'>
      <Description>The overall skill level of the employee. 
 
e.g: Professional 
 
e.g: Semi-skilled 
 
e.g: Skilled 
 
e.g: Unskilled</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProficiencyLevelCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='annualTaxableBenefitAmount' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='baseSalaryAmount' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='bonusSalaryAmount' assignable='true' index='12' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='EmploymentRelationshipProducesIncomeDetail' originalName='EmploymentRelationship Produces IncomeDetail' assignable='true' index='13' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.PersonDetailSubtypes.IncomeDetail</TypeName>
      <RelationshipProperty isSynthetic='true' name='EmploymentRelationshipForEmploymentRelationshipProducesIncomeDetail' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.FamilyRelationship' originalName='FamilyRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This represents a relationship between family members. The family members may or may not reside in the same household.

e.g. Upon reaching adulthood, a daughter may have moved out of her parents' home, but that does not change the fact that she remains their daughter.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.HouseholdRelationship' originalName='HouseholdRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>A set of individuals usually resident at the same address and members of the same nuclear or extended family, who share a common economic interest and who are to be treated for certain purposes (e.g: marketing campaigns) as a unit. 
 
e.g: Smith Household.</Description>
    <AttributeProperty isSynthetic='true' name='dependentAdultCount' originalName='dependentAdultCount' assignable='true' index='1'>
      <Description>The declared number of adults that are dependent from the household.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='dependentChildrenCount' originalName='dependentChildrenCount' assignable='true' index='2'>
      <Description>The declared number of children that are dependent from the household.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='familyIndicator' originalName='familyIndicator' assignable='true' index='3'>
      <Description>Indicates whether or not the household contains a couple of whom one is designated as the head of the household as well as at least one child of the couple.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='homeOwnership' originalName='homeOwnership' assignable='true' index='0'>
      <Description>The tenancy status of the main residence. 
Is derived via the object ownership of a physical object that is a dwelling and where that dwelling is located at, via physical object location, the same place as the residence for the household. 
 
e.g: Own 
 
e.g: Rent</Description>
      <TypeName>org.acord.aim.CommonElements.CommonCodeLists.HomeOwnershipCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='name' originalName='name' assignable='true' index='4'>
      <Description>The name of the household.

e.g. The Adams Family</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='disposableIncomeAmount' assignable='true' index='10' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='grossIncomeAmount' assignable='true' index='9' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.CurrencyAmount</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='oldestDependentAdultBirthDate' assignable='true' index='8' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='oldestDependentChildBirthDate' assignable='true' index='6' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='youngestDependentAdultBirthDate' assignable='true' index='7' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='youngestDependentChildBirthDate' assignable='true' index='5' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.InsurancePoolRelationship' originalName='InsurancePoolRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the business relationship between an insurance pool and in insurance provider.</Description>
    <AttributeProperty isSynthetic='true' name='participationPercentage' originalName='participationPercentage' assignable='true' index='0'>
      <Description>The participation percentage of the insurance provider in the insurance pool.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='role' originalName='role' assignable='true' index='1'>
      <Description>This represents the role of the insurance provider in the insurance pool, if applicable (possible values are "Leader", "Other", "Administrator", "Minority Coinsurer").</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.LegalRepresentation' originalName='LegalRepresentation' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the relationship between a legal representative and the party being represented.</Description>
    <AttributeProperty isSynthetic='true' name='activeIndicator' originalName='activeIndicator' assignable='true' index='1'>
      <Description>Indicates whether the Representative is active or inactive.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='function' originalName='function' assignable='true' index='2'>
      <Description>Specifies the function of the representative in a business relation.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='legalIndicator' originalName='legalIndicator' assignable='true' index='0'>
      <Description>Indicates the representative is authorized as a "legal" representative.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.OrganizationRelationship' originalName='OrganizationRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the relationship between a party acting as a parent organization and another party acting as a child organization.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProducerRelationship' originalName='ProducerRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the business relationship between an insurance provider and a producer.</Description>
    <AttributeProperty isSynthetic='true' name='distributionMethodType' originalName='distributionMethodType' assignable='true' index='0'>
      <Description>Defines the distribution method used by the producer: is it the by phone, the mail or face to face, internet, etc.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='identifier' originalName='identifier' assignable='true' index='2'>
      <Description>An identifier assigned by the insurance provider to identify a producer relationship.

e.g. Acme Insurance assigns the producer code "34-1001" to My Agency. It might do this in support various characteristics related to the code 34-1001. For example, all policies associated with this code might have related expectations involving billing and payment services, claim service, commissions, etc.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='1'>
      <Description>A code indicating the type of producer relationship.

e.g. 
An exclusive agent is a producer who is a representative of a single insurer or fleet of insurers.  An exclusive agent is obliged to submit business only to that company, or at the very minimum, gives that company first refusal rights on a sale. In exchange, that insurer usually provides its exclusive agents with an allowance for office expenses, as well as, an extensive list of employee benefits such as pensions, life insurance, health insurance and credit union

A non-exclusive agent is representative of a single insurer or fleet of insurers, who may also represent different insurance companies and searches the market for the best coverage based on a client's insurance needs.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProducerRelationshipCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship' originalName='ProfessionalServiceRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines a professional services relationship between service providers in which one service provider is committed to provide another service provider with a service according to agreed terms. The agreed terms details of such relationships are often accounted for via a formal agreement.

e.g. An  automobile repair company may have a relationship with an insurance company where covered auto losses involving certain vehicle repairs are performed by the automobile repair company. In addition to the automobile repair work, the relationship may also account for expectations involving timeliness of repairs and electronic data exchange, including finances, in support of business efficiencies.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProprietorRelationship' originalName='ProprietorRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationship' isAbstract='false'>
    <Description>This concept defines the business relationship between a proprietor and a corresponding proprietorship.</Description>
    <AttributeProperty isSynthetic='true' name='typeCode' originalName='typeCode' assignable='true' index='0'>
      <Description>A code indicating the type of proprietor.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProprietorTypeCodeList</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInAgreement' originalName='PartyRoleInAgreement' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party in the context of an agreement.</Description>
    <RelationshipProperty isSynthetic='true' name='partyroleinagreement' originalName='party role in agreement' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Agreement.Agreement</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleInAgreementForpartyroleinagreement' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInClaim' originalName='PartyRoleInClaim' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party  in the context of a claim such as claimant, adjuster, representative, claimee, expert or third party role in claim.</Description>
    <RelationshipProperty isSynthetic='true' name='partyroleinclaim' originalName='party role in claim' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Claim.ClaimBase</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleInClaimForpartyroleinclaim' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInMarketing' originalName='PartyRoleInMarketing' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party in the context of marketing.</Description>
    <RelationshipProperty isSynthetic='true' name='marketingcampaignteammembership' originalName='marketing campaign team membership' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Marketing.MarketingCampaign</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleInMarketingFormarketingcampaignteammembership' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInProduct' originalName='PartyRoleInProduct' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party in the context of a product.</Description>
    <RelationshipProperty isSynthetic='true' name='partyroleinproductspecification' originalName='party role in product specification' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ProductSpecification.ProductSpecification</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleInProductForpartyroleinproductspecification' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRegistration' originalName='PartyRoleInRegistration' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party in the context of a registration.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleInRelationship' originalName='PartyRoleInRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party in the context of a relationship.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PartyRoleSubtypes.PartyRoleOnPhysicalObject' originalName='PartyRoleOnPhysicalObject' superclassName='org.acord.aim.RoleandRelationship.PartyRole' isAbstract='false'>
    <Description>A role played by a party in the context of a physical object.</Description>
    <AttributeProperty isSynthetic='true' name='interestPercentage' originalName='interestPercentage' assignable='true' index='0'>
      <Description>The percentage of interest in a physical object (e.g. percent of ownership, percent of creation, percent of use, etc.).</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='PartyRoleOnPhysicalObjectInvolvesPhysicalObject' originalName='PartyRoleOnPhysicalObject Involves PhysicalObject' assignable='true' index='1' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.PhysicalObject.PhysicalObject</TypeName>
      <RelationshipProperty isSynthetic='true' name='PartyRoleOnPhysicalObjectForPartyRoleOnPhysicalObjectInvolvesPhysicalObject' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.DockedWatercraft' originalName='DockedWatercraft' superclassName='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleOnPlace' isAbstract='false'>
    <Description>This role represents a docked watercraft in the context of the place at which it is docked.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.InsuredObject' originalName='InsuredObject' superclassName='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleInAgreement' isAbstract='false'>
    <Description>This role represents a physical object in the context of the agreement that is providing its coverage.</Description>
    <AttributeProperty isSynthetic='true' name='insuredPercentage' originalName='insuredPercentage' assignable='true' index='0'>
      <Description>The fraction of a physical object's value covered if it is the subject covered in an insurance agreement and is insured for less than its full value.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.ParkedVehicle' originalName='ParkedVehicle' superclassName='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleOnPlace' isAbstract='false'>
    <Description>This role represents a parked vehicle in the context of the place at which it is parked.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleInAgreement' originalName='PhysicalObjectRoleInAgreement' superclassName='org.acord.aim.RoleandRelationship.PhysicalObjectRole' isAbstract='false'>
    <Description>This concept represents a physical object role with regards to an agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleOnPlace' originalName='PhysicalObjectRoleOnPlace' superclassName='org.acord.aim.RoleandRelationship.PhysicalObjectRole' isAbstract='false'>
    <Description>This concept represents a physical object role with regards to a place.</Description>
    <RelationshipProperty isSynthetic='true' name='PhysicalObjectRoleOnPlaceOnPlace' originalName='PhysicalObjectRoleOnPlace On Place' assignable='true' index='0' cardinality='Many2One' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.ContactandPlace.Place</TypeName>
      <RelationshipProperty isSynthetic='true' name='PhysicalObjectRoleOnPlaceForPhysicalObjectRoleOnPlaceOnPlace' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.StoredObject' originalName='StoredObject' superclassName='org.acord.aim.RoleandRelationship.PhysicalObjectRoleSubtypes.PhysicalObjectRoleOnPlace' isAbstract='false'>
    <Description>This role represents a stored object in the context of the place at which it is stored.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.InspectorRelationship' originalName='InspectorRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship' isAbstract='false'>
    <Description>This concept defines inspector's association with an organization.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.LossAdjusterRelationship' originalName='LossAdjusterRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship' isAbstract='false'>
    <Description>This concept describes the relationship between the loss adjuster and the company.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.RepairServiceRelationship' originalName='RepairServiceRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship' isAbstract='false'>
    <Description>This concept defines a repair service relationship.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.StockbrokerRelationship' originalName='StockbrokerRelationship' superclassName='org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProfessionalServiceRelationship' isAbstract='false'>
    <Description>This concept describes a relationship with a Stock-Broker.</Description>
  </EntityType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.AuthorityLevelCodeList' originalName='AuthorityLevelCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of producers according to their authority level.</Description>
    <Enumerand isSynthetic='true' name='Selling' generator='Selling'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Servicing' generator='Servicing'>
      <Description>Identifies a producer with authority level 'Servicing'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Marketing' generator='Marketing'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CivilRelationNatureCodeList' originalName='CivilRelationNatureCodeList' restricts='java.lang.String'>
    <Description>This list defines civil relation types.</Description>
    <Enumerand isSynthetic='true' name='Husband' generator='Husband'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Wife' generator='Wife'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CivilStatusCodeList' originalName='CivilStatusCodeList' restricts='java.lang.String'>
    <Description>A code list representing various civil status' with regards to a civil relationship.</Description>
    <Enumerand isSynthetic='true' name='Married' generator='Married'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Divorced' generator='Divorced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Widowed' generator='Widowed'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LegallySeparated' generator='Legally Separated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonLawDefacto' generator='Common Law (Defacto)'>
      <Description>This de facto type of marriage exists in long-standing (the length of time varies) relationships that have never had a marriage ceremony. Common Law marriages have legal consequence in some countries but not others.

Some countries use this term to also include Civil Unions, but Civil Union stands alone in this enumeration.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Estranged' generator='Estranged'>
      <Description>When a married couple is not legally separated but is living apart.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CivilUnion' generator='Civil Union'>
      <Description>Civil Union is similar to marriage, which grants rights similar to marriage to same-gender couples.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CommonCivilStatusCodeList' originalName='CommonCivilStatusCodeList' restricts='java.lang.String'>
    <Description>A code list representing various civil status' of a person.</Description>
    <Enumerand isSynthetic='true' name='CivilUnion' generator='Civil Union'>
      <Description>Civil Union is similar to marriage, which grants rights similar to marriage to same-gender couples.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='CommonLawDefacto' generator='Common Law (Defacto)'>
      <Description>This de facto type of marriage exists in long-standing (the length of time varies) relationships that have never had a marriage ceremony. Common Law marriages have legal consequence in some countries but not others.

Some countries use this term to also include Civil Unions, but Civil Union stands alone in this enumeration.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Divorced' generator='Divorced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Estranged' generator='Estranged'>
      <Description>When a married couple is not legally separated but is living apart.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LegallySeparated' generator='Legally Separated'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Married' generator='Married'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Other' generator='Other'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Single' generator='Single'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Widowed' generator='Widowed'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CustomerImportanceLevelCodeList' originalName='CustomerImportanceLevelCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of customers according to their importance level.</Description>
    <Enumerand isSynthetic='true' name='HighestPriority' generator='Highest Priority'>
      <Description>Identifies a Customer with importance level '1: highest priority (VIP)'</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='HighPriority' generator='High Priority'>
      <Description>Identifies a Customer with importance level '2: high priority'</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NormalPriority' generator='Normal Priority'>
      <Description>Identifies a Customer with importance level '3: normal priority (VIP)'</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LowPriority' generator='Low Priority'>
      <Description>Identifies a Customer with importance level '4: low priority'</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.CustomerStatusCodeList' originalName='CustomerStatusCodeList' restricts='java.lang.String'>
    <Description>Allowed life cycle states for a customer.</Description>
    <Enumerand isSynthetic='true' name='Initial' generator='Initial'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Disqualified' generator='Disqualified'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Dormant' generator='Dormant'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Final' generator='Final'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Former' generator='Former'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NotInterested' generator='Not Interested'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Potential' generator='Potential'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Prospect' generator='Prospect'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.FamilyRelationNatureCodeList' originalName='FamilyRelationNatureCodeList' restricts='java.lang.String'>
    <Description>This list defines the nature of family relations.</Description>
    <Enumerand isSynthetic='true' name='Adopted' generator='Adopted'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Adoptive' generator='Adoptive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Foster' generator='Foster'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='God' generator='God'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Great' generator='Great'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GreatGrand' generator='Great Grand'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='InLaw' generator='In-Law'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Step' generator='Step'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.IndependenceCategoryCodeList' originalName='IndependenceCategoryCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of producers according to their independence category.</Description>
    <Enumerand isSynthetic='true' name='Employed' generator='Employed'>
      <Description>Identifies a producer with independence category 'Employed'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FullyIndependent' generator='Fully Independent'>
      <Description>Identifies a producer with independence category 'Fully independent'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LimitedIndependence' generator='Limited Independence'>
      <Description>Identifies a producer with independence category 'Limited independence'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Tied' generator='Tied'>
      <Description>Identifies a producer with independence category 'Tied'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.JobTitleCodeList' originalName='JobTitleCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of Employees according to their job title.</Description>
    <Enumerand isSynthetic='true' name='ChiefExecutiveOfficer' generator='Chief Executive Officer'>
      <Description>Identifies an Employee with job title 'Chief Executive Officer'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Clerk' generator='Clerk'>
      <Description>Identifies an employee with job title 'Clerk'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='ManagingDirector' generator='Managing Director'>
      <Description>Identifies an employee with job title 'Managing director'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='MarketingManager' generator='Marketing Manager'>
      <Description>Identifies an employee with job title 'Marketing manager'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='FieldOperationsRiskManager' generator='Field Operations Risk Manager'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='GeneralOperationsRiskManager' generator='General Operations Risk Manager'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.MembershipStatusCodeList' originalName='MembershipStatusCodeList' restricts='java.lang.String'>
    <Description>Membership Status</Description>
    <Enumerand isSynthetic='true' name='Active' generator='Active'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Inactive' generator='Inactive'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unknown' generator='Unknown'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Suspended' generator='Suspended'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProducerRelationshipCodeList' originalName='ProducerRelationshipCodeList' restricts='java.lang.String'>
    <Description>A code list indicating the type of producer relationship.</Description>
    <Enumerand isSynthetic='true' name='Captive' generator='Captive'>
      <Description>A captive agent writes primarily, generally exclusively, for one insurer. Producers are typically salaried employees and receive their offices, administrative staff and support directly from the insurer. A captive agent is also known as a direct-writing agent.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Exclusive' generator='Exclusive'>
      <Description>An exclusive agent is a producer who is a representative of a single insurer or fleet of insurers.  An exclusive agent is obliged to submit business only to that company, or at the very minimum, gives that company first refusal rights on a sale. In exchange, that insurer usually provides its exclusive agents with an allowance for office expenses, as well as, an extensive list of employee benefits such as pensions, life insurance, health insurance and credit union.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='NonExclusive' generator='Non-Exclusive'>
      <Description>Agent who is self-employed, is paid on commission, and represents several insurance companies.
SOURCE: Insurance Information Institute

A non-exclusive agent is representative of a single insurer or fleet of insurers, who may also represent different insurance companies and searches the market for the best coverage based on a client's insurance needs. A non-exclusive agent is also known as an independent agent.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProficiencyLevelCodeList' originalName='ProficiencyLevelCodeList' restricts='java.lang.String'>
    <Description>This enumeration lists all possible skill levels</Description>
    <Enumerand isSynthetic='true' name='Excellent' generator='Excellent'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Good' generator='Good'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Poor' generator='Poor'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Professional' generator='Professional'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SemiSkilled' generator='Semi Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Skilled' generator='Skilled'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='StudentLevel' generator='Student Level'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Unskilled' generator='Unskilled'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.ProprietorTypeCodeList' originalName='ProprietorTypeCodeList' restricts='java.lang.String'>
    <Description>A code list representing various proprietor types.</Description>
    <Enumerand isSynthetic='true' name='Partnership' generator='Partnership'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='SoleProprietorship' generator='Sole Proprietorship'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.SalaryGradeCodeList' originalName='SalaryGradeCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of employees according to their salary grade.</Description>
    <Enumerand isSynthetic='true' name='Junior' generator='Junior'>
      <Description>Identifies an employee with salary grade 'Junior'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Senior' generator='Senior'>
      <Description>Identifies an employee with salary grade 'Senior'.</Description>
    </Enumerand>
    <Enumerand isSynthetic='true' name='EntryLevel' generator='Entry Level'>
      <Description>Identifies an employee with salary grade 'Entry level'.</Description>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.TrainingLevelCodeList' originalName='TrainingLevelCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of producers according to their training level.</Description>
    <Enumerand isSynthetic='true' name='Advanced' generator='Advanced'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BlackBelt' generator='Black Belt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='BrownBelt' generator='Brown Belt'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='Senior' generator='Senior'>
    </Enumerand>
  </EnumerationType>
  <EnumerationType isSynthetic='true' name='org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.UnderwritingAuthorityCodeList' originalName='UnderwritingAuthorityCodeList' restricts='java.lang.String'>
    <Description>Identifies a classification of producers according to their underwriting authority.</Description>
    <Enumerand isSynthetic='true' name='NoRestrictions' generator='No Restrictions'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='LimitedAuthority' generator='Limited Authority'>
    </Enumerand>
    <Enumerand isSynthetic='true' name='PreferredUnderwriter' generator='Preferred Underwriter'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Appraiser' originalName='Appraiser' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>The party that performs valuations of property or valuations of property damage.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Bank' originalName='Bank' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept states one's role as a bank.</Description>
    <AttributeProperty isSynthetic='true' name='bankIdentifier' originalName='bankIdentifier' assignable='true' index='0'>
      <Description>A bank code identification number.
A Bank Code is a code assigned by a central bank, a Bank Supervisory Body or a Bankers Association in a country assigned to all its licensed member banks. The rules vary to great extent between the countries. Also the name of such a code varies. Those countries that have International Bank Account Numbers mostly integrated the bank code into the prefix of specifying IBAN account numbers.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='branchIdentifier' originalName='branchIdentifier' assignable='true' index='1'>
      <Description>A bank branch identification number.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='BankProducesInBankDistributionRelationship' originalName='Bank Produces In BankDistributionRelationship' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This concept represents a bank involved in a bank distribution relationship, a type of producer relationship.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.BankDistributionRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='BankForBankProducesInBankDistributionRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='BankProvidesBankAccount' originalName='Bank Provides BankAccount' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Finance.BankAccount.BankAccount</TypeName>
      <RelationshipProperty isSynthetic='true' name='BankForBankProvidesBankAccount' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='swiftCode' assignable='true' index='2' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.ExternalCode</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Coverholder' originalName='Coverholder' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProducer' isAbstract='false'>
    <Description>In the United Kingdom, insurers enter into agreements with coverholders. These brokers act as agents for insurers, writing insurance contracts on their behalf and serving as their local representatives. Coverholders enable insurers to extend their geographic reach by benefiting from local knowledge of risks and market conditions in other parts of the UK or the world. 
SOURCE: 
http://www.ehow.com/facts_6923169_definition-cover-holder-insurance.html


A "Coverholder"  means a company or partnership authorised by a managing agent to enter into a contract or contracts of insurance to be underwritten by the members of a syndicate managed by it in accordance with the terms of a binding authority.
SOURCE:
http://www.lloyds.com/The-Market/I-am-a/Coverholder/Information-for-Brokers-and-Agents/What-is-a-coverholder

There are two types of coverholder at Lloyd’s namely "Approved Coverholders" and "Restricted Coverholders".  In addition, some Approved Coverholders may also be classified as "Service Company Coverholders". Lloyd’s rules provide for the type of binding authority that each of these types of coverholder may be granted.
SOURCE:
http://www.lloyds.com/The-Market/I-am-a/Coverholder/Information-for-Brokers-and-Agents/What-is-a-coverholder

A coverholder is party role with authority to bind risks to an original Master Cover contract or Binding Authority. The role is one where, on behalf on an insurance company, the party assumes responsibilities including and not limited to: underwriting risks, administering policies, collecting premiums, servicing and paying claims.  The coverholder and the insurance company typically have a separate contractual relationship that outlines details of the types of risks etc. the coverholder can underwrite and administer on the insurance company’s behalf, and also the extent of the administration activity they undertake.

One example of a coverholder is an MGA (managing general agent) in the USA, who has delegated authority to underwrite and administer surplus lines risks on behalf of insurers such as Lloyd’s syndicates and surplus lines insurers.  In this example the original producer is generally the insurance agent, who takes a risk to an MGA when they cannot get coverage in the particular State where the risk is located.  However, examples outside USA will often see the coverholder marketing directly to insured’s rather than relying on risks fed from normal agents.

Whether acting as an agent (producer) for an insurance company based on authorization granted by the insurance company, or acting as a producer on behalf of another producer, a coverholder is a producer.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.CreditSpecialist' originalName='CreditSpecialist' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>The party responsible for assessing the credit worthiness of an applicant with whom the modeled organization is considering making a financial services agreement.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.FinancialAdvisor' originalName='FinancialAdvisor' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>A financial adviser (UK spelling) or financial advisor (US spelling), more recently often referred to as a financial planner, is a professional who renders financial planning services to individuals, businesses and governments. This can involve investment advice, which may include pension  planning, and/or advice on Life insurance and other insurances such as income protection insurance, critical illness insurance etc, and/or advice on mortgages.

Ideally, the financial adviser helps the client maintain the desired balance of investment income, capital gains, and acceptable level of risk by using proper asset allocation. Financial advisers use stock, bonds, mutual funds, real estate investment trusts (REITs), options, futures, notes, and insurance products to meet the needs of their clients. Many financial advisers receive a commission payment for the various financial products that they broker, although "fee-based" planning is becoming increasingly popular in the financial services industry.

A further distinction should be made between "fee-based" and "fee-only" advisers. Fee-based advisers often charge asset based fees but may also collect commissions. Fee-only advisers do not collect commissions or referral fees paid by other product or service providers.

"Client-Centered" investment advisors only charge a fee based on the assets managed for the client. Typically they charge about 1.0 to 1.5% per year to make the investment decisions for the client. They do not collect commissions.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.FinancialAnalyst' originalName='FinancialAnalyst' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>A person or organization responsible for the analysis of specific financial instruments, such as portfolios, strategies and so on. Their activities are essentially those required by an institution so that the financial instruments of the institution and its clients are successful.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.FundManager' originalName='FundManager' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>An organization whose role it is to manage the investments of a fund.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.HealthCareProvider' originalName='HealthCareProvider' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>Any professional or institution providing health care goods or services to patients. 
 
e.g: Assisted Living Facility: a facility that provides health care services for people who require assistance with activities of daily living. 
 
e.g: Dental Service Corporation: professional group incorporated and organized on a non-profit basis to provide dental care to consumer groups. 
 
e.g: Health Maintenance Organization (HMO): organization that provides for a wide range of comprehensive health care services for a specified group at a fixed periodic prepayment. 
 
e.g: Physician, hospital, pharmacist, nurse.</Description>
    <RelationshipProperty isSynthetic='true' name='HealthCareProviderOnHealthInstitution' originalName='HealthCareProvider On HealthInstitution' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.OrganizationSubtypes.HealthInstitution</TypeName>
      <RelationshipProperty isSynthetic='true' name='HealthCareProviderForHealthCareProviderOnHealthInstitution' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InformationProvider' originalName='InformationProvider' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>An organization which collects information for the purpose of selling it. 
 
e.g: AFP.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Inspector' originalName='Inspector' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept states one's role as an inspector.</Description>
    <RelationshipProperty isSynthetic='true' name='InspectorServicesInspectorRelationship' originalName='Inspector Services InspectorRelationship' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.InspectorRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='InspectorForInspectorServicesInspectorRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceAgency' originalName='InsuranceAgency' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProducer' isAbstract='false'>
    <Description>This concept states an organization's role as an insurance agency.

An insurance agency solicits, negotiates or effects contracts of insurance on behalf of an insurer. The agent's right to exercise various functions, authority, and obligations, as well as the obligations of the insurer to the agent, are subject to the terms of the agency contract with the insurer, to statutory law, and to common law.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceBrokerage' originalName='InsuranceBrokerage' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProducer' isAbstract='false'>
    <Description>This concept states an organization's role as an insurance brokerage.

An insurance brokerage is a party who may or may not be directly employed by an insurance company that sells and services insurance policies for more than one insurance company. An insurance intermediary usually has the following characteristics: acts on behalf of the client rather than the insurance company; professional, full time; regulated by statute.</Description>
    <AttributeProperty isSynthetic='true' name='brokerCode' originalName='brokerCode' assignable='true' index='0'>
      <Description>Broker's identification code.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceCompany' originalName='InsuranceCompany' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider' isAbstract='false'>
    <Description>A financial institution that sells insurance.

SOURCE: http://dictionary.reference.com/browse/insurance+company?s=t</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsurancePool' originalName='InsurancePool' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider' isAbstract='false'>
    <Description>An insurance pool is a group of insurance companies that pool their assets in order to share the loss potential of insuring large risks such as nuclear power stations. Some pools are mandated by the state to cover risks that cannot obtain coverage in the regular market, such as coastal properties that are prone to hurricane risks.

Pooling is a method by which each member of an insurance pool shares in each and every risk written by the other members of the pool.

Fair Plans are insurance pools that sell property insurance to people who can't buy it in the volunteer marketplace because of their high exposure to risks over which they may have no control

Like the Fair Plans, which provide basic property insurance coverage, Beach and windstorm plans are state-sponsored insurance pools that sell property for the peril of windstorm to people unable to buy it in the voluntary market because of their exposure to risk.</Description>
    <AttributeProperty isSynthetic='true' name='insurancePoolName' originalName='insurancePoolName' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='poolPercentage' originalName='poolPercentage' assignable='true' index='1'>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='reinsuranceIndicator' originalName='reinsuranceIndicator' assignable='true' index='3'>
      <Description>Indicates the insurance pool is a reinsurance pool.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='roleInsurer' originalName='roleInsurer' assignable='true' index='2'>
      <Description>possible values are "Leader", "Other", "Administrator", "Minority Coinsurer"</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='InsurancePoolAdministersInsurancePoolRelationship' originalName='InsurancePool Administers InsurancePoolRelationship' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.InsurancePoolRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsurancePoolForInsurancePoolAdministersInsurancePoolRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='InsurancePoolIncludesInsuranceProvider' originalName='InsurancePool Includes InsuranceProvider' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsurancePoolForInsurancePoolIncludesInsuranceProvider' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProducer' originalName='InsuranceProducer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept states a party's role as an insurance producer: A person or an organization, who solicits, negotiates or effects contracts of insurance on behalf of an insurer. The producer's right to exercise various functions, authority, and obligations, as well as the obligations of the insurer to the producer, are subject to the terms of the agency contract with the insurer, to statutory law, and to common law. Types of producers include General Agents, Registered representatives, brokerage firms, etc.</Description>
    <AttributeProperty isSynthetic='true' name='authorityLevelCode' originalName='authorityLevelCode' assignable='true' index='8'>
      <Description>The operational authority of the producer for selling, servicing and marketing products. 
 
e.g: Selling 
 
e.g: Servicing</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.AuthorityLevelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='claimManagementAuthority' originalName='claimManagementAuthority' assignable='true' index='7'>
      <Description>The textual description explaining the authority of the producer with respect to the management of claims.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='commercialTargets' originalName='commercialTargets' assignable='true' index='1'>
      <Description>The textual description explaining the commercial targets such as the growth rate of a portfolio, a portfolio retention rate.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='educationSupport' originalName='educationSupport' assignable='true' index='4'>
      <Description>The textual description explaining the education support provided to the producer, such as a general sales training.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='independenceCategoryCode' originalName='independenceCategoryCode' assignable='true' index='2'>
      <Description>The degree to which the producer is independent of an organization for which it conducts business. 
 
e.g: Employed 
 
e.g: Fully independent 
 
e.g: Limited independence 
 
e.g: Tied</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.IndependenceCategoryCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='infrastructureSupport' originalName='infrastructureSupport' assignable='true' index='9'>
      <Description>The textual description explaining the infrastructure support provided to the producer such as a laptop.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lenderProducerIndicator' originalName='lenderProducerIndicator' assignable='true' index='10'>
      <Description>Indicates the producer is a lender producer, also known as a bank agency or bank distributor.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketingSupport' originalName='marketingSupport' assignable='true' index='0'>
      <Description>The textual description explaining the marketing support provided to the producer such as mailing, basic advertising brochures, advertising in local newspapers and gifts.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='prospectsQuotaCount' originalName='prospectsQuotaCount' assignable='true' index='5'>
      <Description>The maximum number of prospects that a producer is allowed to manage at any one time.</Description>
      <TypeName>java.math.BigDecimal</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='trainingLevelCode' originalName='trainingLevelCode' assignable='true' index='3'>
      <Description>The level of insurance business education successfully completed by the party playing this role.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.TrainingLevelCodeList</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='underwritingAuthorityCode' originalName='underwritingAuthorityCode' assignable='true' index='6'>
      <Description>The restrictions that apply to the producer with respect to deciding the terms on which an financial services agreement will be accepted. 
 
e.g: L (Limited) 
 
e.g: N (None) 
 
e.g: P (Preferred)</Description>
      <TypeName>org.acord.aim.RoleandRelationship.RoleandRelationshipCodeLists.UnderwritingAuthorityCodeList</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='true' name='InsuranceProducerProducesInProducerRelationship' originalName='InsuranceProducer Produces In ProducerRelationship' assignable='true' index='12' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProducerRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsuranceProducerForInsuranceProducerProducesInProducerRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='underwritingAuthorityStartDate' assignable='true' index='11' cardinality='One2One' containment='true'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider' originalName='InsuranceProvider' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='true'>
    <Description>This concept is a generalizing concept for the roles possibly played by a party as an insurance provider.

Types of capacity providers:
Direct Insurers
Subsidiaries of direct insurers
Joint venture private reinsurers
Regional reinsurance corporations
Statutory reinsurers
Other professional reinsurers
Subsidiaries of professional reinsurers
Lloyd’s
Pools
Underwriting agencies
Mutuals
Captive reinsurers
State reinsurance schemes
Finite reinsurers
ART providers</Description>
    <RelationshipProperty isSynthetic='true' name='InsuranceProviderParticipatesInInsurancePoolRelationship' originalName='InsuranceProvider Participates In InsurancePoolRelationship' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.InsurancePoolRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsuranceProviderForInsuranceProviderParticipatesInInsurancePoolRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='InsuranceProviderProvidesBankDistributionRelationship' originalName='InsuranceProvider Provides BankDistributionRelationship' assignable='true' index='2' cardinality='One2Many' containment='false' collectionType='Set'>
      <Description>This concept represents the insurance provider involved in a bank distribution relationship, a type of producer relationship.</Description>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.BankDistributionRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsuranceProviderForInsuranceProviderProvidesBankDistributionRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='true' name='InsuranceProviderProvidesProducerRelationship' originalName='InsuranceProvider Provides ProducerRelationship' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.PartyRoleRelationshipSubtypes.ProducerRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='InsuranceProviderForInsuranceProviderProvidesProducerRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Investigator' originalName='Investigator' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept states one's role as an investigator.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Lawyer' originalName='Lawyer' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept is used to handle lawyer information in case of claims being in relation with a judgment.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.LegalAdviser' originalName='LegalAdviser' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>A party employed by another party to give legal advice on any legal issue or on the way the latter conducts business. 
 
e.g: John Crook, legal advisor, providing advice on the fund's investments and asset management practices of a financial services company.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Notary' originalName='Notary' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept states one's role as notary.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Physician' originalName='Physician' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.HealthCareProvider' isAbstract='false'>
    <Description>This concept represents a person's role when engaged in general medical practice. 

SOURCE: http://dictionary.reference.com/browse/physician</Description>
    <AttributeProperty isSynthetic='true' name='specialization' originalName='specialization' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.ReinsuranceBrokerage' originalName='ReinsuranceBrokerage' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceBrokerage' isAbstract='false'>
    <Description>This concept states an organization's role as a reinsurance brokerage.

Legislation in most countries requires authorization of direct producers (both agents and brokers) and regulation of their activities. No such restrictions have applied historically to reinsurance brokers for two reasons : 
a) Reinsurance broking is an activity which extends beyond national borders (often involving two countries, where co-broking is done with correspondent brokers) and, if it were to be regulated, it would be subject to numerous jurisdictions, and 
b) Regulatory legislation is prompted by concern for the security of retail insurance customers and the public in general. Reinsurance contracts do not involve this concern as they are agreements between two professionals with expert knowledge of the business transacted by them. This situation is however changing to some extent and regulations are being framed to cover: 
- minimum capital requirements, 
- minimum solvency margin, 
- proof of adequate professional indemnity insurance coverage (based on turnover, with a ceiling on maximum permitted self-insured deductible), 
- proof of professional insurance qualifications of the directors, 
- segregation of own funds from fiduciary funds, 
- submission of prescribed audited returns to the regulator, and access of regulatory authorities for inspection of records.

Historically, reinsurance brokers have played a significant role in the development of London as a global reinsurance center. The majority of London reinsurance brokers are subsidiaries of larger direct producer and risk management groups but operate quite independently, some being specialized in certain concepts of business. Owing to the international scope of their activities, many travel extensively and some even maintain a network of overseas offices in addition to regular dealing with correspondent brokers in other countries. The role and functions of the reinsurance broker cover a wide field: 
- Collection and dissemination of up-to-date market intelligence as also firsthand information on individual companies so as to enhance the marketing base of participating cedants and reinsurers, 
- Technical assistance to cedents (inspection and rating of peak or complicated risks, drawing up of policy wordings and clauses, survey and processing of claims, fixing of retentions and treaty limits, devising of cost-effective reinsurance programmes, screening of security of reinsurers and maintenance of an early warning system against potential defaults and bankruptcies),
- Negotiation of lead terms and quotes that are equitable and fair so as to ensure continuity and long term support from first concept security,
- Spreading the placement across a wide international spectrum with due regard to the special capabilities and expertise of various markets, 
- Conduct of renewal negotiations and reciprocal trading terms,
- Assistance in preparation and transmission of contract documents, accounts, reports and loss advices, 
- Assistance in settlement of bilateral accounts, currency management and investment of funds overseas, 
- Assistance in resolution of disputes, including the conduct of arbitration proceedings and court action - especially in case of existence of a language barrier or disputes between the countries of domicile of the parties to a dispute (the neutrality of the broker being an invaluable aid in avoiding otherwise delicate or embarrassing confrontations), 
- Technical aid in development of new or complex concepts of business, 
- Assistance in training of the staff of cedents, 
- Assistance in implementing latest available technology tools (including IT tools) for upgrading internal administrative and accounting procedures of the cedent and 
- Assistance in development of a mutually beneficial and satisfactory long term relationship between the cedent and his reinsurers.</Description>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.ReinsuranceCompany' originalName='ReinsuranceCompany' superclassName='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.InsuranceProvider' isAbstract='false'>
    <Description>This concept describes one's role as re-insurer.</Description>
    <AttributeProperty isSynthetic='true' name='lloydsAlias' originalName='lloydsAlias' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lloydsGroupName' originalName='lloydsGroupName' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lloydsSubSyndicateName' originalName='lloydsSubSyndicateName' assignable='true' index='3'>
      <Description>Name of the corresponding Lloyd's Sub Syndicate.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='lloydsSyndicateName' originalName='lloydsSyndicateName' assignable='true' index='2'>
      <Description>Name of the corresponding Lloyd's Syndicate.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='marketInLiquidationIndicator' originalName='marketInLiquidationIndicator' assignable='true' index='5'>
      <Description>MIL = Market In Liquidation.
Enables to indicate if a reinsurer is in liquidation.</Description>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='true' name='secondaryAlias' originalName='secondaryAlias' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.RepairServiceProvider' originalName='RepairServiceProvider' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept states one organization's role as a repair service provider.

e.g. garage</Description>
    <RelationshipProperty isSynthetic='true' name='RepairServicesProviderServicesInspectorRelationship' originalName='RepairServicesProvider Services InspectorRelationship' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.RepairServiceRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='RepairServiceProviderForRepairServicesProviderServicesInspectorRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Stockbroker' originalName='Stockbroker' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>This concept describes one's role as a stock broker.</Description>
    <RelationshipProperty isSynthetic='true' name='StockbrokerServicesStockbrokerRelationship' originalName='Stockbroker Services StockbrokerRelationship' assignable='true' index='0' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.RoleandRelationship.ProfessionalServiceRelationshipSubtypes.StockbrokerRelationship</TypeName>
      <RelationshipProperty isSynthetic='true' name='StockbrokerForStockbrokerServicesStockbrokerRelationship' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='true' name='org.acord.aim.RoleandRelationship.ServiceProviderSubtypes.Supplier' originalName='Supplier' superclassName='org.acord.aim.RoleandRelationship.PartyRoleInRelationshipSubtypes.ServiceProvider' isAbstract='false'>
    <Description>A company used for the supply of goods or services. 
 
e.g: KGK Car Repair Shop.</Description>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.Context' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='EventType' assignable='true' index='1'>
      <TypeName>org.acord.EventTypes</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Party' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContextForParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='User' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.User</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContextForUser' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='ContextExtension' assignable='true' index='3' cardinality='One2One' containment='false'>
      <TypeName>org.acord.ContextExtension</TypeName>
      <RelationshipProperty isSynthetic='false' name='basicContextForContextExtension' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Organization' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Organization</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContextForOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Person' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContextForPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Error' assignable='true' index='6' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.Error</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContextForError' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EnumerationType isSynthetic='false' name='org.acord.EventTypes' restricts='java.lang.String'>
    <Enumerand isSynthetic='false' name='AddressChange' generator='Address Change'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='false' name='org.acord.IPMContext' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='ContractKit' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='7'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Name' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='NPN' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Product' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='6'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='TaxID' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetOrganization' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Organization&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOrganization' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasNoValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyType'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyType'>
              </PathExpression>
              <Literal isSynthetic='false' typeName='java.lang.String' literalString='Organization'>
              </Literal>
            </MethodExpression>
          </MethodExpression>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='GetOrganizationByAPID'>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='GetOrganizationByName'>
              </PathExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='GetOrganizationByNPN'>
                </PathExpression>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='GetOrganizationByPartyID'>
                  </PathExpression>
                  <PathExpression isSynthetic='false' pathString='GetOrganizationByTaxID'>
                  </PathExpression>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
          </MethodExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetOrganizationByName' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Organization&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOrganizationByName' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='Name'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Organization'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='OrganizationOwnsOrganizationName/fullName'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='replaceAllOccurrences'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='Name'>
                  </PathExpression>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='*'>
                  </Literal>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetOrganizationByNPN' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Organization&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOrganizationByNPN' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='NPN'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Organization'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='NationalProducerNumber'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='NPN'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetOrganizationByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Organization&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOrganizationByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='PartyID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Organization'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetOrganizationByTaxID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Organization&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOrganizationByTaxID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='TaxID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Organization'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='TaxID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='TaxID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPaymentAccount' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.AccountEntry&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPaymentAccount' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetPaymentAccountByEndDate'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='GetPaymentAccountByPartyID'>
            </PathExpression>
            <PathExpression isSynthetic='false' pathString='GetPaymentAccountByStartDate'>
            </PathExpression>
          </MethodExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPaymentAccountByEndDate' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.AccountEntry&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPaymentAccountByEndDate' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='EndDate'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.AccountEntry'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='isEarlierThan'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='creationDateTime/date/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='EndDate'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='creationDateTime/date/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='EndDate'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPaymentAccountByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.AccountEntry&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPaymentAccountByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetPaymentAccountUpdates' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.AccountEntry'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='AccountForaccountentryaccount/asBankAccount/AccountOnParty/asPerson/PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPaymentAccountByStartDate' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.AccountEntry&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPaymentAccountByStartDate' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='StartDate'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.AccountEntry'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='isLaterThan'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='creationDateTime/date/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='StartDate'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='creationDateTime/date/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='StartDate'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPerson' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPerson' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasNoValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyType'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyType'>
              </PathExpression>
              <Literal isSynthetic='false' typeName='java.lang.String' literalString='Person'>
              </Literal>
            </MethodExpression>
          </MethodExpression>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='GetPersonByAPID'>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='GetPersonByNPN'>
              </PathExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='GetPersonByFirstName'>
                </PathExpression>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='GetPersonByLastName'>
                  </PathExpression>
                  <MethodExpression isSynthetic='false' infix='false'>
                    <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
                    </MethodReference>
                    <PathExpression isSynthetic='false' pathString='GetPersonByPartyID'>
                    </PathExpression>
                    <PathExpression isSynthetic='false' pathString='GetPersonByTaxID'>
                    </PathExpression>
                  </MethodExpression>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
          </MethodExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByName' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByName' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='Name'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='PersonOwnsPersonName/surname'>
                    <VariablePathRoot isSynthetic='false' variableName='element'>
                    </VariablePathRoot>
                  </PathExpression>
                </MethodExpression>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                  </MethodReference>
                  <MethodExpression isSynthetic='false' infix='false'>
                    <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concatWithDelimiter'>
                    </MethodReference>
                    <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                    </Literal>
                    <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                    </Literal>
                    <PathExpression isSynthetic='false' pathString='Name'>
                    </PathExpression>
                  </MethodExpression>
                </MethodExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='PersonOwnsPersonName/givenName'>
                    <VariablePathRoot isSynthetic='false' variableName='element'>
                    </VariablePathRoot>
                  </PathExpression>
                </MethodExpression>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                  </MethodReference>
                  <MethodExpression isSynthetic='false' infix='false'>
                    <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concatWithDelimiter'>
                    </MethodReference>
                    <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                    </Literal>
                    <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                    </Literal>
                    <PathExpression isSynthetic='false' pathString='Name'>
                    </PathExpression>
                  </MethodExpression>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByNPN' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByNPN' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='NPN'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='NationalProducerNumber'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='NPN'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='PartyID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByTaxID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByTaxID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='TaxID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='TaxID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='TaxID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetTransaction' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetTransaction' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetTransactionByContractKit'>
          </PathExpression>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='GetTransactionByEndDate'>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='GetTransactionByPartyID'>
              </PathExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='GetTransactionByProduct'>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='GetTransactionByStartDate'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
          </MethodExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetTransactionByContractKit' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetTransactionByContractKit' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='ContractKit'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='description'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concatWithDelimiter'>
                  </MethodReference>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                  <PathExpression isSynthetic='false' pathString='ContractKit'>
                  </PathExpression>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetTransactionByEndDate' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetTransactionByEndDate' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='EndDate'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='isEarlierThan'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='valueDate/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='EndDate'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='valueDate/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='EndDate'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetTransactionByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetTransactionByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetTransactions' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='ActivityIdentifiedAssigneePartyRole/PartyRoleOnParty/asPerson/PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetTransactionByProduct' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetTransactionByProduct' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='Product'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='name'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concatWithDelimiter'>
                  </MethodReference>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                  <PathExpression isSynthetic='false' pathString='Product'>
                  </PathExpression>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetTransactionByStartDate' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetTransactionByStartDate' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='StartDate'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.FinancialActivitySubtypes.MoneyInActivity'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='or'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.DateLibrary' methodName='isLaterThan'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='valueDate/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='StartDate'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='valueDate/DateType'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='StartDate'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetUserByTaxID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.User&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetUserByTaxID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='TaxID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.User'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='Party/TaxID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='TaxID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetUserByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.User&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetUserByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetUserInformation' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.User'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetUser' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.User&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetUser' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetUserByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetUserByTaxID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='User' assignable='true' index='9' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.User</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForUser' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Organization' assignable='true' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Organization</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Person' assignable='true' index='11' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='ContextExtension' assignable='true' index='9' cardinality='One2One' containment='false'>
      <TypeName>org.acord.ContextExtension</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForContextExtension' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='FirstName' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyType' assignable='true' index='14'>
      <TypeName>org.acord.PartyTypeEnum</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByFirstName' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByFirstName' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='FirstName'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='PersonOwnsPersonName/givenName'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='replaceAllOccurrences'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='FirstName'>
                  </PathExpression>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='*'>
                  </Literal>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='LastName' assignable='true' index='15'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByLastName' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByLastName' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='LastName'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='like'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='PersonOwnsPersonName/surname'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <MethodExpression isSynthetic='false' infix='false'>
                  <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='replaceAllOccurrences'>
                  </MethodReference>
                  <PathExpression isSynthetic='false' pathString='LastName'>
                  </PathExpression>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='*'>
                  </Literal>
                  <Literal isSynthetic='false' typeName='java.lang.String' literalString='%'>
                  </Literal>
                </MethodExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='Error' assignable='true' index='15' cardinality='One2One' containment='false'>
      <TypeName>org.acord.Error</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForError' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='PositionName' assignable='true' index='16'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PositionType' assignable='true' index='17'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='18'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Emails' assignable='true' index='19'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetAgreementParticipantsByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Agreement.ProducerAgreement&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAgreementParticipantsByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetAgreementParticipants' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Agreement.ProducerAgreement'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetAgreementParticipants' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Agreement.ProducerAgreement&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAgreementParticipants' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetAgreementParticipantsByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetAgreementParticipantsByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetAgreementParticipantsByPartyGID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Agreement.ProducerAgreement&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAgreementParticipantsByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetAgreementParticipants' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Agreement.ProducerAgreement'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetAppointmentsByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAppointmentsByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetAppointments' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetAppointmentsByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAppointmentsByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetAppointments' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetAppointments' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAppointments' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetAppointmentsByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetAppointmentsByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='BooleanResult' assignable='true' index='20'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetContactPointsByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.ContactPointHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetContactPointsByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetContactPoints' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.ContactPointHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetContactPointsByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.ContactPointHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetContactPointsByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetContactPoints' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.ContactPointHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetContactPoints' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.ContactPointHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetContactPoints' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetContactPointsByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetContactPointsByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetLicensesByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicense&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetLicensesByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetLicenses' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicense'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetLicensesByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicense&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetLicensesByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetLicenses' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicense'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetLicenses' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicense&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetLicenses' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetLicensesByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetLicensesByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetContactPointUsageByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.ContactPointUsageHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetContactPointUsageByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetContactPointUsages' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.ContactPointUsageHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetContactPointUsageByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.ContactPointUsageHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetContactPointUsageByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetContactPointUsages' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.ContactPointUsageHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetContactPointUsage' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.ContactPointUsageHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetContactPointUsage' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetContactPointUsageByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetContactPointUsageByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetRegulatoryActionByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.RegulatoryActionHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetRegulatoryActionByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetRegulatoryAction' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.RegulatoryActionHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetRegulatoryActionByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.RegulatoryActionHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetRegulatoryActionByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetRegulatoryAction' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.RegulatoryActionHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetRegulatoryActionUsage' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.RegulatoryActionHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetRegulatoryActionUsage' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetRegulatoryActionByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetRegulatoryActionByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetNIPRDetailsForAppointmentByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetNIPRDetailsForAppointmentByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetNIPRDetailsForAppointment' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetNIPRDetailsForAppointmentByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetNIPRDetailsForAppointmentByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetNIPRDetailsForAppointment' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetNIPRDetailsForAppointment' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetNIPRDetailsForAppointment' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetNIPRDetailsForAppointmentByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetNIPRDetailsForAppointmentByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='Reason' assignable='true' index='23'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Result' assignable='true' index='22'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CoverLetterEmailAddress' assignable='true' index='21'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PositionGID' assignable='true' index='24'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ContractEffectiveDate' assignable='true' index='25'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EOWaived' assignable='true' index='26'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='BCExempt' assignable='true' index='27'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetOtherCompanyAppoinments' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.OtherCompanyAppoinmentsHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOtherCompanyAppoinments' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetOtherCompanyAppointments' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.OtherCompanyAppoinmentsHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='PartyID'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='PartyID'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='Code'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <Literal isSynthetic='false' typeName='java.lang.Integer' literalString='123'>
                </Literal>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='PositionTypes' assignable='true' index='28'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='HierarchyType' assignable='true' index='29'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetErrorAndOmissionsByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Agreement.ProducerAgreement&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetErrorAndOmissionsByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetErrorAndOmission' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Agreement.ProducerAgreement'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetPaymentAccountsByPartyID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Finance.BankAccount.BankAccount&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPaymentAccountsByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetPaymentAccounts' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Finance.BankAccount.BankAccount'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='BIGData' assignable='true' index='30' cardinality='One2One' containment='false'>
      <TypeName>org.acord.BIGData</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForBIGData' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='CaseID' assignable='true' index='31'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetAgreementParticipantsByPartyIDAndCaseID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Agreement.ProducerAgreement&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetAgreementParticipantsByPartyIDAndCaseID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='PartyID'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='CaseID'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetAPIDForCase' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Agreement.ProducerAgreement'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='PartyID'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='PartyID'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='true'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='CaseID'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
                <PathExpression isSynthetic='false' pathString='CaseID'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='setupDCMDataDetails' assignable='true' index='32' cardinality='One2One' containment='false'>
      <TypeName>org.acord.setupDCMDataDetails</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForsetupDCMDataDetails' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='APID' assignable='true' index='33'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='GetPersonByAPID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Person&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetPersonByAPID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='APID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Person'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='ProducerAgreement/name'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='APID'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetOrganizationByAPID' assignable='false' typeInferred='true'>
      <TypeName>Set&lt;org.acord.aim.Party.Organization&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetOrganizationByAPID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='APID'>
            </PathExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.aim.Party.Organization'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='ProducerAgreement/name'>
                  <VariablePathRoot isSynthetic='false' variableName='element'>
                  </VariablePathRoot>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='APID'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <RelationshipProperty isSynthetic='false' name='PositionData' assignable='true' index='34' cardinality='One2Many' containment='false' collectionType='List'>
      <TypeName>org.acord.PositionData</TypeName>
      <RelationshipProperty isSynthetic='false' name='IPMContextForPositionData' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <CustomProperty isSynthetic='false' name='GetFIAgreementsByPartyGID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.FIAgreementsHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetFIAgreementsByPartyGID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetFIAgreements' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.FIAgreementsHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyGID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetFIAgreementsByPartyID' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.FIAgreementsHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetFIAgreementsByPartyID' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <ConditionalExpression isSynthetic='false'>
          <MethodExpression isSynthetic='false' infix='true'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.BooleanLibrary' methodName='and'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='hasValue'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.MiscLibrary' methodName='isCurrentDataServiceOperation'>
              </MethodReference>
              <GenericModelObjectArgument isSynthetic='false' targetName='IPMDataService/GetFIAgreements' modelObjectClass='com.pantero.metamodel.operations.DataServiceOperation'>
              </GenericModelObjectArgument>
            </MethodExpression>
          </MethodExpression>
          <SelectExpression isSynthetic='false' variableName='element'>
            <PathExpression isSynthetic='false' pathString='.'>
              <RootCollectionPathRoot isSynthetic='false' typeName='org.acord.FIAgreementsHelper'>
              </RootCollectionPathRoot>
            </PathExpression>
            <MethodExpression isSynthetic='false' infix='true'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.ObjectLibrary' methodName='isEqualTo'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='PartyID'>
                <VariablePathRoot isSynthetic='false' variableName='element'>
                </VariablePathRoot>
              </PathExpression>
              <PathExpression isSynthetic='false' pathString='PartyID'>
              </PathExpression>
            </MethodExpression>
            <PathExpression isSynthetic='false' pathString='.'>
              <VariablePathRoot isSynthetic='false' variableName='element'>
              </VariablePathRoot>
            </PathExpression>
          </SelectExpression>
        </ConditionalExpression>
      </GetterMethod>
    </CustomProperty>
    <CustomProperty isSynthetic='false' name='GetFIAgreementsUsage' assignable='false' typeInferred='false'>
      <TypeName>Set&lt;org.acord.FIAgreementsHelper&gt;</TypeName>
      <GetterMethod isSynthetic='false' name='getGetFIAgreementsUsage' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.utilities.Utils' methodName='intersection'>
          </MethodReference>
          <PathExpression isSynthetic='false' pathString='GetFIAgreementsByPartyID'>
          </PathExpression>
          <PathExpression isSynthetic='false' pathString='GetFIAgreementsByPartyGID'>
          </PathExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='EligibilityResult' assignable='true' index='35'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Activeproductprofile' assignable='true' index='36'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LoaDatas' assignable='true' index='37'>
      <TypeName>List&lt;org.acord.LoaData&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LastStatusReason' assignable='true' index='38'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LastStatusResult' assignable='true' index='39'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.User' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='SecurityGroup' assignable='true' index='1'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LoginName' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='email' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Password' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Party' assignable='true' index='5' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='false' name='UserForParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <KeyDescriptor isSynthetic='false' name='partyid' enrichment='true'>
      <PropertyName>PartyID</PropertyName>
    </KeyDescriptor>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.BIGContext' isAbstract='false'>
    <RelationshipProperty isSynthetic='false' name='Person' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='false' name='BIGContextForPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Organization' assignable='true' index='1' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Party.Organization</TypeName>
      <RelationshipProperty isSynthetic='false' name='BIGContextForOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='RequestID' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='URL' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Services' assignable='true' index='4'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Description' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='User' assignable='true' index='7' cardinality='One2One' containment='false'>
      <TypeName>org.acord.User</TypeName>
      <RelationshipProperty isSynthetic='false' name='BIGContextForUser' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='BIGContextExtension' assignable='true' index='8' cardinality='One2One' containment='false'>
      <TypeName>org.acord.BIGContextExtension</TypeName>
      <RelationshipProperty isSynthetic='false' name='BIGContextForBIGContextExtension' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Error' assignable='true' index='9' cardinality='One2One' containment='false'>
      <TypeName>org.acord.Error</TypeName>
      <RelationshipProperty isSynthetic='false' name='BIGContextForError' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <KeyDescriptor isSynthetic='false' name='requestID' enrichment='true'>
      <PropertyName>RequestID</PropertyName>
    </KeyDescriptor>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Party.PersonDetailSubtypes.ReferenceDetail' superclassName='org.acord.aim.Party.PartyDetailSubtypes.PersonDetail' isAbstract='false'>
    <Description>Types of general personal activities.

 e.g: Alcohol Use, Hobbies, Tobacco Use</Description>
    <AttributeProperty isSynthetic='false' name='description' originalName='description' assignable='true' index='1'>
      <Description>A textual description of the lifestyle detail.</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='YearsKnown' originalName='frequencyCode' assignable='true' index='0'>
      <Description>How often the person engages in this hobby/lifestyle activity on an annual basis.</Description>
      <TypeName>java.lang.Object</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='company' originalName='motive' assignable='true' index='2'>
      <Description>The motive/reason for the lifestyle choice/activity .</Description>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Party' assignable='true' index='3' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.Party.Party</TypeName>
      <RelationshipProperty isSynthetic='false' name='ReferenceDetailForParty' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.ContextExtension' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='hasAgreementParticipant' assignable='true' index='5'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasContactPoint' assignable='true' index='6'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasCourse' assignable='true' index='7'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasErrorAndOmission' assignable='true' index='8'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasLicense' assignable='true' index='9'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasPaymentAccount' assignable='true' index='10'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasPosition' assignable='true' index='11'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasAppointment' assignable='true' index='8'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasLicenseLine' assignable='true' index='7'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasPartyStatus' assignable='true' index='9'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasComponentParticipant' assignable='true' index='10'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasContactPointUsage' assignable='true' index='11'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='hasFIAgreement' assignable='true' index='12'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.LineOfAuthority' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Code' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Name' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CECreditsNeeded' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CECompliance' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Status' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='IssueDate' assignable='true' index='6' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
      <RelationshipProperty isSynthetic='false' name='LineOfAuthorityForIssueDate' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='StatusDate' assignable='true' index='7' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
      <RelationshipProperty isSynthetic='false' name='LineOfAuthorityForStatusDate' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Status' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='FEIN' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='StatusDate' assignable='true' index='6' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseComponentForStatusDate1' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='CompanyCode' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOA' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='EndDate' assignable='true' index='8' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseComponentForEndDate1' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='ApptGID' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Jurisdiction' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SubJurisdiction' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Terminate' assignable='true' index='12'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SendToNIPR' assignable='true' index='13'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='LineOfAuthority' assignable='true' index='14' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.LineOfAuthority</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseComponentForLineOfAuthority' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='LicenseGID' assignable='true' index='15'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='NIPRRequests' assignable='true' index='16'>
      <TypeName>List&lt;org.acord.NIPRRequest&gt;</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='AppointmentStatus' assignable='true' index='17' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.AppointmentStatus</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseComponentForAppointmentStatus' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.BIGContextExtension' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='ClientCaseId' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CreditCheckResultCode' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CriminalBackgroundCheckResultCode' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OFACBackgroundCheckResultCode' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PassReviewStatusCode' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Client' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ClientBillingCodeNum' assignable='true' index='11'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ClientLevel' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='DupOverrideCode' assignable='true' index='13'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Notes' assignable='true' index='14'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='RequestDate' assignable='true' index='15'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Requester' assignable='true' index='16'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SubjectWantsCopyInd' assignable='true' index='17'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.NIPRContext' isAbstract='false'>
    <RelationshipProperty isSynthetic='false' name='Organization' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Organization</TypeName>
      <RelationshipProperty isSynthetic='false' name='NIPRContextForOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='TaxID' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LastName' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Name' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='NPN' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Person' assignable='true' index='5' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='false' name='NIPRContextForPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='PinNumber' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CustomerNumber' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Type' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Transaction' assignable='true' index='14' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.Transaction</TypeName>
      <RelationshipProperty isSynthetic='false' name='NIPRContextForTransaction1' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Error' assignable='true' index='13' cardinality='One2One' containment='false'>
      <TypeName>org.acord.Error</TypeName>
      <RelationshipProperty isSynthetic='false' name='NIPRContextForError' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonProducerLicense' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.PersonRegistration' isAbstract='false'>
    <RelationshipProperty isSynthetic='false' name='ProducerLicenseComponent' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent</TypeName>
      <RelationshipProperty isSynthetic='false' name='PersonProducerLicenseForProducerLicenseComponent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='LineOfAuthority' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.LineOfAuthority</TypeName>
      <RelationshipProperty isSynthetic='false' name='PersonProducerLicenseForLineOfAuthority' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='ApptOnly' assignable='true' index='2'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.OrganizationProducerLicense' superclassName='org.acord.aim.Registration.PartyRegistrationSubtypes.OrganizationRegistration' isAbstract='false'>
    <RelationshipProperty isSynthetic='false' name='ProducerLicenseComponent' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicenseComponent</TypeName>
      <RelationshipProperty isSynthetic='false' name='OrganizationProducerLicenseForProducerLicenseComponent' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='LineOfAuthority' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.LineOfAuthority</TypeName>
      <RelationshipProperty isSynthetic='false' name='OrganizationProducerLicenseForLineOfAuthority' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='ApptOnly' assignable='true' index='2'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EnumerationType isSynthetic='false' name='org.acord.PartyTypeEnum' restricts='java.lang.String'>
    <Enumerand isSynthetic='false' name='Person' generator='Person'>
    </Enumerand>
    <Enumerand isSynthetic='false' name='Organization' generator='Organization'>
    </Enumerand>
  </EnumerationType>
  <EntityType isSynthetic='false' name='org.acord.aim.Party.Position' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='type' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='name' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ID' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ParentPositionName' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ParentPositionID' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='HierachyName' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ParentPositionType' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.Transaction' isAbstract='false'>
    <RelationshipProperty isSynthetic='false' name='Person' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='false' name='TransactionForPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Organization' assignable='true' index='1' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Organization</TypeName>
      <RelationshipProperty isSynthetic='false' name='TransactionForOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='Customer' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CustomerBatch' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CustomerTrans' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Entity' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='NIPRTrans' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ProcessFee' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StateCode' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StateFee' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='TransactionFee' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='TransactionType' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Valid' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='TransactionStatus' assignable='true' index='13'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <CustomProperty isSynthetic='false' name='KeyAttribute' assignable='false' typeInferred='true'>
      <TypeName>java.lang.String</TypeName>
      <GetterMethod isSynthetic='false' name='getKeyAttribute' language='EXPR'>
        <ReturnTypeDescription></ReturnTypeDescription>
        <Code></Code>
        <MethodExpression isSynthetic='false' infix='false'>
          <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concat'>
          </MethodReference>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
            </MethodReference>
            <PathExpression isSynthetic='false' pathString='CustomerTrans'>
            </PathExpression>
          </MethodExpression>
          <MethodExpression isSynthetic='false' infix='false'>
            <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concat'>
            </MethodReference>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
              </MethodReference>
              <PathExpression isSynthetic='false' pathString='CustomerBatch'>
              </PathExpression>
            </MethodExpression>
            <MethodExpression isSynthetic='false' infix='false'>
              <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='concat'>
              </MethodReference>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='Customer'>
                </PathExpression>
              </MethodExpression>
              <MethodExpression isSynthetic='false' infix='false'>
                <MethodReference isSynthetic='false' className='com.pantero.runtime.metamodel.expressions.library.StringLibrary' methodName='upperCase'>
                </MethodReference>
                <PathExpression isSynthetic='false' pathString='TransactionType'>
                </PathExpression>
              </MethodExpression>
            </MethodExpression>
          </MethodExpression>
        </MethodExpression>
      </GetterMethod>
    </CustomProperty>
    <AttributeProperty isSynthetic='false' name='Approved' assignable='true' index='14'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='ProducerRegistration' assignable='true' index='15' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerRegistration</TypeName>
      <RelationshipProperty isSynthetic='false' name='TransactionForProducerRegistration' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <KeyDescriptor isSynthetic='false' name='transKey' enrichment='true'>
      <PropertyName>KeyAttribute</PropertyName>
    </KeyDescriptor>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.Error' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Description' assignable='true' index='0'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.ContactPointHelper' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Cell' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Email' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Fax' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Pager' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Phone' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Type' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Usage' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Web' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Address' assignable='true' index='6' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.ContactandPlace.AddressSubtypes.PostalAddress</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContactPointHelperForAddress' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVContactName' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ContactPointGID' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='ContactPointUsageLoaderInputs' assignable='true' index='13' cardinality='One2One' containment='false'>
      <TypeName>org.acord.ContactPointUsageLoaderInput</TypeName>
      <RelationshipProperty isSynthetic='false' name='ContactPointHelperForContactPointUsageLoaderInputs' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='CommMode' assignable='true' defaultLiteral='MAILING' index='14'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.AgreementParticipant' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='APUnid' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AgreementName' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='4'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='5'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='APGID' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.Appointment' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='ApptGID' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ApptLine' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Company' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='3'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Jurisdiction' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='5'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.UpdatePartyContext' isAbstract='false'>
    <RelationshipProperty isSynthetic='false' name='ContextExtension' assignable='true' index='3' cardinality='One2One' containment='false'>
      <TypeName>org.acord.ContextExtension</TypeName>
      <RelationshipProperty isSynthetic='false' name='UpdatePartyContextForContextExtension' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Error' assignable='true' index='5' cardinality='One2One' containment='false'>
      <TypeName>org.acord.Error</TypeName>
      <RelationshipProperty isSynthetic='false' name='UpdatePartyContextForError' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <RelationshipProperty isSynthetic='false' name='Organization' assignable='true' index='0' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Organization</TypeName>
      <RelationshipProperty isSynthetic='false' name='UpdatePartyContextForOrganization' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Person' assignable='true' index='4' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Party.Person</TypeName>
      <RelationshipProperty isSynthetic='false' name='UpdatePartyContextForPerson' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='TaxID' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.ProducerLicense' superclassName='org.acord.aim.CommonElements.InformationModelObject' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Status' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='StatusDate' assignable='true' index='6' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseForStatusDate1' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='EndDate' assignable='true' index='8' cardinality='One2One' containment='false'>
      <TypeName>org.acord.aim.CommonElements.ComplexDataTypes.Date</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseForEndDate1' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='Jurisdiction' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SubJurisdiction' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='LineOfAuthority' assignable='true' index='14' cardinality='One2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.LineOfAuthority</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseForLineOfAuthority' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
    <AttributeProperty isSynthetic='false' name='LicenseNumber' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Resident' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LicenseType' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LicenseGID' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='Statuses' assignable='true' index='13' cardinality='Many2Many' containment='false' collectionType='Set'>
      <TypeName>org.acord.aim.Registration.PartyRegistrationSubtypes.Status</TypeName>
      <RelationshipProperty isSynthetic='false' name='ProducerLicenseForStatuses' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.ContactPointUsageHelper' superclassName='org.acord.ContactPointHelper' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='0'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='1'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ContactPointUsageGID' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='APID' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OverrideDownlineCommPref' assignable='true' index='4'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.Class' isAbstract='false'>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.ComponentParticipantHelper' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='APID' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AgreementName' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ComponentName' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.RegulatoryActionHelper' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='StateCode' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ActionID' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EntityRole' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OriginOfAction' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ReasonForAction' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Disposition' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='DateOfAction' assignable='true' index='6'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EffectiveDate' assignable='true' index='7'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EnterDate' assignable='true' index='8'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='FileRef' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Penalty' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LengthOfOrder' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StateRIRSID' assignable='true' index='12'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='13'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='14'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.AtheneOrgCustomFields' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='InitialContractDate' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OrganizationType' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SellingAgronFile' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SellingAgrVersion' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='SellingAgrDate' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AMLExclusion' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EOWaived' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='BackgroundCheckWaived' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='BusinessType' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AgencyFormationDate' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='DoingBusinessAs' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='DTCCID' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOPExemptUntil' assignable='true' index='12'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOPExemptReason' assignable='true' index='13'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOPExemptReqLastName' assignable='true' index='14'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CRDNumber' assignable='true' index='15'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVCompDiscussed' assignable='true' index='16'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVRestrCommunication' assignable='true' index='17'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVAdvofCommissions' assignable='true' index='18'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVAdvChargebackTimeFrame' assignable='true' index='19'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='NettingOfCommissions' assignable='true' index='20'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVCustodialBusiness' assignable='true' index='21'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVOrderEntry' assignable='true' index='22'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVOrderEntSource' assignable='true' index='23'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVEApp' assignable='true' index='24'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVEAppSource' assignable='true' index='25'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVDIstAccIDReq' assignable='true' index='26'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVDisAuthority' assignable='true' index='27'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVAccToWeb' assignable='true' index='28'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVEarnEligible' assignable='true' index='29'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIncTripEligible' assignable='true' index='30'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVExpEligible' assignable='true' index='31'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVBackOffCode' assignable='true' index='32'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVSuitabilityDel' assignable='true' index='33'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVContractMailingDest' assignable='true' index='34'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVDOLFIStatus' assignable='true' index='38'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVDOLEffectiveDate' assignable='true' index='39'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVHeldCompBypass' assignable='true' index='40'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVAdvOnClientInitFunds' assignable='true' index='38'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIPCVersion' assignable='true' index='39'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIPCEffectiveDate' assignable='true' index='40'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIPCOnFile' assignable='true' index='41'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
	<AttributeProperty isSynthetic='false' name='AVProductGroup' assignable='true' index='42'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.AthenePersonCustomFields' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='InitialContractDate' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='BeneficiaryInfoOnFile' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='crdnumber' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='dtccid' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='DBA' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Designation' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOPExemptReason' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOPExemptReqLastName' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LOPExemptUntil' assignable='true' index='8'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIPCVersion' assignable='true' index='9'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIPCEffectiveDate' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AVIPCOnFile' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.NIPRErrors' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='ErrorCode' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Message' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Severity' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.NIPRRequest' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='RequestDate' assignable='true' index='0'>
      <TypeName>com.progress.dataxtend.si.util.DateTime</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ProcessDate' assignable='true' index='1'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='GatewayStatus' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='GatewayTransID' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Requestor' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Type' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Errors' assignable='true' index='6'>
      <TypeName>List&lt;org.acord.NIPRErrors&gt;</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.OtherCompanyAppoinmentsHelper' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Appointment' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Code' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Agreement.Status' isAbstract='false'>
    <Description>An agreement defining the way in which a producer role can act on behalf of a financial services provider. 
 
e.g: Broker agreement between Broker ABC and Acme Insurance Company.</Description>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='0'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusType' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='1'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.Status' isAbstract='false'>
    <Description>An agreement defining the way in which a producer role can act on behalf of a financial services provider. 
 
e.g: Broker agreement between Broker ABC and Acme Insurance Company.</Description>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='0'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='1'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusType' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.aim.Registration.PartyRegistrationSubtypes.AppointmentStatus' isAbstract='false'>
    <Description>An agreement defining the way in which a producer role can act on behalf of a financial services provider. 
 
e.g: Broker agreement between Broker ABC and Acme Insurance Company.</Description>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='0'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='1'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusType' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.BIGData' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='RequestID' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusCode' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Errors' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ClientCaseId' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PassReviewStatusCode' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CreditCheckResultCode' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='CriminalBackgroundCheckResultCode' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OFACBackgroundCheckResultCode' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='RedirectLink' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.ContactPointUsageLoaderInput' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='ContactPointUsageGID' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='UsageType' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StartDate' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='APID' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OverrideDownlineCommPref' assignable='true' index='5'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.setupDCMDataDetails' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='ActivityType' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='isBackgroundcheckRequired' assignable='true' index='1'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LegalQuestionD' assignable='true' index='2'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='LegalQuestionH' assignable='true' index='3'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ContractEffectiveDate' assignable='true' index='4'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='APID' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ParentPositionGID' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PositionType' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PositionGID' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Error' assignable='true' index='9'>
      <TypeName>List&lt;java.lang.String&gt;</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AgreementName' assignable='true' index='10'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ActiveProductProfileName' assignable='true' index='11'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AMLTrainingDate' assignable='true' index='11'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ModelLawTrainingDate' assignable='true' index='12'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='IAIndexTrainingDate' assignable='true' index='13'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='HasRegulatoryAction' assignable='true' index='15'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='FourHRIntTrainingDate' assignable='true' index='16'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='NYREGTrainingDate' assignable='true' index='18'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OneHRIntTrainingDate' assignable='true' index='17'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ServicingOnly' assignable='true' index='19'>
      <TypeName>java.lang.Boolean</TypeName>
    </AttributeProperty>
	<AttributeProperty isSynthetic='false' name='ProductPrefPreset' assignable='true' index='20'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
	<AttributeProperty isSynthetic='false' name='ProductGroup' assignable='true' index='22'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>	
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.PositionData' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='PositionType' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PositionGID' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PositionName' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <RelationshipProperty isSynthetic='false' name='PositionHolderData' assignable='true' index='3' cardinality='One2Many' containment='false' collectionType='List'>
      <TypeName>org.acord.PositionHolderData</TypeName>
      <RelationshipProperty isSynthetic='false' name='PositionDataForPositionHolderData' assignable='true'>
      </RelationshipProperty>
    </RelationshipProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.PositionHolderData' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='PartyName' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='APID' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='APStatus' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PosHolderStartDate' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PosHolderEndDate' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='ServicingOnly' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.FIAgreementsHelper' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='PartyID' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='PartyGID' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='FIAgreementGID' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='AgreementName' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Applicable' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='OnFile' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Version' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='Date' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='EndDate' assignable='true' index='8'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.LoaData' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='endDate' assignable='true' index='0'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='startDate' assignable='true' index='1'>
      <TypeName>com.progress.dataxtend.si.util.Date</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusCode' assignable='true' index='2'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusReason' assignable='true' index='3'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='statusType' assignable='true' index='4'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='loaCode' assignable='true' index='5'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='licNumber' assignable='true' index='6'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='name' assignable='true' index='7'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.PartyLastStatusReason' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Result' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <EntityType isSynthetic='false' name='org.acord.PartyStatusReason' isAbstract='false'>
    <AttributeProperty isSynthetic='false' name='Result' assignable='true' index='0'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
    <AttributeProperty isSynthetic='false' name='StatusReason' assignable='true' index='1'>
      <TypeName>java.lang.String</TypeName>
    </AttributeProperty>
  </EntityType>
  <Import schemaName='runtimereport.CommonRuntimeReportSchema'/>
</DomainSchema>
